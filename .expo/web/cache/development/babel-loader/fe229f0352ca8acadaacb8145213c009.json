{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matt\\\\Documents\\\\GitHub\\\\pro-creature-habits\\\\node_modules\\\\react-native-gesture-handler\\\\createNativeWrapper.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport NativeViewGestureHandler from \"./NativeViewGestureHandler\";\nvar NATIVE_WRAPPER_PROPS_FILTER = ['id', 'minPointers', 'enabled', 'waitFor', 'simultaneousHandlers', 'shouldCancelWhenOutside', 'hitSlop', 'onGestureEvent', 'onHandlerStateChange', 'onBegan', 'onFailed', 'onCancelled', 'onActivated', 'onEnded', 'shouldActivateOnStart', 'disallowInterruption', 'onGestureHandlerEvent', 'onGestureHandlerStateChange'];\nexport default function createNativeWrapper(Component) {\n  var _this = this;\n\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var ComponentWrapper = React.forwardRef(function (props, ref) {\n    var gestureHandlerProps = Object.keys(props).reduce(function (res, key) {\n      if (NATIVE_WRAPPER_PROPS_FILTER.indexOf(key) !== -1) {\n        res[key] = props[key];\n      }\n\n      return res;\n    }, _objectSpread({}, config));\n    return React.createElement(NativeViewGestureHandler, _extends({}, gestureHandlerProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }), React.createElement(Component, _extends({}, props, {\n      ref: ref,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    })));\n  });\n  ComponentWrapper.propTypes = _objectSpread({}, Component.propTypes);\n  ComponentWrapper.displayName = Component.displayName || 'ComponentWrapper';\n  return ComponentWrapper;\n}","map":{"version":3,"sources":["C:/Users/Matt/Documents/GitHub/pro-creature-habits/node_modules/react-native-gesture-handler/createNativeWrapper.js"],"names":["React","NativeViewGestureHandler","NATIVE_WRAPPER_PROPS_FILTER","createNativeWrapper","Component","config","ComponentWrapper","forwardRef","props","ref","gestureHandlerProps","Object","keys","reduce","res","key","indexOf","propTypes","displayName"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,wBAAP;AASA,IAAMC,2BAA2B,GAAG,CAClC,IADkC,EAElC,aAFkC,EAGlC,SAHkC,EAIlC,SAJkC,EAKlC,sBALkC,EAMlC,yBANkC,EAOlC,SAPkC,EAQlC,gBARkC,EASlC,sBATkC,EAUlC,SAVkC,EAWlC,UAXkC,EAYlC,aAZkC,EAalC,aAbkC,EAclC,SAdkC,EAelC,uBAfkC,EAgBlC,sBAhBkC,EAiBlC,uBAjBkC,EAkBlC,6BAlBkC,CAApC;AAqBA,eAAe,SAASC,mBAAT,CAA6BC,SAA7B,EAAqD;AAAA;;AAAA,MAAbC,MAAa,uEAAJ,EAAI;AAClE,MAAMC,gBAAgB,GAAGN,KAAK,CAACO,UAAN,CAAiB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAExD,QAAMC,mBAAmB,GAAGC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,MAAnB,CAC1B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACZ,UAAIb,2BAA2B,CAACc,OAA5B,CAAoCD,GAApC,MAA6C,CAAC,CAAlD,EAAqD;AACnDD,QAAAA,GAAG,CAACC,GAAD,CAAH,GAAWP,KAAK,CAACO,GAAD,CAAhB;AACD;;AACD,aAAOD,GAAP;AACD,KANyB,oBAOrBT,MAPqB,EAA5B;AASA,WACE,oBAAC,wBAAD,eAA8BK,mBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,oBAAC,SAAD,eAAeF,KAAf;AAAsB,MAAA,GAAG,EAAEC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD,GAhBwB,CAAzB;AAkBAH,EAAAA,gBAAgB,CAACW,SAAjB,qBACKb,SAAS,CAACa,SADf;AAGAX,EAAAA,gBAAgB,CAACY,WAAjB,GAA+Bd,SAAS,CAACc,WAAV,IAAyB,kBAAxD;AAEA,SAAOZ,gBAAP;AACD","sourcesContent":["import React from 'react';\r\n\r\nimport NativeViewGestureHandler from './NativeViewGestureHandler';\r\n\r\n/*\r\n * This array should consist of:\r\n *   - All keys in propTypes from NativeGestureHandler\r\n *     (and all keys in GestureHandlerPropTypes)\r\n *   - 'onGestureHandlerEvent'\r\n *   - 'onGestureHandlerStateChange'\r\n */\r\nconst NATIVE_WRAPPER_PROPS_FILTER = [\r\n  'id',\r\n  'minPointers',\r\n  'enabled',\r\n  'waitFor',\r\n  'simultaneousHandlers',\r\n  'shouldCancelWhenOutside',\r\n  'hitSlop',\r\n  'onGestureEvent',\r\n  'onHandlerStateChange',\r\n  'onBegan',\r\n  'onFailed',\r\n  'onCancelled',\r\n  'onActivated',\r\n  'onEnded',\r\n  'shouldActivateOnStart',\r\n  'disallowInterruption',\r\n  'onGestureHandlerEvent',\r\n  'onGestureHandlerStateChange',\r\n];\r\n\r\nexport default function createNativeWrapper(Component, config = {}) {\r\n  const ComponentWrapper = React.forwardRef((props, ref) => {\r\n    // filter out props that should be passed to gesture handler wrapper\r\n    const gestureHandlerProps = Object.keys(props).reduce(\r\n      (res, key) => {\r\n        if (NATIVE_WRAPPER_PROPS_FILTER.indexOf(key) !== -1) {\r\n          res[key] = props[key];\r\n        }\r\n        return res;\r\n      },\r\n      { ...config } // watch out not to modify config\r\n    );\r\n    return (\r\n      <NativeViewGestureHandler {...gestureHandlerProps}>\r\n        <Component {...props} ref={ref} />\r\n      </NativeViewGestureHandler>\r\n    );\r\n  });\r\n\r\n  ComponentWrapper.propTypes = {\r\n    ...Component.propTypes,\r\n  };\r\n  ComponentWrapper.displayName = Component.displayName || 'ComponentWrapper';\r\n\r\n  return ComponentWrapper;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}