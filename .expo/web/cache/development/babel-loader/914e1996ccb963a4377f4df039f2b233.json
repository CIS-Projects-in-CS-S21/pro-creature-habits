{"ast":null,"code":"import UIManager from \"../../exports/UIManager\";\nvar TextInputState = {\n  _currentlyFocusedNode: null,\n  currentlyFocusedField: function currentlyFocusedField() {\n    if (document.activeElement !== this._currentlyFocusedNode) {\n      this._currentlyFocusedNode = null;\n    }\n\n    return this._currentlyFocusedNode;\n  },\n  focusTextInput: function focusTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = textFieldNode;\n\n      if (document.activeElement !== textFieldNode) {\n        UIManager.focus(textFieldNode);\n      }\n    }\n  },\n  blurTextInput: function blurTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = null;\n\n      if (document.activeElement === textFieldNode) {\n        UIManager.blur(textFieldNode);\n      }\n    }\n  }\n};\nexport default TextInputState;","map":{"version":3,"sources":["C:/Users/Matt/Documents/GitHub/pro-creature-habits/node_modules/react-native-web/dist/modules/TextInputState/index.js"],"names":["UIManager","TextInputState","_currentlyFocusedNode","currentlyFocusedField","document","activeElement","focusTextInput","textFieldNode","focus","blurTextInput","blur"],"mappings":"AASA,OAAOA,SAAP;AAOA,IAAIC,cAAc,GAAG;AAInBC,EAAAA,qBAAqB,EAAE,IAJJ;AAUnBC,EAAAA,qBAAqB,EAAE,SAASA,qBAAT,GAAiC;AACtD,QAAIC,QAAQ,CAACC,aAAT,KAA2B,KAAKH,qBAApC,EAA2D;AACzD,WAAKA,qBAAL,GAA6B,IAA7B;AACD;;AAED,WAAO,KAAKA,qBAAZ;AACD,GAhBkB;AAuBnBI,EAAAA,cAAc,EAAE,SAASA,cAAT,CAAwBC,aAAxB,EAAuC;AACrD,QAAIA,aAAa,KAAK,IAAtB,EAA4B;AAC1B,WAAKL,qBAAL,GAA6BK,aAA7B;;AAEA,UAAIH,QAAQ,CAACC,aAAT,KAA2BE,aAA/B,EAA8C;AAC5CP,QAAAA,SAAS,CAACQ,KAAV,CAAgBD,aAAhB;AACD;AACF;AACF,GA/BkB;AAsCnBE,EAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBF,aAAvB,EAAsC;AACnD,QAAIA,aAAa,KAAK,IAAtB,EAA4B;AAC1B,WAAKL,qBAAL,GAA6B,IAA7B;;AAEA,UAAIE,QAAQ,CAACC,aAAT,KAA2BE,aAA/B,EAA8C;AAC5CP,QAAAA,SAAS,CAACU,IAAV,CAAeH,aAAf;AACD;AACF;AACF;AA9CkB,CAArB;AAgDA,eAAeN,cAAf","sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nimport UIManager from '../../exports/UIManager';\r\n/**\r\n * This class is responsible for coordinating the \"focused\"\r\n * state for TextInputs. All calls relating to the keyboard\r\n * should be funneled through here\r\n */\r\n\r\nvar TextInputState = {\r\n  /**\r\n   * Internal state\r\n   */\r\n  _currentlyFocusedNode: null,\r\n\r\n  /**\r\n   * Returns the ID of the currently focused text field, if one exists\r\n   * If no text field is focused it returns null\r\n   */\r\n  currentlyFocusedField: function currentlyFocusedField() {\r\n    if (document.activeElement !== this._currentlyFocusedNode) {\r\n      this._currentlyFocusedNode = null;\r\n    }\r\n\r\n    return this._currentlyFocusedNode;\r\n  },\r\n\r\n  /**\r\n   * @param {Object} TextInputID id of the text field to focus\r\n   * Focuses the specified text field\r\n   * noop if the text field was already focused\r\n   */\r\n  focusTextInput: function focusTextInput(textFieldNode) {\r\n    if (textFieldNode !== null) {\r\n      this._currentlyFocusedNode = textFieldNode;\r\n\r\n      if (document.activeElement !== textFieldNode) {\r\n        UIManager.focus(textFieldNode);\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @param {Object} textFieldNode id of the text field to focus\r\n   * Unfocuses the specified text field\r\n   * noop if it wasn't focused\r\n   */\r\n  blurTextInput: function blurTextInput(textFieldNode) {\r\n    if (textFieldNode !== null) {\r\n      this._currentlyFocusedNode = null;\r\n\r\n      if (document.activeElement === textFieldNode) {\r\n        UIManager.blur(textFieldNode);\r\n      }\r\n    }\r\n  }\r\n};\r\nexport default TextInputState;"]},"metadata":{},"sourceType":"module"}