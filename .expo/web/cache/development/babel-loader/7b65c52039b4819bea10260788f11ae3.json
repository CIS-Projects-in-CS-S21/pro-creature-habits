{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/samirsingh/Desktop/pro-creature-habits/src/screens/Profile.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CHANGE } from \"../redux/petInfo\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#406BE9'\n  },\n  text: {\n    color: 'white',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingTop: 5\n  },\n  text2: {\n    color: 'black',\n    fontSize: 20,\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  image: {\n    width: 100,\n    height: 100,\n    borderWidth: 2,\n    borderColor: \"white\",\n    borderRadius: 20,\n    padding: 8,\n    backgroundColor: \"lightblue\",\n    margin: 10\n  },\n  imageContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    marginTop: 20,\n    flexWrap: 'wrap',\n    alignContent: 'flex-end'\n  }\n});\n\nvar PetProfile = function PetProfile(_ref) {\n  var choices = _ref.choices,\n      navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  var petImgChoice = useSelector(function (state) {\n    return state.petDetails[1];\n  });\n  console.log(petImgChoice);\n  console.log(\"HELLO\");\n\n  var findImage = function findImage() {\n    console.log(petImgChoice);\n\n    if (petImgChoice == \"cat\") {\n      return require(\"../images/cat.png\");\n    } else {\n      return require(\"../images/dog.png\");\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }\n  }, \"Pet Profile Screen\"), React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }\n  }, useSelector(function (state) {\n    return state.petDetails[0];\n  })), React.createElement(View, {\n    style: styles.imageContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }\n  }, React.createElement(Image, {\n    id: \"img\",\n    style: {\n      width: 100,\n      height: 100,\n      borderWidth: 5,\n      borderRadius: 10\n    },\n    source: petImgChoice == \"cat\" ? require(\"../images/cat.png\") : require(\"../images/dog.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default PetProfile;","map":{"version":3,"sources":["/home/samirsingh/Desktop/pro-creature-habits/src/screens/Profile.js"],"names":["React","useSelector","useDispatch","CHANGE","styles","StyleSheet","create","container","flex","backgroundColor","text","color","fontSize","textAlign","paddingTop","text2","fontWeight","image","width","height","borderWidth","borderColor","borderRadius","padding","margin","imageContainer","flexDirection","justifyContent","marginTop","flexWrap","alignContent","PetProfile","choices","navigation","dispatch","petImgChoice","state","petDetails","console","log","findImage","require"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, Image } from 'react-native';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {CHANGE} from \"../redux/petInfo\";\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#406BE9',\n    },\n    text: {\n        color: 'white',\n        fontSize: 20,\n        textAlign: 'center',\n        paddingTop: 5,\n    },\n    text2: {\n            color: 'black',\n            fontSize: 20,\n            textAlign: 'center',\n            fontWeight: 'bold',\n        },\n    image: {\n        width: 100,\n        height: 100,\n        borderWidth: 2,\n        \t\tborderColor: \"white\",\n        \t\tborderRadius: 20,\n        \t\tpadding: 8,\n        \t\tbackgroundColor: \"lightblue\",\n        \t\tmargin: 10\n    },\n    imageContainer: {\n            flexDirection: 'row',\n    \t\tjustifyContent: 'space-evenly',\n    \t\tmarginTop: 20,\n    \t\tflexWrap: 'wrap',\n    \t\talignContent: 'flex-end'\n    },\n    }\n);\n\n\nconst PetProfile = ({choices, navigation}) => {\n\nconst dispatch = useDispatch();\nconst petImgChoice = useSelector(state => state.petDetails[1]);\n\nconsole.log(petImgChoice);\nconsole.log(\"HELLO\");\n\nconst findImage = () => {\nconsole.log(petImgChoice);\n    \tif (petImgChoice == \"cat\") {\n    \t    return require('../images/cat.png');\n    \t} else {\n    \t    return require('../images/dog.png');\n    \t}\n    }\n\n\treturn (\n\n\t\t<View style={styles.container}>\n\t\t\t<Text style={styles.text}>Pet Profile Screen</Text>\n\t\t\t<Text style={styles.text}>\n\t\t\t{useSelector(state => state.petDetails[0])}\n\t\t\t</Text>\n\t\t\t<View style={styles.imageContainer}>\n            <Image id=\"img\"\n                style={{width: 100,height: 100,borderWidth: 5,borderRadius: 10}}\n                source={(petImgChoice == \"cat\") ? require('../images/cat.png') : require('../images/dog.png')}\n            />\n            </View>\n\n\t\t</View>\n\n\t);\n};\n\nexport default PetProfile;\n"]},"metadata":{},"sourceType":"module"}