{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/elianacohen/AndroidStudioProjects/pro-creature-habits/src/components/petInventoryComponents/PetImage.js\";\n\nimport React, { useRef } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ImageOverlay from \"react-native-image-overlay\";\nimport { EAT } from \"../../redux/petInventory\";\nvar styles = StyleSheet.create({\n  cardContainer: {\n    borderWidth: 2,\n    padding: 8,\n    backgroundColor: 'rgba(49,69,194,0.7)',\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 3,\n    elevation: 11\n  },\n  circle: {\n    width: 20,\n    height: 20,\n    borderRadius: 10,\n    color: 'white',\n    borderWidth: 1,\n    borderColor: 'white',\n    borderStyle: 'solid',\n    textAlign: \"center\",\n    fontWeight: 'bold'\n  },\n  itemImage: {\n    width: 75,\n    height: 75,\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 3\n  },\n  overlay: {\n    width: 150,\n    height: 150,\n    borderWidth: 5,\n    borderRadius: 10\n  }\n});\n\nvar PetImage = function PetImage(props) {\n  var dispatch = useDispatch();\n  var petImgChoice = useSelector(function (state) {\n    return state.petDetails[1];\n  });\n  var items = useSelector(function (state) {\n    return state.petInv;\n  });\n  var names = [];\n\n  for (var _i = 0, _Object$entries = Object.entries(items); _i < _Object$entries.length; _i++) {\n    var _ref = _Object$entries[_i];\n\n    var _ref2 = _slicedToArray(_ref, 2);\n\n    var key = _ref2[0];\n    var value = _ref2[1];\n\n    if (items[key].wear) {\n      names.push(key);\n    }\n  }\n\n  var fadeAnim = useRef(new Animated.Value(0)).current;\n\n  var fadeOut = function fadeOut() {\n    Animated.timing(fadeAnim, {\n      toValue: 0,\n      duration: 5000\n    }).start();\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 2\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 150,\n      height: 150,\n      borderWidth: 5,\n      borderRadius: 10\n    },\n    source: petImgChoice == \"cat\" ? require(\"../../images/cat.png\") : require(\"../../images/dog.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }), names.map(function (name, index) {\n    return React.createElement(Image, {\n      style: {\n        width: 150,\n        height: 150,\n        borderWidth: 5,\n        borderRadius: 10,\n        position: 'absolute'\n      },\n      source: items[name].wearUri,\n      key: name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 12\n      }\n    });\n  }));\n};\n\nexport default PetImage;","map":{"version":3,"sources":["/Users/elianacohen/AndroidStudioProjects/pro-creature-habits/src/components/petInventoryComponents/PetImage.js"],"names":["React","useRef","useDispatch","useSelector","ImageOverlay","EAT","styles","StyleSheet","create","cardContainer","borderWidth","padding","backgroundColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","circle","borderRadius","color","borderColor","borderStyle","textAlign","fontWeight","itemImage","overlay","PetImage","props","dispatch","petImgChoice","state","petDetails","items","petInv","names","Object","entries","key","value","wear","push","fadeAnim","Animated","Value","current","fadeOut","timing","toValue","duration","start","require","map","name","index","position","wearUri"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport {Image, Text, View, StyleSheet,ImageBackground, Animated} from \"react-native\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport ImageOverlay from \"react-native-image-overlay\";\nimport {EAT} from \"../../redux/petInventory\";\n\nconst styles = StyleSheet.create({\n\tcardContainer: {\n\t\tborderWidth: 2,\n\t\tpadding: 8,\n\t\tbackgroundColor: 'rgba(49,69,194,0.7)',\n\t\tshadowOffset: {width: 0, height: 5},\n\t\tshadowOpacity: 0.8,\n\t\tshadowRadius: 3,\n\t\televation: 11\n\t},\n\tcircle: {\n       width: 20,\n       height: 20,\n       borderRadius: 10,\n       color: 'white',\n       borderWidth: 1,\n       borderColor: 'white',\n       borderStyle: 'solid',\n       textAlign: \"center\",\n       fontWeight: 'bold'\n    },\n\titemImage: {\n\t\twidth:75,\n\t\theight:75,\n\t\tshadowOffset: {width: 0, height: 1},\n\t\tshadowOpacity: 0.8,\n\t\tshadowRadius: 3,\n\t},\n\toverlay: {\n          width: 150,height: 150,borderWidth: 5,borderRadius: 10,\n        }\n});\n\nconst PetImage = (props) => {\n\n    const dispatch = useDispatch();\n\n    const petImgChoice = useSelector(state => state.petDetails[1]);\n    const items = useSelector(state => state.petInv);\n\tlet names = [];\n    for (const [key, value] of Object.entries(items)) {\n        if (items[key].wear) {\n            names.push(key);\n        }\n\n    }\n\nconst fadeAnim = useRef(new Animated.Value(0)).current;\n\n    const fadeOut = () => {\n    // Will change fadeAnim value to 0 in 5 seconds\n        Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: 5000\n        }).start();\n    };\n\n\n\n\n\treturn (\n\t<View>\n\t\t<Image\n                        style={{width: 150,height: 150,borderWidth: 5,borderRadius: 10}}\n                        source={(petImgChoice == \"cat\") ? require('../../images/cat.png') : require('../../images/dog.png')}\n         />\n         {names.map((name, index) => {\n         return (\n           <Image\n           style={{width: 150,height: 150,borderWidth: 5,borderRadius: 10,position:'absolute'}}\n                                   source = {items[name].wearUri}\n                                   key = {name}\n           />\n           )})}\n\n       </View>\n\t)\n}\n\nexport default PetImage;"]},"metadata":{},"sourceType":"module"}