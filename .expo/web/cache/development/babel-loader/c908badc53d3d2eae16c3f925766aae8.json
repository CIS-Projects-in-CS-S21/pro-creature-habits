{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { achievementsList } from \"../components/achievementsList\";\nexport var ACH_PROGRESS = 'ACH_PROGRESS';\nexport var ACH_REWARD = 'ACH_REWARD';\n\nvar achievementsCompleteReducer = function achievementsCompleteReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : achievementsList;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ACH_PROGRESS:\n      var newState = _objectSpread({}, state);\n\n      newState[action.data].completed += 1;\n\n      if (newState[action.data].completed >= newState[action.data].beginner.to_complete) {\n        newState[action.data].beginner.complete = true;\n      }\n\n      if (newState[action.data].completed >= newState[action.data].intermediate.to_complete) {\n        newState[action.data].intermediate.complete = true;\n      }\n\n      if (newState[action.data].completed >= newState[action.data].hard.to_complete) {\n        newState[action.data].hard.complete = true;\n      }\n\n      return newState;\n\n    case ACH_REWARD:\n      var newState2 = _objectSpread({}, state);\n\n      newState2[action.data[0]][action.data[1]].reward_taken = true;\n      return newState2;\n\n    default:\n      return state;\n  }\n};\n\nexport default achievementsCompleteReducer;","map":{"version":3,"sources":["C:/Users/Matt/Documents/GitHub/pro-creature-habits/src/redux/achievementsComplete.js"],"names":["achievementsList","ACH_PROGRESS","ACH_REWARD","achievementsCompleteReducer","state","action","type","newState","data","completed","beginner","to_complete","complete","intermediate","hard","newState2","reward_taken"],"mappings":";;;;;;AAAA,SAAQA,gBAAR;AACA,OAAO,IAAMC,YAAY,GAAG,cAArB;AACP,OAAO,IAAMC,UAAU,GAAG,YAAnB;;AAEP,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,GAAsC;AAAA,MAArCC,KAAqC,uEAA7BJ,gBAA6B;AAAA,MAAXK,MAAW;;AACzE,UAAOA,MAAM,CAACC,IAAd;AACC,SAAKL,YAAL;AACC,UAAIM,QAAQ,qBAAOH,KAAP,CAAZ;;AACAG,MAAAA,QAAQ,CAACF,MAAM,CAACG,IAAR,CAAR,CAAsBC,SAAtB,IAAmC,CAAnC;;AACA,UAAGF,QAAQ,CAACF,MAAM,CAACG,IAAR,CAAR,CAAsBC,SAAtB,IAAmCF,QAAQ,CAACF,MAAM,CAACG,IAAR,CAAR,CAAsBE,QAAtB,CAA+BC,WAArE,EAAkF;AACjFJ,QAAAA,QAAQ,CAACF,MAAM,CAACG,IAAR,CAAR,CAAsBE,QAAtB,CAA+BE,QAA/B,GAA0C,IAA1C;AACA;;AACD,UAAGL,QAAQ,CAACF,MAAM,CAACG,IAAR,CAAR,CAAsBC,SAAtB,IAAmCF,QAAQ,CAACF,MAAM,CAACG,IAAR,CAAR,CAAsBK,YAAtB,CAAmCF,WAAzE,EAAsF;AACrFJ,QAAAA,QAAQ,CAACF,MAAM,CAACG,IAAR,CAAR,CAAsBK,YAAtB,CAAmCD,QAAnC,GAA8C,IAA9C;AACA;;AACD,UAAGL,QAAQ,CAACF,MAAM,CAACG,IAAR,CAAR,CAAsBC,SAAtB,IAAmCF,QAAQ,CAACF,MAAM,CAACG,IAAR,CAAR,CAAsBM,IAAtB,CAA2BH,WAAjE,EAA8E;AAC7EJ,QAAAA,QAAQ,CAACF,MAAM,CAACG,IAAR,CAAR,CAAsBM,IAAtB,CAA2BF,QAA3B,GAAsC,IAAtC;AACA;;AACD,aAAOL,QAAP;;AACD,SAAKL,UAAL;AACC,UAAIa,SAAS,qBAAOX,KAAP,CAAb;;AAEAW,MAAAA,SAAS,CAACV,MAAM,CAACG,IAAP,CAAY,CAAZ,CAAD,CAAT,CAA0BH,MAAM,CAACG,IAAP,CAAY,CAAZ,CAA1B,EAA0CQ,YAA1C,GAAyD,IAAzD;AACA,aAAOD,SAAP;;AACD;AACC,aAAOX,KAAP;AApBF;AAuBA,CAxBD;;AA0BA,eAAeD,2BAAf","sourcesContent":["import {achievementsList} from '../components/achievementsList'\r\nexport const ACH_PROGRESS = 'ACH_PROGRESS';\r\nexport const ACH_REWARD = 'ACH_REWARD';\r\n\r\nconst achievementsCompleteReducer = (state = achievementsList, action) => {\r\n\tswitch(action.type) {\r\n\t\tcase ACH_PROGRESS:\r\n\t\t\tlet newState = {...state};\r\n\t\t\tnewState[action.data].completed += 1;\r\n\t\t\tif(newState[action.data].completed >= newState[action.data].beginner.to_complete) {\r\n\t\t\t\tnewState[action.data].beginner.complete = true;\r\n\t\t\t}\r\n\t\t\tif(newState[action.data].completed >= newState[action.data].intermediate.to_complete) {\r\n\t\t\t\tnewState[action.data].intermediate.complete = true;\r\n\t\t\t}\r\n\t\t\tif(newState[action.data].completed >= newState[action.data].hard.to_complete) {\r\n\t\t\t\tnewState[action.data].hard.complete = true;\r\n\t\t\t}\r\n\t\t\treturn newState;\r\n\t\tcase ACH_REWARD:\r\n\t\t\tlet newState2 = {...state};\r\n\r\n\t\t\tnewState2[action.data[0]][action.data[1]].reward_taken = true;\r\n\t\t\treturn newState2;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n\r\n}\r\n\r\nexport default achievementsCompleteReducer;\r\n"]},"metadata":{},"sourceType":"module"}