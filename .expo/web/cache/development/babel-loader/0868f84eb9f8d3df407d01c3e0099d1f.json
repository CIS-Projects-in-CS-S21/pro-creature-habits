{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatsData } from \"../components/StatsData\";\nexport var INCREMENT_STAT = 'INCREMENT_STAT';\nexport var RESET_STAT = 'RESET_STAT';\nexport var SET_STAT = 'SET_STAT';\nexport var ADD_TO_STAT = 'ADD_TO_STAT';\n\nvar statTrackerReducer = function statTrackerReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : StatsData;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INCREMENT_STAT:\n      var newStatsInc = _objectSpread({}, state);\n\n      newStatsInc[action.data].count += 1;\n      return newStatsInc;\n\n    case RESET_STAT:\n      var newStatsRes = _objectSpread({}, state);\n\n      newStatsRes[action.data].count = 0;\n      return newStatsRes;\n\n    case SET_STAT:\n      var newStatsSet = _objectSpread({}, state);\n\n      newStatsSet[action.data[0]].count = action.data[1];\n      return newStatsSet;\n\n    case ADD_TO_STAT:\n      var newStatsAdd = _objectSpread({}, state);\n\n      newStatsAdd[action.data[0]].count += action.data[1];\n      return newStatsAdd;\n\n    default:\n      return state;\n  }\n};\n\nexport default statTrackerReducer;","map":{"version":3,"sources":["C:/Users/Matt/Documents/GitHub/pro-creature-habits/src/redux/statTracker.js"],"names":["StatsData","INCREMENT_STAT","RESET_STAT","SET_STAT","ADD_TO_STAT","statTrackerReducer","state","action","type","newStatsInc","data","count","newStatsRes","newStatsSet","newStatsAdd"],"mappings":";;;;;;AAAA,SAAQA,SAAR;AACA,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;;AAEP,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAA4B;AAAA,MAA3BC,KAA2B,uEAArBN,SAAqB;AAAA,MAAVO,MAAU;;AACtD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKP,cAAL;AACC,UAAIQ,WAAW,qBAAOH,KAAP,CAAf;;AACAG,MAAAA,WAAW,CAACF,MAAM,CAACG,IAAR,CAAX,CAAyBC,KAAzB,IAAkC,CAAlC;AACA,aAAOF,WAAP;;AACD,SAAKP,UAAL;AACC,UAAIU,WAAW,qBAAON,KAAP,CAAf;;AACAM,MAAAA,WAAW,CAACL,MAAM,CAACG,IAAR,CAAX,CAAyBC,KAAzB,GAAiC,CAAjC;AACA,aAAOC,WAAP;;AACD,SAAKT,QAAL;AACC,UAAIU,WAAW,qBAAOP,KAAP,CAAf;;AACAO,MAAAA,WAAW,CAACN,MAAM,CAACG,IAAP,CAAY,CAAZ,CAAD,CAAX,CAA4BC,KAA5B,GAAoCJ,MAAM,CAACG,IAAP,CAAY,CAAZ,CAApC;AACA,aAAOG,WAAP;;AACD,SAAKT,WAAL;AACC,UAAIU,WAAW,qBAAOR,KAAP,CAAf;;AACAQ,MAAAA,WAAW,CAACP,MAAM,CAACG,IAAP,CAAY,CAAZ,CAAD,CAAX,CAA4BC,KAA5B,IAAqCJ,MAAM,CAACG,IAAP,CAAY,CAAZ,CAArC;AACA,aAAOI,WAAP;;AACD;AACC,aAAOR,KAAP;AAlBF;AAoBA,CArBD;;AAuBA,eAAeD,kBAAf","sourcesContent":["import {StatsData} from \"../components/StatsData\";\r\nexport const INCREMENT_STAT = 'INCREMENT_STAT';\r\nexport const RESET_STAT = 'RESET_STAT';\r\nexport const SET_STAT = 'SET_STAT';\r\nexport const ADD_TO_STAT = 'ADD_TO_STAT';\r\n\r\nconst statTrackerReducer = (state=StatsData, action) =>{\r\n\tswitch (action.type){\r\n\t\tcase INCREMENT_STAT:\r\n\t\t\tlet newStatsInc = {...state};\r\n\t\t\tnewStatsInc[action.data].count += 1;\r\n\t\t\treturn newStatsInc;\r\n\t\tcase RESET_STAT:\r\n\t\t\tlet newStatsRes = {...state};\r\n\t\t\tnewStatsRes[action.data].count = 0;\r\n\t\t\treturn newStatsRes;\r\n\t\tcase SET_STAT:\r\n\t\t\tlet newStatsSet = {...state};\r\n\t\t\tnewStatsSet[action.data[0]].count = action.data[1];\r\n\t\t\treturn newStatsSet;\r\n\t\tcase ADD_TO_STAT:\r\n\t\t\tlet newStatsAdd = {...state};\r\n\t\t\tnewStatsAdd[action.data[0]].count += action.data[1];\r\n\t\t\treturn newStatsAdd;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default statTrackerReducer;\r\n"]},"metadata":{},"sourceType":"module"}