{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matt\\\\Documents\\\\GitHub\\\\pro-creature-habits\\\\node_modules\\\\react-native-progress\\\\Shapes\\\\Circle.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Shape as ARTShape, Path as ARTPath } from '@react-native-community/art';\n\nfunction makeCirclePath(x, y, radius, direction) {\n  var arcMethod = direction === 'counter-clockwise' ? 'counterArc' : 'arc';\n  return new ARTPath().moveTo(x, y).move(radius, 0)[arcMethod](0, radius * 2, radius, radius)[arcMethod](0, radius * -2, radius, radius).close();\n}\n\nvar Circle = function (_Component) {\n  _inherits(Circle, _Component);\n\n  var _super = _createSuper(Circle);\n\n  function Circle() {\n    _classCallCheck(this, Circle);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Circle, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          radius = _this$props.radius,\n          offset = _this$props.offset,\n          strokeWidth = _this$props.strokeWidth,\n          direction = _this$props.direction,\n          restProps = _objectWithoutProperties(_this$props, [\"radius\", \"offset\", \"strokeWidth\", \"direction\"]);\n\n      var path = makeCirclePath((offset.left || 0) + strokeWidth / 2, (offset.top || 0) + strokeWidth / 2, radius - strokeWidth / 2, direction);\n      return React.createElement(ARTShape, _extends({\n        d: path,\n        strokeCap: \"butt\",\n        strokeWidth: strokeWidth\n      }, restProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return Circle;\n}(Component);\n\nCircle.propTypes = {\n  radius: PropTypes.number.isRequired,\n  offset: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number\n  }),\n  strokeWidth: PropTypes.number,\n  direction: PropTypes.oneOf(['clockwise', 'counter-clockwise'])\n};\nCircle.defaultProps = {\n  offset: {\n    top: 0,\n    left: 0\n  },\n  strokeWidth: 0,\n  direction: 'clockwise'\n};\nexport { Circle as default };","map":{"version":3,"sources":["C:/Users/Matt/Documents/GitHub/pro-creature-habits/node_modules/react-native-progress/Shapes/Circle.js"],"names":["React","Component","PropTypes","Shape","ARTShape","Path","ARTPath","makeCirclePath","x","y","radius","direction","arcMethod","moveTo","move","close","Circle","props","offset","strokeWidth","restProps","path","left","top","propTypes","number","isRequired","shape","oneOf","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAK,IAAIC,QAAlB,EAA4BC,IAAI,IAAIC,OAApC,QAAmD,6BAAnD;;AAEA,SAASC,cAAT,CAAwBC,CAAxB,EAA2BC,CAA3B,EAA8BC,MAA9B,EAAsCC,SAAtC,EAAiD;AAC/C,MAAMC,SAAS,GAAGD,SAAS,KAAK,mBAAd,GAAoC,YAApC,GAAmD,KAArE;AAEA,SAAQ,IAAIL,OAAJ,EAAD,CACJO,MADI,CACGL,CADH,EACMC,CADN,EAEJK,IAFI,CAECJ,MAFD,EAES,CAFT,EAGJE,SAHI,EAGO,CAHP,EAGUF,MAAM,GAAG,CAHnB,EAGsBA,MAHtB,EAG8BA,MAH9B,EAIJE,SAJI,EAIO,CAJP,EAIUF,MAAM,GAAG,CAAC,CAJpB,EAIuBA,MAJvB,EAI+BA,MAJ/B,EAKJK,KALI,EAAP;AAMD;;IAEoBC,M;;;;;;;;;;;;;WAiBnB,kBAAS;AAAA,wBAC0D,KAAKC,KAD/D;AAAA,UACCP,MADD,eACCA,MADD;AAAA,UACSQ,MADT,eACSA,MADT;AAAA,UACiBC,WADjB,eACiBA,WADjB;AAAA,UAC8BR,SAD9B,eAC8BA,SAD9B;AAAA,UAC4CS,SAD5C;;AAEP,UAAMC,IAAI,GAAGd,cAAc,CACzB,CAACW,MAAM,CAACI,IAAP,IAAe,CAAhB,IAAqBH,WAAW,GAAG,CADV,EAEzB,CAACD,MAAM,CAACK,GAAP,IAAc,CAAf,IAAoBJ,WAAW,GAAG,CAFT,EAGzBT,MAAM,GAAGS,WAAW,GAAG,CAHE,EAIzBR,SAJyB,CAA3B;AAMA,aACE,oBAAC,QAAD;AACE,QAAA,CAAC,EAAEU,IADL;AAEE,QAAA,SAAS,EAAC,MAFZ;AAGE,QAAA,WAAW,EAAEF;AAHf,SAIMC,SAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAQD;;;;EAjCiCnB,S;;AAAfe,M,CACZQ,S,GAAY;AACjBd,EAAAA,MAAM,EAAER,SAAS,CAACuB,MAAV,CAAiBC,UADR;AAEjBR,EAAAA,MAAM,EAAEhB,SAAS,CAACyB,KAAV,CAAgB;AACtBJ,IAAAA,GAAG,EAAErB,SAAS,CAACuB,MADO;AAEtBH,IAAAA,IAAI,EAAEpB,SAAS,CAACuB;AAFM,GAAhB,CAFS;AAMjBN,EAAAA,WAAW,EAAEjB,SAAS,CAACuB,MANN;AAOjBd,EAAAA,SAAS,EAAET,SAAS,CAAC0B,KAAV,CAAgB,CAAC,WAAD,EAAc,mBAAd,CAAhB;AAPM,C;AADAZ,M,CAWZa,Y,GAAe;AACpBX,EAAAA,MAAM,EAAE;AAAEK,IAAAA,GAAG,EAAE,CAAP;AAAUD,IAAAA,IAAI,EAAE;AAAhB,GADY;AAEpBH,EAAAA,WAAW,EAAE,CAFO;AAGpBR,EAAAA,SAAS,EAAE;AAHS,C;SAXHK,M","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Shape as ARTShape, Path as ARTPath } from '@react-native-community/art';\r\n\r\nfunction makeCirclePath(x, y, radius, direction) {\r\n  const arcMethod = direction === 'counter-clockwise' ? 'counterArc' : 'arc';\r\n\r\n  return (new ARTPath())\r\n    .moveTo(x, y)\r\n    .move(radius, 0)\r\n    [arcMethod](0, radius * 2, radius, radius)\r\n    [arcMethod](0, radius * -2, radius, radius)\r\n    .close();\r\n}\r\n\r\nexport default class Circle extends Component {\r\n  static propTypes = {\r\n    radius: PropTypes.number.isRequired,\r\n    offset: PropTypes.shape({\r\n      top: PropTypes.number,\r\n      left: PropTypes.number,\r\n    }),\r\n    strokeWidth: PropTypes.number,\r\n    direction: PropTypes.oneOf(['clockwise', 'counter-clockwise']),\r\n  };\r\n\r\n  static defaultProps = {\r\n    offset: { top: 0, left: 0 },\r\n    strokeWidth: 0,\r\n    direction: 'clockwise',\r\n  };\r\n\r\n  render() {\r\n    const { radius, offset, strokeWidth, direction, ...restProps } = this.props;\r\n    const path = makeCirclePath(\r\n      (offset.left || 0) + strokeWidth / 2,\r\n      (offset.top || 0) + strokeWidth / 2,\r\n      radius - strokeWidth / 2,\r\n      direction\r\n    );\r\n    return (\r\n      <ARTShape\r\n        d={path}\r\n        strokeCap=\"butt\"\r\n        strokeWidth={strokeWidth}\r\n        {...restProps}\r\n      />\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}