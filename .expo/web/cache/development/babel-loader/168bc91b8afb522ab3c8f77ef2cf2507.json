{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Matt\\\\Documents\\\\GitHub\\\\pro-creature-habits\\\\src\\\\components\\\\achievementsComponents\\\\Achievement.js\";\n\nimport { useSelector } from \"react-redux\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Progress from \"react-native-progress\";\nimport React from \"react\";\nimport { Ionicons } from \"@expo/vector-icons\";\nvar styles = StyleSheet.create({\n  mainAchievementContainer: {\n    backgroundColor: '#402688',\n    padding: 10,\n    paddingBottom: 15,\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10,\n    borderRightColor: 'black',\n    borderRightWidth: 1,\n    flexGrow: 1\n  },\n  achievementContainer: {\n    flexDirection: 'row',\n    borderRadius: 10,\n    justifyContent: 'space-between',\n    borderColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 3,\n    elevation: 11,\n    marginBottom: 15\n  },\n  achievementReward: {\n    flexDirection: 'row',\n    width: 20,\n    justifyContent: 'center',\n    backgroundColor: '#3156c4',\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    flexBasis: '20%',\n    alignItems: 'center'\n  },\n  achievementText: {\n    color: 'white',\n    fontSize: 20,\n    paddingLeft: 10\n  },\n  textProgress: {\n    color: 'white',\n    fontSize: 20,\n    paddingRight: 10\n  },\n  achievementHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingTop: 5\n  },\n  achievementRewardText: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 20\n  }\n});\n\nvar Achievement = function Achievement(_ref) {\n  var achievement = _ref.achievement;\n  var ach = useSelector(function (state) {\n    return state.achievements;\n  });\n  var filter = useSelector(function (state) {\n    return state.achievementsFilter;\n  });\n  return ach[achievement][filter].complete && ach[achievement][filter].reward_taken ? React.createElement(View, {\n    style: styles.achievementContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: [styles.mainAchievementContainer, {\n      backgroundColor: '#636363',\n      borderRightColor: 'black'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.achievementHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    style: styles.achievementText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, ach[achievement].name), React.createElement(Text, {\n    style: styles.textProgress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, ach[achievement][filter].to_complete + \"/\" + ach[achievement][filter].to_complete)), React.createElement(Progress.Bar, {\n    style: {\n      margin: 10\n    },\n    progress: 1,\n    width: null,\n    height: 10,\n    color: \"white\",\n    borderColor: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 6\n    }\n  })), React.createElement(View, {\n    style: [styles.achievementReward, {\n      backgroundColor: '#868686'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, React.createElement(Ionicons, {\n    name: \"checkmark\",\n    color: \"white\",\n    size: 22,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 6\n    }\n  }))) : ach[achievement][filter].complete ? React.createElement(View, {\n    style: styles.achievementContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: [styles.mainAchievementContainer, {\n      backgroundColor: '#4a992c',\n      borderRightColor: 'white'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.achievementHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    style: styles.achievementText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, ach[achievement].name), React.createElement(Text, {\n    style: styles.textProgress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, ach[achievement][filter].to_complete + \"/\" + ach[achievement][filter].to_complete)), React.createElement(Progress.Bar, {\n    style: {\n      margin: 10\n    },\n    progress: 1,\n    width: null,\n    height: 10,\n    color: \"white\",\n    borderColor: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 6\n    }\n  })), React.createElement(View, {\n    style: [styles.achievementReward, {\n      backgroundColor: '#4ab125'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.achievementRewardText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 6\n    }\n  }, ach[achievement][filter].reward), React.createElement(Image, {\n    style: {\n      width: 20,\n      height: 20\n    },\n    source: require(\"../../test_images/coin.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 6\n    }\n  }))) : React.createElement(View, {\n    style: styles.achievementContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.mainAchievementContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.achievementHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    style: styles.achievementText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, ach[achievement].name), React.createElement(Text, {\n    style: styles.textProgress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, ach[achievement].completed + \"/\" + ach[achievement][filter].to_complete)), React.createElement(Progress.Bar, {\n    style: {\n      margin: 10\n    },\n    progress: ach[achievement].completed / ach[achievement][filter].to_complete,\n    width: null,\n    height: 10,\n    color: \"#4ab125\",\n    borderColor: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 6\n    }\n  })), React.createElement(View, {\n    style: styles.achievementReward,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.achievementRewardText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 6\n    }\n  }, ach[achievement][filter].reward), React.createElement(Image, {\n    style: {\n      width: 20,\n      height: 20\n    },\n    source: require(\"../../test_images/coin.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 6\n    }\n  })));\n};\n\nexport default Achievement;","map":{"version":3,"sources":["C:/Users/Matt/Documents/GitHub/pro-creature-habits/src/components/achievementsComponents/Achievement.js"],"names":["useSelector","Progress","React","Ionicons","styles","StyleSheet","create","mainAchievementContainer","backgroundColor","padding","paddingBottom","borderTopLeftRadius","borderBottomLeftRadius","borderRightColor","borderRightWidth","flexGrow","achievementContainer","flexDirection","borderRadius","justifyContent","borderColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","marginBottom","achievementReward","borderTopRightRadius","borderBottomRightRadius","flexBasis","alignItems","achievementText","color","fontSize","paddingLeft","textProgress","paddingRight","achievementHeader","paddingTop","achievementRewardText","textAlign","Achievement","achievement","ach","state","achievements","filter","achievementsFilter","complete","reward_taken","name","to_complete","margin","reward","require","completed"],"mappings":";;;AAAA,SAAQA,WAAR,QAA0B,aAA1B;;;;;AAEA,OAAO,KAAKC,QAAZ,MAA0B,uBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAChCC,EAAAA,wBAAwB,EAAE;AACzBC,IAAAA,eAAe,EAAE,SADQ;AAEzBC,IAAAA,OAAO,EAAE,EAFgB;AAGzBC,IAAAA,aAAa,EAAE,EAHU;AAIzBC,IAAAA,mBAAmB,EAAE,EAJI;AAKzBC,IAAAA,sBAAsB,EAAE,EALC;AAMzBC,IAAAA,gBAAgB,EAAE,OANO;AAOzBC,IAAAA,gBAAgB,EAAE,CAPO;AAQzBC,IAAAA,QAAQ,EAAE;AARe,GADM;AAWhCC,EAAAA,oBAAoB,EAAE;AACrBC,IAAAA,aAAa,EAAE,KADM;AAErBC,IAAAA,YAAY,EAAE,EAFO;AAGrBC,IAAAA,cAAc,EAAE,eAHK;AAIrBC,IAAAA,WAAW,EAAE,OAJQ;AAKrBC,IAAAA,YAAY,EAAE;AAACC,MAAAA,KAAK,EAAE,CAAR;AAAWC,MAAAA,MAAM,EAAE;AAAnB,KALO;AAMrBC,IAAAA,aAAa,EAAE,GANM;AAOrBC,IAAAA,YAAY,EAAE,CAPO;AAQrBC,IAAAA,SAAS,EAAE,EARU;AASrBC,IAAAA,YAAY,EAAE;AATO,GAXU;AAsBhCC,EAAAA,iBAAiB,EAAE;AAClBX,IAAAA,aAAa,EAAE,KADG;AAElBK,IAAAA,KAAK,EAAE,EAFW;AAGlBH,IAAAA,cAAc,EAAE,QAHE;AAIlBX,IAAAA,eAAe,EAAE,SAJC;AAKlBqB,IAAAA,oBAAoB,EAAE,EALJ;AAMlBC,IAAAA,uBAAuB,EAAE,EANP;AAOlBC,IAAAA,SAAS,EAAE,KAPO;AAQlBC,IAAAA,UAAU,EAAE;AARM,GAtBa;AAgChCC,EAAAA,eAAe,EAAE;AAChBC,IAAAA,KAAK,EAAE,OADS;AAEhBC,IAAAA,QAAQ,EAAE,EAFM;AAGhBC,IAAAA,WAAW,EAAE;AAHG,GAhCe;AAqChCC,EAAAA,YAAY,EAAE;AACbH,IAAAA,KAAK,EAAE,OADM;AAEbC,IAAAA,QAAQ,EAAE,EAFG;AAGbG,IAAAA,YAAY,EAAE;AAHD,GArCkB;AA0ChCC,EAAAA,iBAAiB,EAAE;AAClBtB,IAAAA,aAAa,EAAE,KADG;AAElBE,IAAAA,cAAc,EAAE,eAFE;AAGlBqB,IAAAA,UAAU,EAAE;AAHM,GA1Ca;AA+ChCC,EAAAA,qBAAqB,EAAE;AACtBP,IAAAA,KAAK,EAAE,OADe;AAEtBQ,IAAAA,SAAS,EAAE,QAFW;AAGtBP,IAAAA,QAAQ,EAAE;AAHY;AA/CS,CAAlB,CAAf;;AAsDA,IAAMQ,WAAW,GAAG,SAAdA,WAAc,OAAmB;AAAA,MAAjBC,WAAiB,QAAjBA,WAAiB;AACtC,MAAMC,GAAG,GAAG7C,WAAW,CAAC,UAAA8C,KAAK;AAAA,WAAEA,KAAK,CAACC,YAAR;AAAA,GAAN,CAAvB;AACA,MAAMC,MAAM,GAAGhD,WAAW,CAAC,UAAA8C,KAAK;AAAA,WAAEA,KAAK,CAACG,kBAAR;AAAA,GAAN,CAA1B;AAEA,SACEJ,GAAG,CAACD,WAAD,CAAH,CAAiBI,MAAjB,EAAyBE,QAAzB,IAAqCL,GAAG,CAACD,WAAD,CAAH,CAAiBI,MAAjB,EAAyBG,YAA9D,GACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/C,MAAM,CAACY,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACZ,MAAM,CAACG,wBAAR,EAAkC;AAACC,MAAAA,eAAe,EAAE,SAAlB;AAA6BK,MAAAA,gBAAgB,EAAE;AAA/C,KAAlC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACmC,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnC,MAAM,CAAC6B,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCY,GAAG,CAACD,WAAD,CAAH,CAAiBQ,IAAvD,CADD,EAEC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhD,MAAM,CAACiC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCQ,GAAG,CAACD,WAAD,CAAH,CAAiBI,MAAjB,EAAyBK,WAA/D,SAA8ER,GAAG,CAACD,WAAD,CAAH,CAAiBI,MAAjB,EAAyBK,WAAvG,CAFD,CADD,EAKC,oBAAC,QAAD,CAAU,GAAV;AAAc,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE;AAAT,KAArB;AAAmC,IAAA,QAAQ,EAAE,CAA7C;AAAgD,IAAA,KAAK,EAAE,IAAvD;AAA6D,IAAA,MAAM,EAAE,EAArE;AAAyE,IAAA,KAAK,EAAC,OAA/E;AAAuF,IAAA,WAAW,EAAC,OAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,CADD,EAQC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAClD,MAAM,CAACwB,iBAAR,EAA2B;AAACpB,MAAAA,eAAe,EAAE;AAAlB,KAA3B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAC,OAAjC;AAAyC,IAAA,IAAI,EAAE,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CARD,CADA,GAaGqC,GAAG,CAACD,WAAD,CAAH,CAAiBI,MAAjB,EAAyBE,QAAzB,GACH,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9C,MAAM,CAACY,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACZ,MAAM,CAACG,wBAAR,EAAkC;AAACC,MAAAA,eAAe,EAAE,SAAlB;AAA6BK,MAAAA,gBAAgB,EAAE;AAA/C,KAAlC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACmC,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnC,MAAM,CAAC6B,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCY,GAAG,CAACD,WAAD,CAAH,CAAiBQ,IAAvD,CADD,EAEC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhD,MAAM,CAACiC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCQ,GAAG,CAACD,WAAD,CAAH,CAAiBI,MAAjB,EAAyBK,WAA/D,SAA8ER,GAAG,CAACD,WAAD,CAAH,CAAiBI,MAAjB,EAAyBK,WAAvG,CAFD,CADD,EAKC,oBAAC,QAAD,CAAU,GAAV;AAAc,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE;AAAT,KAArB;AAAmC,IAAA,QAAQ,EAAE,CAA7C;AAAgD,IAAA,KAAK,EAAE,IAAvD;AAA6D,IAAA,MAAM,EAAE,EAArE;AAAyE,IAAA,KAAK,EAAC,OAA/E;AAAuF,IAAA,WAAW,EAAC,OAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,CADD,EAQC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAClD,MAAM,CAACwB,iBAAR,EAA2B;AAACpB,MAAAA,eAAe,EAAE;AAAlB,KAA3B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACqC,qBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4CI,GAAG,CAACD,WAAD,CAAH,CAAiBI,MAAjB,EAAyBO,MAArE,CADD,EAEC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAACjC,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAAd;AAAuC,IAAA,MAAM,EAAEiC,OAAO,8BAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CARD,CADG,GAeH,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpD,MAAM,CAACY,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACG,wBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACmC,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnC,MAAM,CAAC6B,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCY,GAAG,CAACD,WAAD,CAAH,CAAiBQ,IAAvD,CADD,EAEC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhD,MAAM,CAACiC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCQ,GAAG,CAACD,WAAD,CAAH,CAAiBa,SAAvD,SAAoEZ,GAAG,CAACD,WAAD,CAAH,CAAiBI,MAAjB,EAAyBK,WAA7F,CAFD,CADD,EAKC,oBAAC,QAAD,CAAU,GAAV;AAAc,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE;AAAT,KAArB;AAAmC,IAAA,QAAQ,EAAET,GAAG,CAACD,WAAD,CAAH,CAAiBa,SAAjB,GAA2BZ,GAAG,CAACD,WAAD,CAAH,CAAiBI,MAAjB,EAAyBK,WAAjG;AAA8G,IAAA,KAAK,EAAE,IAArH;AAA2H,IAAA,MAAM,EAAE,EAAnI;AAAuI,IAAA,KAAK,EAAC,SAA7I;AAAuJ,IAAA,WAAW,EAAC,OAAnK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,CADD,EAQC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjD,MAAM,CAACwB,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExB,MAAM,CAACqC,qBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4CI,GAAG,CAACD,WAAD,CAAH,CAAiBI,MAAjB,EAAyBO,MAArE,CADD,EAEC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAACjC,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAAd;AAAuC,IAAA,MAAM,EAAEiC,OAAO,8BAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CARD,CA7BF;AA4CA,CAhDD;;AAkDA,eAAeb,WAAf","sourcesContent":["import {useSelector} from \"react-redux\";\r\nimport {Image, Text, View, StyleSheet} from \"react-native\";\r\nimport * as Progress from \"react-native-progress\";\r\nimport React from \"react\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\nconst styles = StyleSheet.create({\r\n\tmainAchievementContainer: {\r\n\t\tbackgroundColor: '#402688',\r\n\t\tpadding: 10,\r\n\t\tpaddingBottom: 15,\r\n\t\tborderTopLeftRadius: 10,\r\n\t\tborderBottomLeftRadius: 10,\r\n\t\tborderRightColor: 'black',\r\n\t\tborderRightWidth: 1,\r\n\t\tflexGrow: 1\r\n\t},\r\n\tachievementContainer: {\r\n\t\tflexDirection: 'row',\r\n\t\tborderRadius: 10,\r\n\t\tjustifyContent: 'space-between',\r\n\t\tborderColor: 'black',\r\n\t\tshadowOffset: {width: 0, height: 5},\r\n\t\tshadowOpacity: 0.8,\r\n\t\tshadowRadius: 3,\r\n\t\televation: 11,\r\n\t\tmarginBottom: 15,\r\n\t},\r\n\tachievementReward: {\r\n\t\tflexDirection: 'row',\r\n\t\twidth: 20,\r\n\t\tjustifyContent: 'center',\r\n\t\tbackgroundColor: '#3156c4',\r\n\t\tborderTopRightRadius: 10,\r\n\t\tborderBottomRightRadius: 10,\r\n\t\tflexBasis: '20%',\r\n\t\talignItems: 'center'\r\n\t},\r\n\tachievementText: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: 20,\r\n\t\tpaddingLeft: 10\r\n\t},\r\n\ttextProgress: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: 20,\r\n\t\tpaddingRight: 10\r\n\t},\r\n\tachievementHeader: {\r\n\t\tflexDirection: 'row',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tpaddingTop: 5\r\n\t},\r\n\tachievementRewardText: {\r\n\t\tcolor: 'white',\r\n\t\ttextAlign: 'center',\r\n\t\tfontSize: 20\r\n\t}\r\n})\r\n\r\nconst Achievement = ({achievement}) => {\r\n\tconst ach = useSelector(state=>state.achievements);\r\n\tconst filter = useSelector(state=>state.achievementsFilter);\r\n\r\n\treturn (\r\n\t\t(ach[achievement][filter].complete && ach[achievement][filter].reward_taken ? (\r\n\t\t\t<View style={styles.achievementContainer}>\r\n\t\t\t\t<View style={[styles.mainAchievementContainer, {backgroundColor: '#636363', borderRightColor: 'black'}]}>\r\n\t\t\t\t\t<View style={styles.achievementHeader}>\r\n\t\t\t\t\t\t<Text style={styles.achievementText}>{ach[achievement].name}</Text>\r\n\t\t\t\t\t\t<Text style={styles.textProgress}>{`${ach[achievement][filter].to_complete}/${ach[achievement][filter].to_complete}`}</Text>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t\t<Progress.Bar style={{margin: 10}} progress={1} width={null} height={10} color='white' borderColor='white' />\r\n\t\t\t\t</View>\r\n\t\t\t\t<View style={[styles.achievementReward, {backgroundColor: '#868686'}]}>\r\n\t\t\t\t\t<Ionicons name=\"checkmark\" color=\"white\" size={22}/>\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\t\t) : ach[achievement][filter].complete ? (\r\n\t\t\t<View style={styles.achievementContainer}>\r\n\t\t\t\t<View style={[styles.mainAchievementContainer, {backgroundColor: '#4a992c', borderRightColor: 'white'}]}>\r\n\t\t\t\t\t<View style={styles.achievementHeader}>\r\n\t\t\t\t\t\t<Text style={styles.achievementText}>{ach[achievement].name}</Text>\r\n\t\t\t\t\t\t<Text style={styles.textProgress}>{`${ach[achievement][filter].to_complete}/${ach[achievement][filter].to_complete}`}</Text>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t\t<Progress.Bar style={{margin: 10}} progress={1} width={null} height={10} color='white' borderColor='white' />\r\n\t\t\t\t</View>\r\n\t\t\t\t<View style={[styles.achievementReward, {backgroundColor: '#4ab125'}]}>\r\n\t\t\t\t\t<Text style={styles.achievementRewardText}>{ach[achievement][filter].reward}</Text>\r\n\t\t\t\t\t<Image style={{width: 20, height: 20}} source={require('../../test_images/coin.png')}/>\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\t\t) : (\r\n\t\t\t<View style={styles.achievementContainer}>\r\n\t\t\t\t<View style={styles.mainAchievementContainer}>\r\n\t\t\t\t\t<View style={styles.achievementHeader}>\r\n\t\t\t\t\t\t<Text style={styles.achievementText}>{ach[achievement].name}</Text>\r\n\t\t\t\t\t\t<Text style={styles.textProgress}>{`${ach[achievement].completed}/${ach[achievement][filter].to_complete}`}</Text>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t\t<Progress.Bar style={{margin: 10}} progress={ach[achievement].completed/ach[achievement][filter].to_complete} width={null} height={10} color='#4ab125' borderColor='white' />\r\n\t\t\t\t</View>\r\n\t\t\t\t<View style={styles.achievementReward}>\r\n\t\t\t\t\t<Text style={styles.achievementRewardText}>{ach[achievement][filter].reward}</Text>\r\n\t\t\t\t\t<Image style={{width: 20, height: 20}} source={require('../../test_images/coin.png')}/>\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\t\t))\r\n\t)\r\n}\r\n\r\nexport default Achievement;\r\n"]},"metadata":{},"sourceType":"module"}