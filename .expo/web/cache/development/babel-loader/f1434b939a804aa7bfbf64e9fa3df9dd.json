{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Matt\\\\Documents\\\\GitHub\\\\pro-creature-habits\\\\src\\\\screens\\\\UserStats.js\";\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { STAT_OFF } from \"../redux/statsVisible\";\nvar styles = StyleSheet.create({\n  text: {\n    color: 'white',\n    fontSize: 20\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#406BE9'\n  },\n  modalButton: {\n    backgroundColor: '#402688',\n    padding: 15,\n    borderRadius: 10\n  },\n  modalHeader: {\n    backgroundColor: '#406BE9',\n    alignItems: 'center',\n    paddingTop: 50\n  },\n  modalHeaderText: {\n    color: 'white',\n    fontSize: 30\n  },\n  bodyContainer: {\n    flexDirection: 'row',\n    backgroundColor: '#406BE9',\n    padding: 20\n  },\n  statsContainer: {\n    flexDirection: 'column',\n    alignItems: 'stretch',\n    flexGrow: 1,\n    paddingTop: 5,\n    borderColor: 'white',\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 3,\n    elevation: 11,\n    backgroundColor: '#402688',\n    borderRadius: 5\n  },\n  statContainer: {\n    margin: 5,\n    marginRight: 10,\n    marginLeft: 10,\n    paddingBottom: 10,\n    borderBottomWidth: 1,\n    borderColor: 'white',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n});\n\nvar StatsScreen = function StatsScreen() {\n  var dispatch = useDispatch();\n  var stats = useSelector(function (state) {\n    return state.userStats;\n  });\n  return React.createElement(View, {\n    style: styles.modalContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: false,\n    visible: useSelector(function (state) {\n      return state.statsVisible;\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.modalHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.modalHeaderText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 6\n    }\n  }, \"User Stats\")), React.createElement(View, {\n    style: styles.bodyContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.statsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 6\n    }\n  }, Object.keys(stats).map(function (stat, index) {\n    if (index === Object.keys(stats).length - 1) {\n      return React.createElement(View, {\n        key: index,\n        style: [styles.statContainer, {\n          borderBottomWidth: 0,\n          borderBottomRightRadius: 5,\n          borderBottomLeftRadius: 5\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 10\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }, stats[stat].name, \":\"), React.createElement(Text, {\n        style: styles.text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, stats[stat].count));\n    }\n\n    return React.createElement(View, {\n      key: index,\n      style: styles.statContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 10\n      }\n    }, stats[stat].name, \":\"), React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 10\n      }\n    }, stats[stat].count));\n  }))), React.createElement(View, {\n    style: styles.modalContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return dispatch({\n        type: STAT_OFF\n      });\n    },\n    style: styles.modalButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, \"Close\")))));\n};\n\nexport default StatsScreen;","map":{"version":3,"sources":["C:/Users/Matt/Documents/GitHub/pro-creature-habits/src/screens/UserStats.js"],"names":["React","useDispatch","useSelector","STAT_OFF","styles","StyleSheet","create","text","color","fontSize","modalContainer","flex","justifyContent","alignItems","backgroundColor","modalButton","padding","borderRadius","modalHeader","paddingTop","modalHeaderText","bodyContainer","flexDirection","statsContainer","flexGrow","borderColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","statContainer","margin","marginRight","marginLeft","paddingBottom","borderBottomWidth","StatsScreen","dispatch","stats","state","userStats","statsVisible","Object","keys","map","stat","index","length","borderBottomRightRadius","borderBottomLeftRadius","name","count","type"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Text, View, StyleSheet, Modal, TouchableOpacity} from \"react-native\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {STAT_OFF} from \"../redux/statsVisible\";\r\n\r\nconst styles = StyleSheet.create({\r\n    text: {\r\n        color: 'white',\r\n\t\tfontSize: 20\r\n    },\r\n\tmodalContainer: {\r\n\t\tflex: 1,\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t\tbackgroundColor: '#406BE9'\r\n\t},\r\n\tmodalButton: {\r\n\t\tbackgroundColor: '#402688',\r\n\t\tpadding: 15,\r\n\t\tborderRadius: 10\r\n\t},\r\n\tmodalHeader: {\r\n\t\tbackgroundColor: '#406BE9',\r\n\t\talignItems: 'center',\r\n\t\tpaddingTop: 50,\r\n\t},\r\n\tmodalHeaderText: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: 30\r\n\t},\r\n\tbodyContainer: {\r\n    \tflexDirection: 'row',\r\n\t\tbackgroundColor: '#406BE9',\r\n\t\tpadding: 20\r\n\r\n\t},\r\n\tstatsContainer: {\r\n    \tflexDirection: 'column',\r\n\t\talignItems: 'stretch',\r\n\t\tflexGrow: 1,\r\n\t\tpaddingTop: 5,\r\n\t\tborderColor: 'white',\r\n\t\tshadowOffset: {width: 0, height: 5},\r\n\t\tshadowOpacity: 0.8,\r\n\t\tshadowRadius: 3,\r\n\t\televation: 11,\r\n\t\tbackgroundColor: '#402688',\r\n\t\tborderRadius: 5\r\n\t},\r\n\tstatContainer: {\r\n    \tmargin: 5,\r\n\t\tmarginRight: 10,\r\n\t\tmarginLeft: 10,\r\n\t\tpaddingBottom: 10,\r\n\t\tborderBottomWidth: 1,\r\n\t\tborderColor: 'white',\r\n\t\tflexDirection: 'row',\r\n\t\tjustifyContent: 'space-between',\r\n\r\n\t}\r\n});\r\n\r\n\r\n\r\nconst StatsScreen = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst stats = useSelector(state=>state.userStats);\r\n    return (\r\n\t\t<View style={styles.modalContainer}>\r\n\t\t\t<Modal\r\n\t\t\t\tanimationType=\"slide\"\r\n\t\t\t\ttransparent={false}\r\n\t\t\t\tvisible={useSelector(state=>state.statsVisible)}\r\n\t\t\t>\r\n\t\t\t\t<View style={styles.modalHeader}>\r\n\t\t\t\t\t<Text style={styles.modalHeaderText}>User Stats</Text>\r\n\t\t\t\t</View>\r\n\t\t\t\t<View style={styles.bodyContainer}>\r\n\t\t\t\t\t<View style={styles.statsContainer}>\r\n\t\t\t\t\t\t{Object.keys(stats).map((stat, index) => {\r\n\t\t\t\t\t\t\tif (index === Object.keys(stats).length-1) {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<View key={index}\r\n\t\t\t\t\t\t\t\t\t\tstyle={[styles.statContainer,\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tborderBottomWidth: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\tborderBottomRightRadius: 5,\r\n\t\t\t\t\t\t\t\t\t\t\t\tborderBottomLeftRadius: 5\r\n\t\t\t\t\t\t\t\t\t\t\t}]}>\r\n\t\t\t\t\t\t\t\t\t\t<Text style={styles.text}>{stats[stat].name}:</Text>\r\n\t\t\t\t\t\t\t\t\t\t<Text style={styles.text}>{stats[stat].count}</Text>\r\n\t\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<View key={index} style={styles.statContainer}>\r\n\t\t\t\t\t\t\t\t\t<Text style={styles.text}>{stats[stat].name}:</Text>\r\n\t\t\t\t\t\t\t\t\t<Text style={styles.text}>{stats[stat].count}</Text>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</View>\r\n\t\t\t\t<View style={styles.modalContainer}>\r\n\t\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\t\tonPress={() => dispatch({type: STAT_OFF})}\r\n\t\t\t\t\t\tstyle={styles.modalButton}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Text style={styles.text}>Close</Text>\r\n\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t</View>\r\n\t\t\t</Modal>\r\n\t\t</View>\r\n    );\r\n};\r\n\r\nexport default StatsScreen;\r\n"]},"metadata":{},"sourceType":"module"}