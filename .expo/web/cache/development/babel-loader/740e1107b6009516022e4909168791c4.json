{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/elianacohen/AndroidStudioProjects/pro-creature-habits/node_modules/@react-native-community/art/lib/Group.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport invariant from 'invariant';\nimport { NativeGroup } from \"./nativeComponents\";\nimport { extractOpacity, extractTransform, extractShadow } from \"./helpers\";\n\nvar Group = function (_React$Component) {\n  _inherits(Group, _React$Component);\n\n  var _super = _createSuper(Group);\n\n  function Group() {\n    _classCallCheck(this, Group);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Group, [{\n    key: \"render\",\n    value: function render() {\n      invariant(this.context.isInSurface, 'ART: <Group /> must be a child of a <Surface />');\n      return React.createElement(NativeGroup, {\n        opacity: extractOpacity(this.props),\n        transform: extractTransform(this.props),\n        shadow: extractShadow(this.props),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      }, this.props.children);\n    }\n  }]);\n\n  return Group;\n}(React.Component);\n\nGroup.contextTypes = {\n  isInSurface: PropTypes.bool.isRequired\n};\nexport { Group as default };","map":{"version":3,"sources":["/Users/elianacohen/AndroidStudioProjects/pro-creature-habits/node_modules/@react-native-community/art/lib/Group.js"],"names":["React","PropTypes","invariant","NativeGroup","extractOpacity","extractTransform","extractShadow","Group","context","isInSurface","props","children","Component","contextTypes","bool","isRequired"],"mappings":";;;;;;;;;;;AASA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAAQC,WAAR;AACA,SAAQC,cAAR,EAAwBC,gBAAxB,EAA0CC,aAA1C;;IASqBC,K;;;;;;;;;;;;;WAKnB,kBAAS;AACPL,MAAAA,SAAS,CACP,KAAKM,OAAL,CAAaC,WADN,EAEP,iDAFO,CAAT;AAKA,aACE,oBAAC,WAAD;AACE,QAAA,OAAO,EAAEL,cAAc,CAAC,KAAKM,KAAN,CADzB;AAEE,QAAA,SAAS,EAAEL,gBAAgB,CAAC,KAAKK,KAAN,CAF7B;AAGE,QAAA,MAAM,EAAEJ,aAAa,CAAC,KAAKI,KAAN,CAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,KAAKA,KAAL,CAAWC,QAJd,CADF;AAQD;;;;EAnBgCX,KAAK,CAACY,S;;AAApBL,K,CACZM,Y,GAAe;AACpBJ,EAAAA,WAAW,EAAER,SAAS,CAACa,IAAV,CAAeC;AADR,C;SADHR,K","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport invariant from 'invariant';\nimport {NativeGroup} from './nativeComponents';\nimport {extractOpacity, extractTransform, extractShadow} from './helpers';\nimport type {OpacityProps, TransformProps, ShadowProps} from './types';\n\ntype GroupProps = OpacityProps &\n  ShadowProps &\n  TransformProps & {\n    children: React.Node,\n  };\n\nexport default class Group extends React.Component<GroupProps> {\n  static contextTypes = {\n    isInSurface: PropTypes.bool.isRequired,\n  };\n\n  render() {\n    invariant(\n      this.context.isInSurface,\n      'ART: <Group /> must be a child of a <Surface />',\n    );\n\n    return (\n      <NativeGroup\n        opacity={extractOpacity(this.props)}\n        transform={extractTransform(this.props)}\n        shadow={extractShadow(this.props)}>\n        {this.props.children}\n      </NativeGroup>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}