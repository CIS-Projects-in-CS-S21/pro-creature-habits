{"ast":null,"code":"import { insertColorStopsIntoArray } from \"./helpers\";\nvar LINEAR_GRADIENT = 1;\nexport default function LinearGradient(stops, x1, y1, x2, y2) {\n  var type = LINEAR_GRADIENT;\n\n  if (arguments.length < 5) {\n    var angle = (x1 == null ? 270 : x1) * Math.PI / 180;\n    var x = Math.cos(angle);\n    var y = -Math.sin(angle);\n    var l = (Math.abs(x) + Math.abs(y)) / 2;\n    x *= l;\n    y *= l;\n    x1 = 0.5 - x;\n    x2 = 0.5 + x;\n    y1 = 0.5 - y;\n    y2 = 0.5 + y;\n    this._bb = true;\n  } else {\n    this._bb = false;\n  }\n\n  var brushData = [type, +x1, +y1, +x2, +y2];\n  insertColorStopsIntoArray(stops, brushData, 5);\n  this._brush = brushData;\n  return this;\n}","map":{"version":3,"sources":["/Users/elianacohen/AndroidStudioProjects/pro-creature-habits/node_modules/@react-native-community/art/lib/LinearGradient.js"],"names":["insertColorStopsIntoArray","LINEAR_GRADIENT","LinearGradient","stops","x1","y1","x2","y2","type","arguments","length","angle","Math","PI","x","cos","y","sin","l","abs","_bb","brushData","_brush"],"mappings":"AASA,SAAQA,yBAAR;AAGA,IAAMC,eAAe,GAAG,CAAxB;AAEA,eAAe,SAASC,cAAT,CACbC,KADa,EAEbC,EAFa,EAGbC,EAHa,EAIbC,EAJa,EAKbC,EALa,EAMN;AACP,MAAMC,IAAI,GAAGP,eAAb;;AAEA,MAAIQ,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,QAAMC,KAAK,GAAI,CAACP,EAAE,IAAI,IAAN,GAAa,GAAb,GAAmBA,EAApB,IAA0BQ,IAAI,CAACC,EAAhC,GAAsC,GAApD;AAEA,QAAIC,CAAC,GAAGF,IAAI,CAACG,GAAL,CAASJ,KAAT,CAAR;AACA,QAAIK,CAAC,GAAG,CAACJ,IAAI,CAACK,GAAL,CAASN,KAAT,CAAT;AACA,QAAMO,CAAC,GAAG,CAACN,IAAI,CAACO,GAAL,CAASL,CAAT,IAAcF,IAAI,CAACO,GAAL,CAASH,CAAT,CAAf,IAA8B,CAAxC;AAEAF,IAAAA,CAAC,IAAII,CAAL;AACAF,IAAAA,CAAC,IAAIE,CAAL;AAEAd,IAAAA,EAAE,GAAG,MAAMU,CAAX;AACAR,IAAAA,EAAE,GAAG,MAAMQ,CAAX;AACAT,IAAAA,EAAE,GAAG,MAAMW,CAAX;AACAT,IAAAA,EAAE,GAAG,MAAMS,CAAX;AACA,SAAKI,GAAL,GAAW,IAAX;AACD,GAfD,MAeO;AACL,SAAKA,GAAL,GAAW,KAAX;AACD;;AAED,MAAMC,SAAS,GAAG,CAACb,IAAD,EAAO,CAACJ,EAAR,EAAY,CAACC,EAAb,EAAiB,CAACC,EAAlB,EAAsB,CAACC,EAAvB,CAAlB;AACAP,EAAAA,yBAAyB,CAACG,KAAD,EAAQkB,SAAR,EAAmB,CAAnB,CAAzB;AACA,OAAKC,MAAL,GAAcD,SAAd;AACA,SAAO,IAAP;AACD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {insertColorStopsIntoArray} from './helpers';\nimport type {GradientStops, Brush} from './types';\n\nconst LINEAR_GRADIENT = 1;\n\nexport default function LinearGradient(\n  stops: GradientStops,\n  x1?: number,\n  y1?: number,\n  x2?: number,\n  y2?: number,\n): Brush {\n  const type = LINEAR_GRADIENT;\n\n  if (arguments.length < 5) {\n    const angle = ((x1 == null ? 270 : x1) * Math.PI) / 180;\n\n    let x = Math.cos(angle);\n    let y = -Math.sin(angle);\n    const l = (Math.abs(x) + Math.abs(y)) / 2;\n\n    x *= l;\n    y *= l;\n\n    x1 = 0.5 - x;\n    x2 = 0.5 + x;\n    y1 = 0.5 - y;\n    y2 = 0.5 + y;\n    this._bb = true;\n  } else {\n    this._bb = false;\n  }\n\n  const brushData = [type, +x1, +y1, +x2, +y2];\n  insertColorStopsIntoArray(stops, brushData, 5);\n  this._brush = brushData;\n  return this;\n}\n"]},"metadata":{},"sourceType":"module"}