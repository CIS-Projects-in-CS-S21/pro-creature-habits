{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matt\\\\Documents\\\\GitHub\\\\pro-creature-habits\\\\node_modules\\\\react-native-image-overlay\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width;\n\nvar ImageOverlay = function (_Component) {\n  _inherits(ImageOverlay, _Component);\n\n  var _super = _createSuper(ImageOverlay);\n\n  function ImageOverlay() {\n    _classCallCheck(this, ImageOverlay);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ImageOverlay, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          blurRadius = _this$props.blurRadius,\n          children = _this$props.children,\n          containerStyle = _this$props.containerStyle,\n          contentPosition = _this$props.contentPosition,\n          height = _this$props.height,\n          overlayAlpha = _this$props.overlayAlpha,\n          overlayColor = _this$props.overlayColor,\n          rounded = _this$props.rounded,\n          source = _this$props.source,\n          title = _this$props.title,\n          titleStyle = _this$props.titleStyle,\n          props = _objectWithoutProperties(_this$props, [\"blurRadius\", \"children\", \"containerStyle\", \"contentPosition\", \"height\", \"overlayAlpha\", \"overlayColor\", \"rounded\", \"source\", \"title\", \"titleStyle\"]);\n\n      var justifyContent;\n\n      if (contentPosition == \"top\") {\n        justifyContent = \"flex-start\";\n      } else if (contentPosition == \"bottom\") {\n        justifyContent = \"flex-end\";\n      } else if (contentPosition == \"center\") {\n        justifyContent = \"center\";\n      }\n\n      return React.createElement(ImageBackground, {\n        source: source,\n        style: [styles.image, {\n          borderRadius: rounded,\n          height: height,\n          justifyContent: justifyContent\n        }, containerStyle],\n        blurRadius: blurRadius,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n          backgroundColor: overlayColor,\n          opacity: overlayAlpha\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }), !children && title && React.createElement(Text, {\n        style: [styles.title, titleStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 20\n        }\n      }, title), children);\n    }\n  }]);\n\n  return ImageOverlay;\n}(Component);\n\nexport { ImageOverlay as default };\nvar styles = StyleSheet.create({\n  image: {\n    width: width,\n    overflow: \"hidden\",\n    alignItems: \"center\"\n  },\n  title: {\n    margin: 20,\n    color: \"white\",\n    textAlign: \"center\",\n    fontSize: 16\n  }\n});\nImageOverlay.propTypes = {\n  rounded: PropTypes.number,\n  source: Image.propTypes.source,\n  height: PropTypes.number,\n  title: PropTypes.string,\n  titleStyle: Text.propTypes.style,\n  overlayColor: PropTypes.string,\n  overlayAlpha: PropTypes.number,\n  contentPosition: PropTypes.oneOf([\"top\", \"center\", \"bottom\"]),\n  containerStyle: ViewPropTypes.style,\n  blurRadius: PropTypes.number,\n  children: PropTypes.element\n};\nImageOverlay.defaultProps = {\n  height: 300,\n  overlayColor: \"#000000\",\n  overlayAlpha: 0.5,\n  contentPosition: \"center\"\n};","map":{"version":3,"sources":["C:/Users/Matt/Documents/GitHub/pro-creature-habits/node_modules/react-native-image-overlay/index.js"],"names":["React","Component","PropTypes","ViewPropTypes","Dimensions","get","width","ImageOverlay","props","blurRadius","children","containerStyle","contentPosition","height","overlayAlpha","overlayColor","rounded","source","title","titleStyle","justifyContent","styles","image","borderRadius","StyleSheet","absoluteFillObject","backgroundColor","opacity","create","overflow","alignItems","margin","color","textAlign","fontSize","propTypes","number","Image","string","Text","style","oneOf","element","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Dimensions,\r\n  ImageBackground,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  ViewPropTypes\r\n} from \"react-native\";\r\n\r\nconst { width } = Dimensions.get(\"window\");\r\n\r\nexport default class ImageOverlay extends Component {\r\n  render() {\r\n    const {\r\n      blurRadius,\r\n      children,\r\n      containerStyle,\r\n      contentPosition,\r\n      height,\r\n      overlayAlpha,\r\n      overlayColor,\r\n      rounded,\r\n      source,\r\n      title,\r\n      titleStyle,\r\n      ...props\r\n    } = this.props;\r\n\r\n    let justifyContent;\r\n    if (contentPosition == \"top\") {\r\n      justifyContent = \"flex-start\";\r\n    } else if (contentPosition == \"bottom\") {\r\n      justifyContent = \"flex-end\";\r\n    } else if (contentPosition == \"center\") {\r\n      justifyContent = \"center\";\r\n    }\r\n\r\n    return (\r\n      <ImageBackground\r\n        source={source}\r\n        style={[\r\n          styles.image,\r\n          {\r\n            borderRadius: rounded,\r\n            height: height,\r\n            justifyContent: justifyContent\r\n          },\r\n          containerStyle\r\n        ]}\r\n        blurRadius={blurRadius}\r\n      >\r\n        <View\r\n          style={{\r\n            ...StyleSheet.absoluteFillObject,\r\n            backgroundColor: overlayColor,\r\n            opacity: overlayAlpha\r\n          }}\r\n        />\r\n        {!children &&\r\n          title && <Text style={[styles.title, titleStyle]}>{title}</Text>}\r\n        {children}\r\n      </ImageBackground>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    width: width,\r\n    overflow: \"hidden\",\r\n    alignItems: \"center\"\r\n  },\r\n  title: {\r\n    margin: 20,\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n    fontSize: 16\r\n  }\r\n});\r\n\r\nImageOverlay.propTypes = {\r\n  rounded: PropTypes.number,\r\n  source: Image.propTypes.source,\r\n  height: PropTypes.number,\r\n  title: PropTypes.string,\r\n  titleStyle: Text.propTypes.style,\r\n  overlayColor: PropTypes.string,\r\n  overlayAlpha: PropTypes.number,\r\n  contentPosition: PropTypes.oneOf([\"top\", \"center\", \"bottom\"]),\r\n  containerStyle: ViewPropTypes.style,\r\n  blurRadius: PropTypes.number,\r\n  children: PropTypes.element\r\n};\r\n\r\nImageOverlay.defaultProps = {\r\n  height: 300,\r\n  overlayColor: \"#000000\",\r\n  overlayAlpha: 0.5,\r\n  contentPosition: \"center\"\r\n};\r\n"]},"metadata":{},"sourceType":"module"}