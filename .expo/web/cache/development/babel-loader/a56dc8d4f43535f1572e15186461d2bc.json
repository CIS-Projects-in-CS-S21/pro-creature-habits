{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/elianacohen/AndroidStudioProjects/pro-creature-habits/src/components/petInventoryComponents/PetInventoryCards.js\";\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PetCard from \"./PetCard\";\nimport { ON_PET } from \"../../redux/petModalVisible\";\nimport { SELECT_PET } from \"../../redux/selectedPetItem\";\nvar styles = StyleSheet.create({\n  text: {\n    color: 'white'\n  },\n  cardsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    marginTop: 10,\n    flexWrap: 'wrap',\n    alignContent: 'flex-end'\n  },\n  highlightContainer: {\n    alignSelf: 'flex-end',\n    margin: 10\n  }\n});\n\nvar PetInventoryCards = function PetInventoryCards(items) {\n  var dispatch = useDispatch();\n  var names = [];\n\n  for (var _i = 0, _Object$entries = Object.entries(items.items); _i < _Object$entries.length; _i++) {\n    var _ref = _Object$entries[_i];\n\n    var _ref2 = _slicedToArray(_ref, 2);\n\n    var key = _ref2[0];\n    var value = _ref2[1];\n\n    if (items.items[key].show) {\n      names.push(key);\n    }\n  }\n\n  var _onPress = function onPress(item) {\n    console.log(\"PRESSED ITEM \" + item);\n\n    if (!items.items[item].wear || items.items[item].category == 'food') {\n      dispatch({\n        type: ON_PET,\n        data: 'press'\n      });\n      dispatch({\n        type: SELECT_PET,\n        data: item\n      });\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.cardsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }, names.map(function (item, index) {\n    return React.createElement(TouchableHighlight, {\n      activeOpacity: 0.8,\n      underlayColor: \"#000\",\n      onPress: function onPress() {\n        return _onPress(item);\n      },\n      key: index,\n      style: styles.highlightContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }\n    }, React.createElement(PetCard, {\n      key: index,\n      item: items.items[item],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }));\n  }));\n};\n\nexport default PetInventoryCards;","map":{"version":3,"sources":["/Users/elianacohen/AndroidStudioProjects/pro-creature-habits/src/components/petInventoryComponents/PetInventoryCards.js"],"names":["React","useDispatch","useSelector","PetCard","ON_PET","SELECT_PET","styles","StyleSheet","create","text","color","cardsContainer","flexDirection","justifyContent","marginTop","flexWrap","alignContent","highlightContainer","alignSelf","margin","PetInventoryCards","items","dispatch","names","Object","entries","key","value","show","push","onPress","item","console","log","wear","category","type","data","map","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;;;;AAEA,OAAOC,OAAP;AACA,SAAQC,MAAR;AACA,SAAQC,UAAR;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAChCC,EAAAA,IAAI,EAAE;AACLC,IAAAA,KAAK,EAAE;AADF,GAD0B;AAKhCC,EAAAA,cAAc,EAAE;AACfC,IAAAA,aAAa,EAAE,KADA;AAEfC,IAAAA,cAAc,EAAE,cAFD;AAGfC,IAAAA,SAAS,EAAE,EAHI;AAIfC,IAAAA,QAAQ,EAAE,MAJK;AAKfC,IAAAA,YAAY,EAAE;AALC,GALgB;AAYhCC,EAAAA,kBAAkB,EAAE;AACnBC,IAAAA,SAAS,EAAE,UADQ;AAEnBC,IAAAA,MAAM,EAAE;AAFW;AAZY,CAAlB,CAAf;;AAkBA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACpC,MAAMC,QAAQ,GAAGrB,WAAW,EAA5B;AACA,MAAIsB,KAAK,GAAG,EAAZ;;AACD,qCAA2BC,MAAM,CAACC,OAAP,CAAeJ,KAAK,CAACA,KAArB,CAA3B,qCAAwD;AAAA;;AAAA;;AAAA,QAA5CK,GAA4C;AAAA,QAAvCC,KAAuC;;AACtD,QAAIN,KAAK,CAACA,KAAN,CAAYK,GAAZ,EAAiBE,IAArB,EAA2B;AACzBL,MAAAA,KAAK,CAACM,IAAN,CAAWH,GAAX;AACD;AACF;;AAEA,MAAMI,QAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAgBF,IAA5B;;AACA,QAAI,CAACV,KAAK,CAACA,KAAN,CAAYU,IAAZ,EAAkBG,IAAnB,IAA2Bb,KAAK,CAACA,KAAN,CAAYU,IAAZ,EAAkBI,QAAlB,IAA8B,MAA7D,EAAqE;AAC9Db,MAAAA,QAAQ,CAAC;AAACc,QAAAA,IAAI,EAAEhC,MAAP;AAAciC,QAAAA,IAAI,EAAC;AAAnB,OAAD,CAAR;AACAf,MAAAA,QAAQ,CAAC;AAACc,QAAAA,IAAI,EAAE/B,UAAP;AAAmBgC,QAAAA,IAAI,EAAEN;AAAzB,OAAD,CAAR;AACH;AACJ,GANJ;;AAUA,SACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzB,MAAM,CAACK,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEY,KAAK,CAACe,GAAN,CAAU,UAACP,IAAD,EAAOQ,KAAP,EAAiB;AAC3B,WACC,oBAAC,kBAAD;AACC,MAAA,aAAa,EAAE,GADhB;AAEC,MAAA,aAAa,EAAC,MAFf;AAGC,MAAA,OAAO,EAAE;AAAA,eAAMT,QAAO,CAACC,IAAD,CAAb;AAAA,OAHV;AAIC,MAAA,GAAG,EAAEQ,KAJN;AAKC,MAAA,KAAK,EAAEjC,MAAM,CAACW,kBALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOC,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEsB,KAAd;AAAqB,MAAA,IAAI,EAAElB,KAAK,CAACA,KAAN,CAAYU,IAAZ,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPD,CADD;AAWA,GAZA,CADF,CADD;AAiBA,CApCD;;AAsCA,eAAeX,iBAAf","sourcesContent":["import React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {TouchableHighlight, View, StyleSheet} from \"react-native\";\nimport PetCard from \"./PetCard\";\nimport {ON_PET} from \"../../redux/petModalVisible\";\nimport {SELECT_PET} from \"../../redux/selectedPetItem\";\n\nconst styles = StyleSheet.create({\n\ttext: {\n\t\tcolor: 'white'\n\n\t},\n\tcardsContainer: {\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'space-evenly',\n\t\tmarginTop: 10,\n\t\tflexWrap: 'wrap',\n\t\talignContent: 'flex-end'\n\t},\n\thighlightContainer: {\n\t\talignSelf: 'flex-end',\n\t\tmargin: 10\n\t}\n});\n\nconst PetInventoryCards = (items) => {\n\tconst dispatch = useDispatch();\n\tlet names = [];\nfor (const [key, value] of Object.entries(items.items)) {\n  if (items.items[key].show) {\n    names.push(key);\n  }\n}\n\n\tconst onPress = (item) => {\n\t    console.log(\"PRESSED ITEM \"+item)\n\t    if (!items.items[item].wear || items.items[item].category == 'food') {\n            dispatch({type: ON_PET,data:'press'});\n            dispatch({type: SELECT_PET, data: item})\n        }\n    }\n\n\n\n\treturn (\n\t\t<View style={styles.cardsContainer}>\n\t\t\t{names.map((item, index) => {\n\t\t\t\treturn(\n\t\t\t\t\t<TouchableHighlight\n\t\t\t\t\t\tactiveOpacity={0.8}\n\t\t\t\t\t\tunderlayColor='#000'\n\t\t\t\t\t\tonPress={() => onPress(item)}\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\tstyle={styles.highlightContainer}\n\t\t\t\t\t>\n\t\t\t\t\t\t<PetCard key={index} item={items.items[item]} />\n\t\t\t\t\t</TouchableHighlight>\n\t\t\t\t)\n\t\t\t})}\n\t\t</View>\n\t)\n}\n\nexport default PetInventoryCards;"]},"metadata":{},"sourceType":"module"}