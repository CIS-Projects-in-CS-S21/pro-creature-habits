{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nvar ENABLE_SCREENS = true;\nexport function enableScreens() {\n  var shouldEnableScreens = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  ENABLE_SCREENS = shouldEnableScreens;\n}\nexport function screensEnabled() {\n  return ENABLE_SCREENS;\n}\nexport var NativeScreen = function (_React$Component) {\n  _inherits(NativeScreen, _React$Component);\n\n  var _super = _createSuper(NativeScreen);\n\n  function NativeScreen() {\n    _classCallCheck(this, NativeScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NativeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          active = _this$props.active,\n          activityState = _this$props.activityState,\n          style = _this$props.style,\n          _this$props$enabled = _this$props.enabled,\n          enabled = _this$props$enabled === void 0 ? true : _this$props$enabled,\n          rest = _objectWithoutProperties(_this$props, [\"active\", \"activityState\", \"style\", \"enabled\"]);\n\n      if (active !== undefined && activityState === undefined) {\n        activityState = active !== 0 ? 2 : 0;\n      }\n\n      return React.createElement(View, _extends({\n        style: [style, ENABLE_SCREENS && enabled && activityState !== 2 ? {\n          display: 'none'\n        } : null]\n      }, rest));\n    }\n  }]);\n\n  return NativeScreen;\n}(React.Component);\nexport var Screen = Animated.createAnimatedComponent(NativeScreen);\nexport var ScreenContainer = View;\nexport var NativeScreenContainer = View;\nexport var ScreenStack = View;\nexport var ScreenStackHeaderBackButtonImage = View;\nexport var ScreenStackHeaderLeftView = View;\nexport var ScreenStackHeaderRightView = View;\nexport var ScreenStackHeaderCenterView = View;\nexport var ScreenStackHeaderConfig = View;\nexport var shouldUseActivityState = true;","map":{"version":3,"sources":["index.js"],"names":["ENABLE_SCREENS","shouldEnableScreens","React","render","enabled","rest","active","activityState","display","Screen","Animated","ScreenContainer","NativeScreenContainer","ScreenStack","ScreenStackHeaderBackButtonImage","ScreenStackHeaderLeftView","ScreenStackHeaderRightView","ScreenStackHeaderCenterView","ScreenStackHeaderConfig","shouldUseActivityState"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;;;AAGA,IAAIA,cAAc,GAAlB,IAAA;AAEA,OAAO,SAAA,aAAA,GAAmD;AAAA,MAA5BC,mBAA4B,uEAAnD,IAAmD;AACxDD,EAAAA,cAAc,GAAdA,mBAAAA;AACD;AAED,OAAO,SAAA,cAAA,GAA0B;AAC/B,SAAA,cAAA;AACD;AAED,WAAO,YAAP;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACEG,kBAAS;AAAA,wBACyD,KAAhE,KADO;AAAA,UACH,MADG,eACH,MADG;AAAA,UACH,aADG,eACH,aADG;AAAA,UACH,KADG,eACH,KADG;AAAA,4CAC6BC,OAD7B;AAAA,UAC6BA,OAD7B,oCACH,IADG;AAAA,UACgDC,IADhD;;AAEP,UAAIC,MAAM,KAANA,SAAAA,IAAwBC,aAAa,KAAzC,SAAA,EAAyD;AACvDA,QAAAA,aAAa,GAAGD,MAAM,KAANA,CAAAA,GAAAA,CAAAA,GADuC,CACvDC;AACD;;AACD,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AACE,QAAA,KAAK,EAAE,CAAA,KAAA,EAEL,cAAc,IAAd,OAAA,IAA6BA,aAAa,KAA1C,CAAA,GACI;AAAEC,UAAAA,OAAO,EAAE;AAAX,SADJ,GAFK,IAAA;AADT,OAAA,EADF,IACE,CAAA,CADF;AAWD;AAjBH;;AAAA;AAAA,EAAkCN,KAAK,CAAhC,SAAP;AAoBA,OAAO,IAAMO,MAAM,GAAGC,QAAQ,CAARA,uBAAAA,CAAf,YAAeA,CAAf;AAEP,OAAO,IAAMC,eAAe,GAArB,IAAA;AAEP,OAAO,IAAMC,qBAAqB,GAA3B,IAAA;AAEP,OAAO,IAAMC,WAAW,GAAjB,IAAA;AAEP,OAAO,IAAMC,gCAAgC,GAAtC,IAAA;AAEP,OAAO,IAAMC,yBAAyB,GAA/B,IAAA;AAEP,OAAO,IAAMC,0BAA0B,GAAhC,IAAA;AAEP,OAAO,IAAMC,2BAA2B,GAAjC,IAAA;AAEP,OAAO,IAAMC,uBAAuB,GAA7B,IAAA;AAEP,OAAO,IAAMC,sBAAsB,GAA5B,IAAA","sourcesContent":["import React from 'react';\nimport { Animated, View } from 'react-native';\n\nlet ENABLE_SCREENS = true;\n\nexport function enableScreens(shouldEnableScreens = true) {\n  ENABLE_SCREENS = shouldEnableScreens;\n}\n\nexport function screensEnabled() {\n  return ENABLE_SCREENS;\n}\n\nexport class NativeScreen extends React.Component {\n  render() {\n    let { active, activityState, style, enabled = true, ...rest } = this.props;\n    if (active !== undefined && activityState === undefined) {\n      activityState = active !== 0 ? 2 : 0; // change taken from index.native.js\n    }\n    return (\n      <View\n        style={[\n          style,\n          ENABLE_SCREENS && enabled && activityState !== 2\n            ? { display: 'none' }\n            : null,\n        ]}\n        {...rest}\n      />\n    );\n  }\n}\n\nexport const Screen = Animated.createAnimatedComponent(NativeScreen);\n\nexport const ScreenContainer = View;\n\nexport const NativeScreenContainer = View;\n\nexport const ScreenStack = View;\n\nexport const ScreenStackHeaderBackButtonImage = View;\n\nexport const ScreenStackHeaderLeftView = View;\n\nexport const ScreenStackHeaderRightView = View;\n\nexport const ScreenStackHeaderCenterView = View;\n\nexport const ScreenStackHeaderConfig = View;\n\nexport const shouldUseActivityState = true;\n"]},"metadata":{},"sourceType":"module"}