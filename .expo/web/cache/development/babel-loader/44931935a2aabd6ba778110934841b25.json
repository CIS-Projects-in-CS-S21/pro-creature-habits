{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matt\\\\Documents\\\\GitHub\\\\pro-creature-habits\\\\node_modules\\\\@react-native-community\\\\art\\\\lib\\\\ClippingRectangle.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport { extractOpacity, extractTransform, extractShadow } from \"./helpers\";\nimport { NativeGroup } from \"./nativeComponents\";\n\nvar ClippingRectangle = function (_React$Component) {\n  _inherits(ClippingRectangle, _React$Component);\n\n  var _super = _createSuper(ClippingRectangle);\n\n  function ClippingRectangle() {\n    _classCallCheck(this, ClippingRectangle);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ClippingRectangle, [{\n    key: \"render\",\n    value: function render() {\n      var clipping = [this.props.x, this.props.y, this.props.width, this.props.height];\n\n      var _this$props = this.props,\n          x = _this$props.x,\n          y = _this$props.y,\n          propsExcludingXAndY = _objectWithoutProperties(_this$props, [\"x\", \"y\"]);\n\n      return React.createElement(NativeGroup, {\n        clipping: clipping,\n        opacity: extractOpacity(this.props),\n        transform: extractTransform(propsExcludingXAndY),\n        shadow: extractShadow(this.props),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, this.props.children);\n    }\n  }]);\n\n  return ClippingRectangle;\n}(React.Component);\n\nClippingRectangle.defaultProps = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0\n};\nexport { ClippingRectangle as default };","map":{"version":3,"sources":["C:/Users/Matt/Documents/GitHub/pro-creature-habits/node_modules/@react-native-community/art/lib/ClippingRectangle.js"],"names":["React","extractOpacity","extractTransform","extractShadow","NativeGroup","ClippingRectangle","clipping","props","x","y","width","height","propsExcludingXAndY","children","Component","defaultProps"],"mappings":";;;;;;;;;;;;AASA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,cAAR,EAAwBC,gBAAxB,EAA0CC,aAA1C;AACA,SAAQC,WAAR;;IAaqBC,iB;;;;;;;;;;;;;WAQnB,kBAAS;AACP,UAAMC,QAAQ,GAAG,CACf,KAAKC,KAAL,CAAWC,CADI,EAEf,KAAKD,KAAL,CAAWE,CAFI,EAGf,KAAKF,KAAL,CAAWG,KAHI,EAIf,KAAKH,KAAL,CAAWI,MAJI,CAAjB;;AADO,wBAUgC,KAAKJ,KAVrC;AAAA,UAUAC,CAVA,eAUAA,CAVA;AAAA,UAUGC,CAVH,eAUGA,CAVH;AAAA,UAUSG,mBAVT;;AAYP,aACE,oBAAC,WAAD;AACE,QAAA,QAAQ,EAAEN,QADZ;AAEE,QAAA,OAAO,EAAEL,cAAc,CAAC,KAAKM,KAAN,CAFzB;AAGE,QAAA,SAAS,EAAEL,gBAAgB,CAACU,mBAAD,CAH7B;AAIE,QAAA,MAAM,EAAET,aAAa,CAAC,KAAKI,KAAN,CAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,KAAKA,KAAL,CAAWM,QALd,CADF;AASD;;;;EA7B4Cb,KAAK,CAACc,S;;AAAhCT,iB,CACZU,Y,GAAe;AACpBP,EAAAA,CAAC,EAAE,CADiB;AAEpBC,EAAAA,CAAC,EAAE,CAFiB;AAGpBC,EAAAA,KAAK,EAAE,CAHa;AAIpBC,EAAAA,MAAM,EAAE;AAJY,C;SADHN,iB","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport * as React from 'react';\r\nimport {extractOpacity, extractTransform, extractShadow} from './helpers';\r\nimport {NativeGroup} from './nativeComponents';\r\nimport type {OpacityProps, TransformProps, ShadowProps} from './types';\r\n\r\ntype ClippingRectangleProps = OpacityProps &\r\n  TransformProps &\r\n  ShadowProps & {\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number,\r\n    children?: React.Node,\r\n  };\r\n\r\nexport default class ClippingRectangle extends React.Component<ClippingRectangleProps> {\r\n  static defaultProps = {\r\n    x: 0,\r\n    y: 0,\r\n    width: 0,\r\n    height: 0,\r\n  };\r\n\r\n  render() {\r\n    const clipping = [\r\n      this.props.x,\r\n      this.props.y,\r\n      this.props.width,\r\n      this.props.height,\r\n    ];\r\n\r\n    // The current clipping API requires x and y to be ignored in the transform\r\n    // $FlowFixMe\r\n    const {x, y, ...propsExcludingXAndY} = this.props;\r\n\r\n    return (\r\n      <NativeGroup\r\n        clipping={clipping}\r\n        opacity={extractOpacity(this.props)}\r\n        transform={extractTransform(propsExcludingXAndY)}\r\n        shadow={extractShadow(this.props)}>\r\n        {this.props.children}\r\n      </NativeGroup>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}