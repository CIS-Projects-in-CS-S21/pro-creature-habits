{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as SQLite from 'expo-sqlite';\nimport { BaseModel, types } from 'expo-sqlite-orm';\n\nvar UserInfo = function (_BaseModel) {\n  _inherits(UserInfo, _BaseModel);\n\n  var _super = _createSuper(UserInfo);\n\n  function UserInfo(obj) {\n    _classCallCheck(this, UserInfo);\n\n    return _super.call(this, obj);\n  }\n\n  _createClass(UserInfo, null, [{\n    key: \"database\",\n    get: function get() {\n      return function _callee() {\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", SQLite.openDatabase('userinfo.db'));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n    }\n  }, {\n    key: \"tableName\",\n    get: function get() {\n      return 'userinfo';\n    }\n  }, {\n    key: \"columnMapping\",\n    get: function get() {\n      return {\n        id: {\n          type: types.INTEGER,\n          primary_key: true\n        },\n        username: {\n          type: types.TEXT,\n          not_null: true\n        },\n        password: {\n          type: types.TEXT,\n          not_null: true\n        },\n        email: {\n          type: types.TEXT\n        },\n        coinBalance: {\n          type: types.INTEGER\n        }\n      };\n    }\n  }]);\n\n  return UserInfo;\n}(BaseModel);\n\nexport { UserInfo as default };","map":{"version":3,"sources":["/Users/elianacohen/AndroidStudioProjects/pro-creature-habits/src/databases/UserInfo.js"],"names":["React","SQLite","BaseModel","types","UserInfo","obj","openDatabase","id","type","INTEGER","primary_key","username","TEXT","not_null","password","email","coinBalance"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAO,KAAKC,MAAZ,MAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,iBAAjC;;IAEqBC,Q;;;;;AACnB,oBAAYC,GAAZ,EAAiB;AAAA;;AAAA,6BACTA,GADS;AAEhB;;;;SAED,eAAsB;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAYJ,MAAM,CAACK,YAAP,CAAoB,aAApB,CAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;;SAED,eAAuB;AACrB,aAAO,UAAP;AACD;;;SAED,eAA2B;AACzB,aAAO;AACLC,QAAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAEL,KAAK,CAACM,OAAd;AAAuBC,UAAAA,WAAW,EAAE;AAApC,SADC;AAELC,QAAAA,QAAQ,EAAE;AAAEH,UAAAA,IAAI,EAAEL,KAAK,CAACS,IAAd;AAAoBC,UAAAA,QAAQ,EAAE;AAA9B,SAFL;AAGLC,QAAAA,QAAQ,EAAE;AAAEN,UAAAA,IAAI,EAAEL,KAAK,CAACS,IAAd;AAAoBC,UAAAA,QAAQ,EAAE;AAA9B,SAHL;AAILE,QAAAA,KAAK,EAAE;AAAGP,UAAAA,IAAI,EAAEL,KAAK,CAACS;AAAf,SAJF;AAKLI,QAAAA,WAAW,EAAE;AAAER,UAAAA,IAAI,EAAEL,KAAK,CAACM;AAAd;AALR,OAAP;AAOD;;;;EArBmCP,S;;SAAjBE,Q","sourcesContent":["import React from 'react';\nimport {Text, View, Button, StyleSheet} from \"react-native\";\nimport * as SQLite from 'expo-sqlite'\nimport { BaseModel, types } from 'expo-sqlite-orm'\n \nexport default class UserInfo extends BaseModel {\n  constructor(obj) {\n    super(obj)\n  }\n \n  static get database() {\n    return async () => SQLite.openDatabase('userinfo.db')\n  }\n \n  static get tableName() {\n    return 'userinfo'\n  }\n \n  static get columnMapping() {\n    return {\n      id: { type: types.INTEGER, primary_key: true },\n      username: { type: types.TEXT, not_null: true },\n      password: { type: types.TEXT, not_null: true },\n      email: {  type: types.TEXT},\n      coinBalance: { type: types.INTEGER}\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}