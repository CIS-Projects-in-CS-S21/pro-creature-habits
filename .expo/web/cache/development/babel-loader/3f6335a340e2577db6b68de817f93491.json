{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport Repository from \"./Repository\";\n\nvar isFunction = function isFunction(p) {\n  return Object.prototype.toString.call(p) === '[object Function]';\n};\n\nvar BaseModel = function () {\n  function BaseModel() {\n    var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, BaseModel);\n\n    this.setProperties(obj);\n  }\n\n  _createClass(BaseModel, [{\n    key: \"setProperties\",\n    value: function setProperties(props) {\n      var _this = this;\n\n      var cm = this.constructor.columnMapping;\n      Object.keys(cm).forEach(function (k) {\n        if (props[k] !== undefined) {\n          _this[k] = props[k];\n        } else if (isFunction(cm[k].default)) {\n          _this[k] = cm[k].default();\n        } else {\n          _this[k] = null;\n        }\n      });\n      return this;\n    }\n  }, {\n    key: \"save\",\n    value: function save() {\n      var _this2 = this;\n\n      if (this.id) {\n        return this.constructor.repository.update(this).then(function (res) {\n          return _this2.setProperties(res);\n        });\n      } else {\n        return this.constructor.repository.insert(this).then(function (res) {\n          return _this2.setProperties(res);\n        });\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      return this.constructor.repository.destroy(this.id);\n    }\n  }], [{\n    key: \"database\",\n    get: function get() {\n      throw new Error('Database n達o definida');\n    }\n  }, {\n    key: \"repository\",\n    get: function get() {\n      return new Repository(this.database, this.tableName, this.columnMapping);\n    }\n  }, {\n    key: \"tableName\",\n    get: function get() {\n      throw new Error('tableName n達o definido');\n    }\n  }, {\n    key: \"columnMapping\",\n    get: function get() {\n      return {};\n    }\n  }, {\n    key: \"createTable\",\n    value: function createTable() {\n      return this.repository.createTable();\n    }\n  }, {\n    key: \"dropTable\",\n    value: function dropTable() {\n      return this.repository.dropTable();\n    }\n  }, {\n    key: \"create\",\n    value: function create(obj) {\n      var _this3 = this;\n\n      return this.repository.insert(obj).then(function (res) {\n        return new _this3(res);\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update(obj) {\n      var _this4 = this;\n\n      return this.repository.update(obj).then(function (res) {\n        return new _this4(res);\n      });\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(id) {\n      return this.repository.destroy(id);\n    }\n  }, {\n    key: \"destroyAll\",\n    value: function destroyAll() {\n      return this.repository.destroyAll();\n    }\n  }, {\n    key: \"find\",\n    value: function find(id) {\n      var _this5 = this;\n\n      return this.repository.find(id).then(function (res) {\n        return res ? new _this5(res) : res;\n      });\n    }\n  }, {\n    key: \"findBy\",\n    value: function findBy(where) {\n      var _this6 = this;\n\n      return this.repository.findBy(where).then(function (res) {\n        return res ? new _this6(res) : res;\n      });\n    }\n  }, {\n    key: \"query\",\n    value: function query(options) {\n      return this.repository.query(options);\n    }\n  }]);\n\n  return BaseModel;\n}();\n\nexport { BaseModel as default };","map":{"version":3,"sources":["/Users/elianacohen/AndroidStudioProjects/pro-creature-habits/node_modules/expo-sqlite-orm/src/BaseModel.js"],"names":["Repository","isFunction","p","Object","prototype","toString","call","BaseModel","obj","setProperties","props","cm","constructor","columnMapping","keys","forEach","k","undefined","default","id","repository","update","then","res","insert","destroy","Error","database","tableName","createTable","dropTable","destroyAll","find","where","findBy","options","query"],"mappings":"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","sourcesContent":["import Repository from './Repository'\n\nconst isFunction = p =>\n  Object.prototype.toString.call(p) === '[object Function]'\n\nexport default class BaseModel {\n  constructor(obj = {}) {\n    this.setProperties(obj)\n  }\n\n  setProperties(props) {\n    const cm = this.constructor.columnMapping\n    Object.keys(cm).forEach(k => {\n      if (props[k] !== undefined) {\n        this[k] = props[k]\n      } else if (isFunction(cm[k].default)) {\n        this[k] = cm[k].default()\n      } else {\n        this[k] = null\n      }\n    })\n    return this\n  }\n\n  static get database() {\n    throw new Error('Database n達o definida')\n  }\n\n  static get repository() {\n    return new Repository(this.database, this.tableName, this.columnMapping)\n  }\n\n  static get tableName() {\n    throw new Error('tableName n達o definido')\n  }\n\n  static get columnMapping() {\n    return {}\n  }\n\n  static createTable() {\n    return this.repository.createTable()\n  }\n\n  static dropTable() {\n    return this.repository.dropTable()\n  }\n\n  static create(obj) {\n    return this.repository.insert(obj).then(res => new this(res))\n  }\n\n  static update(obj) {\n    return this.repository.update(obj).then(res => new this(res))\n  }\n\n  save() {\n    if (this.id) {\n      return this.constructor.repository\n        .update(this)\n        .then(res => this.setProperties(res))\n    } else {\n      return this.constructor.repository\n        .insert(this)\n        .then(res => this.setProperties(res))\n    }\n  }\n\n  destroy() {\n    return this.constructor.repository.destroy(this.id)\n  }\n\n  static destroy(id) {\n    return this.repository.destroy(id)\n  }\n\n  static destroyAll() {\n    return this.repository.destroyAll()\n  }\n\n  static find(id) {\n    return this.repository.find(id).then(res => (res ? new this(res) : res))\n  }\n\n  static findBy(where) {\n    return this.repository\n      .findBy(where)\n      .then(res => (res ? new this(res) : res))\n  }\n\n  /**\n   * @param {columns: '*', page: 1, limit: 30, where: {}, order: 'id DESC'} options\n   */\n  static query(options) {\n    return this.repository.query(options)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}