{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Matt\\\\Documents\\\\GitHub\\\\pro-creature-habits\\\\src\\\\screens\\\\Profile.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CHANGENAME } from \"../redux/petInfo\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport PetInventoryCards from \"../components/petInventoryComponents/PetInventoryCards\";\nimport PetImage from \"../components/petInventoryComponents/PetImage\";\nimport { FILTER_PET, FILTER_ALL_PET, SELECTED } from \"../redux/petInventory\";\nimport HealthBar from \"../components/HealthBar\";\nimport { OFF_PET } from \"../redux/petModalVisible\";\nimport { ItemInventory } from \"../components/ItemInventory\";\nimport { showMessage } from \"react-native-flash-message\";\nimport { Audio } from 'expo-av';\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { ON_PET } from \"../redux/petModalVisible\";\nimport { PlaySound } from \"../components/audio.js\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#406BE9'\n  },\n  text: {\n    color: 'white',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingTop: 5,\n    paddingRight: 20\n  },\n  text2: {\n    color: 'black',\n    fontSize: 20,\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  image: {\n    width: 100,\n    height: 100,\n    borderWidth: 2,\n    borderColor: \"white\",\n    borderRadius: 20,\n    padding: 8,\n    backgroundColor: \"lightblue\",\n    margin: 10\n  },\n  imageContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    marginTop: 20,\n    flexWrap: 'wrap',\n    alignContent: 'flex-end'\n  },\n  balanceContainer: {\n    flexDirection: 'row',\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: 'white',\n    backgroundColor: 'lightblue',\n    marginLeft: 10,\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 3,\n    elevation: 11\n  },\n  balanceText: {\n    color: 'white',\n    fontSize: 25,\n    marginTop: 5,\n    marginLeft: 5,\n    marginBottom: 5\n  },\n  healthbarContainer: {\n    flexDirection: 'column'\n  },\n  dropdownContainer: {\n    height: 40,\n    alignSelf: 'stretch',\n    marginLeft: 20,\n    marginRight: 20,\n    marginTop: 20\n  },\n  modalView: {\n    margin: 10,\n    backgroundColor: '#402688',\n    borderRadius: 10,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  button: {\n    borderRadius: 7,\n    width: 80,\n    alignItems: 'center',\n    padding: 10,\n    elevation: 2,\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  modalFooter: {\n    flexDirection: 'row',\n    paddingTop: 15\n  },\n  itemImage: {\n    width: 75,\n    height: 75,\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 3,\n    padding: 3\n  },\n  textStyle: {\n    color: 'white'\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  centeredView2: {\n    flexDirection: 'row',\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  }\n});\n\nvar PetProfile = function PetProfile() {\n  var dispatch = useDispatch();\n  var petImgChoice = useSelector(function (state) {\n    return state.petDetails[1];\n  });\n  var selectedItem = useSelector(function (state) {\n    return state.selectedPetItem;\n  });\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      textName = _React$useState2[0],\n      _onChangeText = _React$useState2[1];\n\n  var findImage = function findImage() {\n    console.log(petImgChoice);\n\n    if (petImgChoice === \"cat\") {\n      return require(\"../images/cat.png\");\n    } else {\n      return require(\"../images/dog.png\");\n    }\n  };\n\n  var changeFilter = function changeFilter(category) {\n    console.log(\"CHANGE FILTER\");\n\n    if (category === 'all') {\n      dispatch({\n        type: FILTER_ALL_PET\n      });\n    } else {\n      dispatch({\n        type: FILTER_PET,\n        data: category\n      });\n    }\n  };\n\n  var upperCase = function upperCase(string) {\n    return string[0].toUpperCase() + string.slice(1);\n  };\n\n  var handlePurchase = function handlePurchase(item) {\n    dispatch({\n      type: OFF_PET\n    });\n\n    if (ItemInventory[item].category === 'food') {\n      dispatch({\n        type: SELECTED,\n        data: 'select_food',\n        thing: item\n      });\n      PlaySound('../components/ra.wav');\n    } else if (ItemInventory[item].category === 'toys') {\n      dispatch({\n        type: SELECTED,\n        data: 'select_toy',\n        thing: item\n      });\n    } else {\n      dispatch({\n        type: SELECTED,\n        data: 'select_clothes',\n        thing: item\n      });\n    }\n\n    showMessage({\n      message: upperCase(ItemInventory[item].name) + \" has been used\",\n      type: \"success\",\n      statusBarHeight: 52\n    });\n  };\n\n  var editPet = function editPet(name) {\n    dispatch({\n      type: CHANGENAME,\n      changes: name\n    });\n    dispatch({\n      type: \"OFF_PET\"\n    });\n  };\n\n  var onUpdate = function onUpdate() {\n    dispatch({\n      type: ON_PET,\n      data: \"edit\"\n    });\n  };\n\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 1\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 4\n    }\n  }, useSelector(function (state) {\n    return state.petDetails[0];\n  })), React.createElement(TouchableOpacity, {\n    onPress: onUpdate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 4\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"pencil\",\n    size: 30,\n    style: {\n      color: \"#637ed0\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  }))), React.createElement(View, {\n    style: styles.imageContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 4\n    }\n  }, React.createElement(PetImage, {\n    items: useSelector(function (state) {\n      return state.petInv;\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.healthbarContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, React.createElement(HealthBar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }\n  }))), React.createElement(DropDownPicker, {\n    items: [{\n      label: 'All',\n      value: 'all'\n    }, {\n      label: 'Clothes',\n      value: 'clothes'\n    }, {\n      label: 'Food',\n      value: 'food'\n    }, {\n      label: 'Toys',\n      value: 'toys'\n    }],\n    defaultValue: 'all',\n    containerStyle: styles.dropdownContainer,\n    onChangeItem: function onChangeItem(item) {\n      return changeFilter(item.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 4\n    }\n  }), React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: useSelector(function (state) {\n      return state.petMV;\n    }) !== \"off\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 4\n    }\n  }, useSelector(function (state) {\n    return state.petMV;\n  }) === \"press\" ? React.createElement(View, {\n    style: styles.centeredView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 19\n    }\n  }, React.createElement(Image, {\n    style: styles.itemImage,\n    source: ItemInventory[selectedItem].uri,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 16\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: 'white',\n      paddingTop: 10,\n      paddingBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 16\n    }\n  }, ItemInventory[selectedItem].inventoryText), React.createElement(View, {\n    style: styles.modalFooter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 16\n    }\n  }, React.createElement(Pressable, {\n    style: [styles.button, styles.buttonClose, {\n      left: -30\n    }],\n    onPress: function onPress() {\n      return dispatch({\n        type: OFF_PET\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 16\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 17\n    }\n  }, \"Cancel\")), React.createElement(Pressable, {\n    style: [styles.button, styles.buttonClose, {\n      right: -30\n    }],\n    onPress: function onPress() {\n      return handlePurchase(selectedItem);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 22\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 20\n    }\n  }, \"Yes \"))))) : React.createElement(View, {\n    style: styles.centeredView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 16\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 30\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 38\n    }\n  }, \"Please enter a name for your pet\"), React.createElement(View, {\n    style: styles.imageContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 50\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      width: \"85%\",\n      backgroundColor: \"white\",\n      marginBottom: 10,\n      padding: 15\n    },\n    placeholder: \"Your Pet's Name\",\n    onChangeText: function onChangeText(textName) {\n      return _onChangeText(textName);\n    },\n    value: textName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 50\n    }\n  })), React.createElement(View, {\n    style: styles.modalFooter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 39\n    }\n  }, React.createElement(Pressable, {\n    style: [styles.button, styles.buttonClose, {\n      left: -30\n    }],\n    onPress: function onPress() {\n      return dispatch({\n        type: OFF_PET\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 39\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 41\n    }\n  }, \"Cancel\")), React.createElement(Pressable, {\n    style: [styles.button, styles.buttonClose, {\n      right: -30\n    }],\n    onPress: function onPress() {\n      return editPet(textName);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 46\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 44\n    }\n  }, \"Finish \")))))), React.createElement(PetInventoryCards, {\n    items: useSelector(function (state) {\n      return state.petInv;\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default PetProfile;","map":{"version":3,"sources":["C:/Users/Matt/Documents/GitHub/pro-creature-habits/src/screens/Profile.js"],"names":["React","useSelector","useDispatch","CHANGENAME","DropDownPicker","PetInventoryCards","PetImage","FILTER_PET","FILTER_ALL_PET","SELECTED","HealthBar","OFF_PET","ItemInventory","showMessage","Audio","MaterialCommunityIcons","ON_PET","PlaySound","styles","StyleSheet","create","container","flex","backgroundColor","text","color","fontSize","textAlign","paddingTop","paddingRight","text2","fontWeight","image","width","height","borderWidth","borderColor","borderRadius","padding","margin","imageContainer","flexDirection","justifyContent","marginTop","flexWrap","alignContent","balanceContainer","marginLeft","shadowOffset","shadowOpacity","shadowRadius","elevation","balanceText","marginBottom","healthbarContainer","dropdownContainer","alignSelf","marginRight","modalView","alignItems","shadowColor","buttonClose","button","modalFooter","itemImage","textStyle","centeredView","centeredView2","PetProfile","dispatch","petImgChoice","state","petDetails","selectedItem","selectedPetItem","useState","textName","onChangeText","findImage","console","log","require","changeFilter","category","type","data","upperCase","string","toUpperCase","slice","handlePurchase","item","thing","message","name","statusBarHeight","editPet","changes","onUpdate","petInv","label","value","petMV","uri","paddingBottom","inventoryText","left","right"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View, Text,ScrollView, StyleSheet, Image, Modal, Pressable, TouchableOpacity, TextInput} from 'react-native';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {CHANGENAME} from \"../redux/petInfo\";\r\nimport DropDownPicker from \"react-native-dropdown-picker\";\r\nimport PetInventoryCards from \"../components/petInventoryComponents/PetInventoryCards\";\r\nimport PetImage from \"../components/petInventoryComponents/PetImage\";\r\nimport {FILTER_PET, FILTER_ALL_PET,SELECTED} from \"../redux/petInventory\";\r\nimport HealthBar from \"../components/HealthBar\";\r\nimport {OFF_PET} from \"../redux/petModalVisible\";\r\nimport {ItemInventory} from \"../components/ItemInventory\";\r\nimport { showMessage } from \"react-native-flash-message\";\r\nimport { Audio } from 'expo-av';\r\nimport {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\nimport {ON_PET} from \"../redux/petModalVisible\";\r\n\r\nimport {PlaySound} from \"../components/audio.js\";\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#406BE9',\r\n    },\r\n    text: {\r\n        color: 'white',\r\n        fontSize: 20,\r\n        textAlign: 'center',\r\n        paddingTop: 5,\r\n        paddingRight:20,\r\n    },\r\n    text2: {\r\n            color: 'black',\r\n            fontSize: 20,\r\n            textAlign: 'center',\r\n            fontWeight: 'bold',\r\n        },\r\n    image: {\r\n        width: 100,\r\n        height: 100,\r\n        borderWidth: 2,\r\n        \t\tborderColor: \"white\",\r\n        \t\tborderRadius: 20,\r\n        \t\tpadding: 8,\r\n        \t\tbackgroundColor: \"lightblue\",\r\n        \t\tmargin: 10\r\n    },\r\n    imageContainer: {\r\n            flexDirection: 'row',\r\n    \t\tjustifyContent: 'space-evenly',\r\n    \t\tmarginTop: 20,\r\n    \t\tflexWrap: 'wrap',\r\n    \t\talignContent: 'flex-end'\r\n    },\r\n    balanceContainer: {\r\n    \t\tflexDirection: 'row',\r\n    \t\tborderWidth: 2,\r\n    \t\tborderRadius: 10,\r\n    \t\tborderColor: 'white',\r\n    \t\tbackgroundColor: 'lightblue',\r\n    \t\tmarginLeft: 10,\r\n    \t\tshadowOffset: {width: 0, height: 5},\r\n    \t\tshadowOpacity: 0.8,\r\n    \t\tshadowRadius: 3,\r\n    \t\televation: 11\r\n    \t},\r\n    \tbalanceText: {\r\n    \t\tcolor: 'white',\r\n    \t\tfontSize: 25,\r\n    \t\tmarginTop: 5,\r\n    \t\tmarginLeft: 5,\r\n    \t\tmarginBottom: 5\r\n    \t},\r\n    \thealthbarContainer: {\r\n    \t    flexDirection:'column'\r\n\r\n    \t},\r\n    \tdropdownContainer: {\r\n    \t\theight: 40,\r\n    \t\talignSelf: 'stretch',\r\n    \t\tmarginLeft: 20,\r\n    \t\tmarginRight:20,\r\n    \t\tmarginTop: 20\r\n    \t},\r\n    \tmodalView: {\r\n        \t\tmargin: 10,\r\n        \t\tbackgroundColor: '#402688',\r\n        \t\tborderRadius: 10,\r\n        \t\tpadding: 35,\r\n        \t\talignItems: \"center\",\r\n        \t\tshadowColor: \"#000\",\r\n        \t\tshadowOffset: {\r\n        \t\t\twidth: 0,\r\n        \t\t\theight: 2\r\n        \t\t},\r\n        \t\tshadowOpacity: 0.25,\r\n        \t\tshadowRadius: 4,\r\n        \t\televation: 5\r\n        \t},\r\n        \tbuttonClose: {\r\n        \t\tbackgroundColor: \"#2196F3\",\r\n        \t},\r\n        \tbutton: {\r\n        \t\tborderRadius: 7,\r\n        \t\twidth: 80,\r\n        \t\talignItems: 'center',\r\n        \t\tpadding: 10,\r\n        \t\televation: 2,\r\n        \t\tjustifyContent: 'center',\r\n        \t\tflexDirection: 'row',\r\n        \t},\r\n        \tmodalFooter: {\r\n            \tflexDirection: 'row',\r\n        \t\tpaddingTop: 15\r\n        \t},\r\n        \titemImage: {\r\n            \t\twidth:75,\r\n            \t\theight:75,\r\n            \t\tshadowOffset: {width: 0, height: 1},\r\n            \t\tshadowOpacity: 0.8,\r\n            \t\tshadowRadius: 3,\r\n            \t\tpadding: 3\r\n            \t},\r\n            \ttextStyle: {\r\n                \tcolor: 'white'\r\n            \t},\r\n            \tcenteredView: {\r\n                \t\tflex: 1,\r\n                \t\tjustifyContent: \"center\",\r\n                \t\talignItems: \"center\",\r\n                \t\tmarginTop: 22\r\n                \t},\r\n                \tcenteredView2: {\r\n                \tflexDirection:'row',\r\n                                    \t\tjustifyContent: \"center\",\r\n                                    \t\talignItems: \"center\",\r\n                                    \t\tmarginTop: 22\r\n                                    \t},\r\n\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\nconst PetProfile = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const petImgChoice = useSelector(state => state.petDetails[1]);\r\n\r\n    /*TODO create selected pet item*/\r\n    const selectedItem = useSelector(state=>state.selectedPetItem);\r\n    const [textName, onChangeText] = React.useState('');\r\n\r\n    const findImage = () => {\r\n        console.log(petImgChoice);\r\n    \tif (petImgChoice === \"cat\") {\r\n    \t    return require('../images/cat.png');\r\n    \t} else {\r\n    \t    return require('../images/dog.png');\r\n    \t}\r\n    }\r\n\r\n\r\n\r\n    \tconst changeFilter = (category) => {\r\n    \tconsole.log(\"CHANGE FILTER\")\r\n    \t\tif(category === 'all') {\r\n    \t\t\tdispatch({type: FILTER_ALL_PET});\r\n    \t\t} else {\r\n    \t\t\tdispatch({type: FILTER_PET, data: category});\r\n    \t\t}\r\n    \t}\r\n\r\n    \tconst upperCase = (string) => {\r\n        \t\treturn string[0].toUpperCase() + string.slice(1);\r\n        \t}\r\n\r\n    \tconst handlePurchase = (item) => {\r\n        \t\tdispatch({type: OFF_PET});\r\n        \t\tif(ItemInventory[item].category === 'food') {\r\n                    dispatch({type: SELECTED, data: 'select_food',thing: item});\r\n                    PlaySound('../components/ra.wav');\r\n        \t\t} else if (ItemInventory[item].category === 'toys') {\r\n        \t\t\tdispatch({type: SELECTED, data: 'select_toy',thing: item});\r\n        \t\t} else {\r\n        \t\t\tdispatch({type: SELECTED, data: 'select_clothes',thing: item})\r\n        \t\t}\r\n\r\n        \t\tshowMessage({\r\n        \t\t\tmessage: `${upperCase(ItemInventory[item].name)} has been used`,\r\n        \t\t\ttype: \"success\",\r\n        \t\t\tstatusBarHeight: 52,\r\n        \t\t})\r\n        \t}\r\n\r\n        \tconst editPet = (name) => {\r\n                dispatch({type: CHANGENAME, changes: name});\r\n                dispatch({type:\"OFF_PET\"});\r\n\r\n        \t}\r\n\r\n\r\n        \t/*(const [sound, setSound] = React.useState();\r\n\r\n              async function playSound() {\r\n                console.log('Loading Sound');\r\n                const { sound } = await Audio.Sound.createAsync(\r\n                   require('../components/ra.wav')\r\n                );\r\n                setSound(sound);\r\n\r\n                console.log('Playing Sound');\r\n                await sound.playAsync(); }\r\n\r\n              React.useEffect(() => {\r\n                return sound\r\n                  ? () => {\r\n                      console.log('Unloading Sound');\r\n                      sound.unloadAsync(); }\r\n                  : undefined;\r\n              }, [sound]);\r\n\t\t\t  */\r\n              \r\n\t\t\t\tconst onUpdate = () =>{\r\n                    dispatch({type: ON_PET,data:\"edit\"});\r\n               }\r\n\t\t\t\r\n\treturn (\r\n<ScrollView style={styles.container}>\r\n            <View style = {styles.centeredView2}>\r\n\t\t\t<Text style={styles.text}>\r\n\t\t\t{useSelector(state => state.petDetails[0])}\r\n\t\t\t</Text>\r\n\t\t\t<TouchableOpacity onPress={onUpdate}>\r\n                    <MaterialCommunityIcons\r\n                    name = \"pencil\"\r\n                    size = {30}\r\n                    style={{color:\"#637ed0\"}}/>\r\n                    </TouchableOpacity>\r\n            </View>\r\n\t\t\t<View style={styles.imageContainer}>\r\n\r\n            <PetImage items={useSelector(state => state.petInv)}/>\r\n            <View style={styles.healthbarContainer}>\r\n                <HealthBar/>\r\n            </View>\r\n            </View>\r\n\t\t\t<DropDownPicker\r\n\t\t\t\titems={[\r\n\t\t\t\t\t{label: 'All', value: 'all'},\r\n\t\t\t\t\t{label: 'Clothes', value: 'clothes'},\r\n\t\t\t\t\t{label: 'Food', value: 'food'},\r\n\t\t\t\t\t{label: 'Toys', value: 'toys'}\r\n\t\t\t\t]}\r\n\t\t\t\tdefaultValue={'all'}\r\n\t\t\t\tcontainerStyle={styles.dropdownContainer}\r\n\t\t\t\tonChangeItem={item => changeFilter(item.value)}\r\n\t\t\t/>\r\n\t\t\t<Modal\r\n            \tanimationType=\"slide\"\r\n            \ttransparent={true}\r\n            \tvisible={(useSelector(state=>state.petMV) !== \"off\")}\r\n            >\r\n            {(useSelector(state=>state.petMV) === \"press\") ?\r\n            \t\t<View style={styles.centeredView}>\r\n            \t\t    <View style={styles.modalView}>\r\n            \t\t\t<Image style={styles.itemImage} source={ItemInventory[selectedItem].uri}/>\r\n            \t\t\t<Text style={{color: 'white', paddingTop: 10, paddingBottom: 10}}>{ItemInventory[selectedItem].inventoryText}</Text>\r\n            \t\t\t<View style={styles.modalFooter}>\r\n            \t\t\t<Pressable\r\n            \t\t\t   style={[styles.button, styles.buttonClose, {left: -30}]}\r\n            \t\t\t      onPress={() => dispatch({type: OFF_PET})}\r\n            \t\t\t>\r\n            \t\t\t\t<Text style={styles.textStyle}>Cancel</Text>\r\n            \t\t\t\t\t</Pressable>\r\n            \t\t\t\t\t    <Pressable\r\n            \t\t\t\t\t\t\tstyle={[styles.button, styles.buttonClose, {right: -30}]}\r\n            \t\t\t\t\t\t\tonPress={() => handlePurchase(selectedItem)}\r\n            \t\t\t\t\t\t\t>\r\n            \t\t\t\t\t\t\t<Text style={styles.textStyle}>Yes </Text>\r\n            \t\t\t\t\t\t</Pressable>\r\n            \t\t\t\t\t</View>\r\n            \t\t\t\t</View>\r\n            \t\t\t</View>\r\n            \t\t\t:\r\n            \t\t\t<View style={styles.centeredView}>\r\n                             <View style={styles.modalView}>\r\n                                     <Text style={styles.text}>Please enter a name for your pet</Text>\r\n                                                 <View style={styles.imageContainer}>\r\n                                                 <TextInput\r\n                                                                 style={{\r\n                                                                     width:\"85%\",\r\n                                                                     backgroundColor: \"white\",\r\n                                                                     marginBottom: 10,\r\n                                                                     padding: 15,\r\n                                                                 }}\r\n                                                                 placeholder=\"Your Pet's Name\"\r\n                                                             onChangeText={textName => onChangeText(textName)}\r\n                                                             value={textName}\r\n                                                 />\r\n                                             </View>\r\n                                    \t <View style={styles.modalFooter}>\r\n                                    \t <Pressable\r\n                                    \t     style={[styles.button, styles.buttonClose, {left: -30}]}\r\n                                    \t\t\t onPress={() => dispatch({type: OFF_PET})}\r\n                                    \t\t\t>\r\n                                    \t\t\t\t<Text style={styles.textStyle}>Cancel</Text>\r\n                                    \t\t\t\t\t</Pressable>\r\n                                    \t\t\t\t\t    <Pressable\r\n                                    \t\t\t\t\t\t\tstyle={[styles.button, styles.buttonClose, {right: -30}]}\r\n                                    \t\t\t\t\t\t\tonPress={() => editPet(textName)}\r\n                                    \t\t\t\t\t\t\t>\r\n                                    \t\t\t\t\t\t\t<Text style={styles.textStyle}>Finish </Text>\r\n                                    \t\t\t\t\t\t</Pressable>\r\n                                    \t\t\t\t\t</View>\r\n                                    \t\t\t\t</View>\r\n                                    \t\t\t</View>\r\n            \t\t\t\t\t\t}\r\n            \t\t\t\t</Modal>\r\n\t\t\t<PetInventoryCards items={useSelector(state => state.petInv)}/>\r\n        </ScrollView>\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default PetProfile;\r\n"]},"metadata":{},"sourceType":"module"}