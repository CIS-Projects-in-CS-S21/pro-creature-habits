{"ast":null,"code":"import { insertDoubleColorStopsIntoArray } from \"./helpers\";\nvar RADIAL_GRADIENT = 2;\nexport default function RadialGradient(stops, fx, fy, rx, ry, cx, cy) {\n  if (ry == null) {\n    ry = rx;\n  }\n\n  if (cx == null) {\n    cx = fx;\n  }\n\n  if (cy == null) {\n    cy = fy;\n  }\n\n  if (fx == null) {\n    fx = fy = rx = ry = cx = cy = 0.5;\n    this._bb = true;\n  } else {\n    this._bb = false;\n  }\n\n  var brushData = [RADIAL_GRADIENT, +fx, +fy, +rx * 2, +ry * 2, +cx, +cy];\n  insertDoubleColorStopsIntoArray(stops, brushData, 7);\n  this._brush = brushData;\n  return this;\n}","map":{"version":3,"sources":["C:/Users/Matt/Documents/GitHub/pro-creature-habits/node_modules/@react-native-community/art/lib/RadialGradient.js"],"names":["insertDoubleColorStopsIntoArray","RADIAL_GRADIENT","RadialGradient","stops","fx","fy","rx","ry","cx","cy","_bb","brushData","_brush"],"mappings":"AASA,SAAQA,+BAAR;AAGA,IAAMC,eAAe,GAAG,CAAxB;AAEA,eAAe,SAASC,cAAT,CACbC,KADa,EAEbC,EAFa,EAGbC,EAHa,EAIbC,EAJa,EAKbC,EALa,EAMbC,EANa,EAObC,EAPa,EAQN;AACP,MAAIF,EAAE,IAAI,IAAV,EAAgB;AACdA,IAAAA,EAAE,GAAGD,EAAL;AACD;;AACD,MAAIE,EAAE,IAAI,IAAV,EAAgB;AACdA,IAAAA,EAAE,GAAGJ,EAAL;AACD;;AACD,MAAIK,EAAE,IAAI,IAAV,EAAgB;AACdA,IAAAA,EAAE,GAAGJ,EAAL;AACD;;AACD,MAAID,EAAE,IAAI,IAAV,EAAgB;AAGdA,IAAAA,EAAE,GAAGC,EAAE,GAAGC,EAAE,GAAGC,EAAE,GAAGC,EAAE,GAAGC,EAAE,GAAG,GAA9B;AACA,SAAKC,GAAL,GAAW,IAAX;AACD,GALD,MAKO;AACL,SAAKA,GAAL,GAAW,KAAX;AACD;;AAKD,MAAMC,SAAS,GAAG,CAACV,eAAD,EAAkB,CAACG,EAAnB,EAAuB,CAACC,EAAxB,EAA4B,CAACC,EAAD,GAAM,CAAlC,EAAqC,CAACC,EAAD,GAAM,CAA3C,EAA8C,CAACC,EAA/C,EAAmD,CAACC,EAApD,CAAlB;AACAT,EAAAA,+BAA+B,CAACG,KAAD,EAAQQ,SAAR,EAAmB,CAAnB,CAA/B;AACA,OAAKC,MAAL,GAAcD,SAAd;AACA,SAAO,IAAP;AACD","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport {insertDoubleColorStopsIntoArray} from './helpers';\r\nimport type {GradientStops, Brush} from './types';\r\n\r\nconst RADIAL_GRADIENT = 2;\r\n\r\nexport default function RadialGradient(\r\n  stops: GradientStops,\r\n  fx?: number,\r\n  fy?: number,\r\n  rx?: number,\r\n  ry?: number,\r\n  cx?: number,\r\n  cy?: number,\r\n): Brush {\r\n  if (ry == null) {\r\n    ry = rx;\r\n  }\r\n  if (cx == null) {\r\n    cx = fx;\r\n  }\r\n  if (cy == null) {\r\n    cy = fy;\r\n  }\r\n  if (fx == null) {\r\n    // As a convenience we allow the whole radial gradient to cover the\r\n    // bounding box. We should consider dropping this API.\r\n    fx = fy = rx = ry = cx = cy = 0.5;\r\n    this._bb = true;\r\n  } else {\r\n    this._bb = false;\r\n  }\r\n  // The ART API expects the radial gradient to be repeated at the edges.\r\n  // To simulate this we render the gradient twice as large and add double\r\n  // color stops. Ideally this API would become more restrictive so that this\r\n  // extra work isn't needed.\r\n  const brushData = [RADIAL_GRADIENT, +fx, +fy, +rx * 2, +ry * 2, +cx, +cy];\r\n  insertDoubleColorStopsIntoArray(stops, brushData, 7);\r\n  this._brush = brushData;\r\n  return this;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}