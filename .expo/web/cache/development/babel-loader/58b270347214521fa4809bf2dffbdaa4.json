{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matt\\\\Documents\\\\GitHub\\\\pro-creature-habits\\\\node_modules\\\\@react-native-community\\\\art\\\\lib\\\\Surface.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { NativeSurfaceView } from \"./nativeComponents\";\n\nvar Surface = function (_React$Component) {\n  _inherits(Surface, _React$Component);\n\n  var _super = _createSuper(Surface);\n\n  function Surface() {\n    _classCallCheck(this, Surface);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Surface, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        isInSurface: true\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          height = _this$props.height,\n          width = _this$props.width;\n      return React.createElement(NativeSurfaceView, {\n        style: [this.props.style, {\n          height: height,\n          width: width\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      }, this.props.children);\n    }\n  }]);\n\n  return Surface;\n}(React.Component);\n\nSurface.childContextTypes = {\n  isInSurface: PropTypes.bool\n};\nSurface.defaultProps = {\n  height: 0,\n  width: 0\n};\nexport { Surface as default };","map":{"version":3,"sources":["C:/Users/Matt/Documents/GitHub/pro-creature-habits/node_modules/@react-native-community/art/lib/Surface.js"],"names":["React","PropTypes","NativeSurfaceView","Surface","isInSurface","props","height","width","style","children","Component","childContextTypes","bool","defaultProps"],"mappings":";;;;;;;;;;;AAQA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,iBAAR;;IASqBC,O;;;;;;;;;;;;;WASnB,2BAAkB;AAChB,aAAO;AAACC,QAAAA,WAAW,EAAE;AAAd,OAAP;AACD;;;WAED,kBAAS;AAAA,wBACiB,KAAKC,KADtB;AAAA,UACAC,MADA,eACAA,MADA;AAAA,UACQC,KADR,eACQA,KADR;AAGP,aACE,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE,CAAC,KAAKF,KAAL,CAAWG,KAAZ,EAAmB;AAACF,UAAAA,MAAM,EAANA,MAAD;AAASC,UAAAA,KAAK,EAALA;AAAT,SAAnB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWI,QADd,CADF;AAKD;;;;EArBkCT,KAAK,CAACU,S;;AAAtBP,O,CACZQ,iB,GAAoB;AACzBP,EAAAA,WAAW,EAAEH,SAAS,CAACW;AADE,C;AADRT,O,CAIZU,Y,GAAe;AACpBP,EAAAA,MAAM,EAAE,CADY;AAEpBC,EAAAA,KAAK,EAAE;AAFa,C;SAJHJ,O","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {NativeSurfaceView} from './nativeComponents';\r\n\r\ntype SurfaceProps = {\r\n  height: number,\r\n  width: number,\r\n  children: React.Node,\r\n  style?: any,\r\n};\r\n\r\nexport default class Surface extends React.Component<SurfaceProps> {\r\n  static childContextTypes = {\r\n    isInSurface: PropTypes.bool,\r\n  };\r\n  static defaultProps = {\r\n    height: 0,\r\n    width: 0,\r\n  };\r\n\r\n  getChildContext() {\r\n    return {isInSurface: true};\r\n  }\r\n\r\n  render() {\r\n    const {height, width} = this.props;\r\n\r\n    return (\r\n      <NativeSurfaceView style={[this.props.style, {height, width}]}>\r\n        {this.props.children}\r\n      </NativeSurfaceView>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}