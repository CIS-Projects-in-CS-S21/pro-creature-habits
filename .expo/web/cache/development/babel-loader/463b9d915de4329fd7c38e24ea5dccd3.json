{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/samirsingh/Desktop/pro-creature-habits/src/screens/ChoosePet.js\";\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CHANGE } from \"../redux/petInfo\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#406BE9'\n  },\n  text: {\n    color: 'white',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingTop: 5\n  },\n  text2: {\n    color: 'black',\n    fontSize: 20,\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  image: {\n    width: 100,\n    height: 100,\n    borderWidth: 2,\n    borderColor: \"white\",\n    borderRadius: 20,\n    padding: 8,\n    backgroundColor: \"lightblue\",\n    margin: 10\n  },\n  imageContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    marginTop: 20,\n    flexWrap: 'wrap',\n    alignContent: 'flex-end'\n  }\n});\n\nvar choosePetScreen = function choosePetScreen(_ref) {\n  var onSignUp = _ref.onSignUp;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      text = _React$useState2[0],\n      _onChangeText = _React$useState2[1];\n\n  var _React$useState3 = React.useState('lightblue'),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      colorImage1 = _React$useState4[0],\n      changeValue1 = _React$useState4[1];\n\n  var _React$useState5 = React.useState('lightblue'),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      colorImage2 = _React$useState6[0],\n      changeValue2 = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      petChoice = _React$useState8[0],\n      changePet = _React$useState8[1];\n\n  var dispatch = useDispatch();\n\n  var _onPress = function onPress(animal) {\n    if (animal === \"cat\") {\n      changeValue1(\"orange\");\n      changeValue2(\"lightblue\");\n      changePet(\"cat\");\n    } else {\n      changeValue2(\"orange\");\n      changeValue1(\"lightblue\");\n      changePet(\"dog\");\n    }\n  };\n\n  var submitData = function submitData() {\n    console.log(\"test\");\n    var array = [text, petChoice];\n    dispatch({\n      type: CHANGE,\n      changes: array\n    });\n  };\n\n  var onChangeHandler = function onChangeHandler(event) {\n    _onChangeText(event.target.value);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Please choose your starter pet\"), React.createElement(View, {\n    style: styles.imageContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableHighlight, {\n    activeOpacity: 0.6,\n    style: {\n      borderRadius: 20\n    },\n    onPress: function onPress() {\n      return _onPress(\"cat\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.imageContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  }, React.createElement(Image, {\n    id: \"cat\",\n    style: {\n      borderColor: colorImage1,\n      width: 100,\n      height: 100,\n      borderWidth: 5,\n      borderRadius: 20\n    },\n    source: require(\"../images/cat.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  }))), React.createElement(TouchableHighlight, {\n    activeOpacity: 0.6,\n    style: {\n      borderRadius: 20\n    },\n    onPress: function onPress() {\n      return _onPress(\"dog\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }, React.createElement(View, {\n    style: styles.imageContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, React.createElement(Image, {\n    id: \"dog\",\n    style: {\n      borderColor: colorImage2,\n      width: 100,\n      height: 100,\n      borderWidth: 5,\n      borderRadius: 20\n    },\n    source: require(\"../images/dog.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  })))), React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Please enter a name for your pet\"), React.createElement(TextInput, {\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: 40,\n      width: 200,\n      margin: 20,\n      borderColor: 'black',\n      backgroundColor: 'gray',\n      borderWidth: 1\n    },\n    placeholder: \"Your Pet's Name\",\n    onChangeText: function onChangeText(text) {\n      return _onChangeText(text);\n    },\n    value: text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Submit\",\n    color: \"white\",\n    onPress: function onPress() {\n      submitData();\n      onSignUp();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default choosePetScreen;","map":{"version":3,"sources":["/home/samirsingh/Desktop/pro-creature-habits/src/screens/ChoosePet.js"],"names":["React","useSelector","useDispatch","CHANGE","styles","StyleSheet","create","container","flex","backgroundColor","text","color","fontSize","textAlign","paddingTop","text2","fontWeight","image","width","height","borderWidth","borderColor","borderRadius","padding","margin","imageContainer","flexDirection","justifyContent","marginTop","flexWrap","alignContent","choosePetScreen","onSignUp","useState","onChangeText","colorImage1","changeValue1","colorImage2","changeValue2","petChoice","changePet","dispatch","onPress","animal","submitData","console","log","array","type","changes","onChangeHandler","event","target","value","require","alignItems"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Text, View, Button, StyleSheet, Image, TextInput, TouchableHighlight} from \"react-native\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {CHANGE} from \"../redux/petInfo\";\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#406BE9',\n    },\n    text: {\n        color: 'white',\n        fontSize: 20,\n        textAlign: 'center',\n        paddingTop: 5,\n    },\n    text2: {\n            color: 'black',\n            fontSize: 20,\n            textAlign: 'center',\n            fontWeight: 'bold',\n        },\n    image: {\n        width: 100,\n        height: 100,\n        borderWidth: 2,\n        \t\tborderColor: \"white\",\n        \t\tborderRadius: 20,\n        \t\tpadding: 8,\n        \t\tbackgroundColor: \"lightblue\",\n        \t\tmargin: 10\n    },\n    imageContainer: {\n            flexDirection: 'row',\n    \t\tjustifyContent: 'space-evenly',\n    \t\tmarginTop: 20,\n    \t\tflexWrap: 'wrap',\n    \t\talignContent: 'flex-end'\n    },\n    }\n);\n\n\n\n\n\nconst choosePetScreen = ({onSignUp}) => {\n    const [text, onChangeText] = React.useState('');\n    const [colorImage1, changeValue1] = React.useState('lightblue');\n    const [colorImage2, changeValue2] = React.useState('lightblue');\n    const [petChoice,changePet] = React.useState('');\n    const dispatch = useDispatch();\n\n    const onPress = (animal) => {\n\n        if (animal === \"cat\") {\n        changeValue1(\"orange\");\n        changeValue2(\"lightblue\");\n        changePet(\"cat\");\n\n\n        } else {\n        changeValue2(\"orange\");\n            changeValue1(\"lightblue\");\n            changePet(\"dog\");\n        }\n    }\n\n\n    const submitData = () => {\n         console.log(\"test\");\n         const array = [text,petChoice];\n    \tdispatch({type: CHANGE, changes: array});\n    }\n\n    const onChangeHandler = event => {\n            onChangeText(event.target.value);\n\n     };\n\n\n    return (\n\n        <View style={styles.container}>\n            <Text style={styles.text}>Please choose your starter pet</Text>\n            <View style={styles.imageContainer}>\n                <TouchableHighlight activeOpacity={0.6} style={{borderRadius: 20}} onPress={() => onPress(\"cat\")}>\n                                <View style={styles.imageContainer}>\n                                <Image id=\"cat\"\n                                 style={{borderColor: colorImage1,width: 100,height: 100,borderWidth: 5,borderRadius: 20}}\n                                 source={require('../images/cat.png')}\n                                />\n                                </View>\n                                </TouchableHighlight>\n                                <TouchableHighlight activeOpacity={0.6} style={{borderRadius: 20}} onPress={() => onPress(\"dog\")}>\n                                <View style={styles.imageContainer}>\n                                <Image id=\"dog\"\n                                    style={{borderColor: colorImage2,width: 100,height: 100,borderWidth: 5,borderRadius: 20}}\n                                    source={require('../images/dog.png')}\n                                />\n                                </View>\n                                </TouchableHighlight>\n                                </View>\n\n            <Text style={styles.text}>Please enter a name for your pet</Text>\n\n            <TextInput\n                            style={{\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                height: 40,\n                                width: 200,\n                                margin: 20,\n                                borderColor: 'black',\n                                backgroundColor: 'gray',\n                                borderWidth: 1\n                            }}\n                            placeholder=\"Your Pet's Name\"\n                        onChangeText={text => onChangeText(text)}\n                        value={text}\n            />\n\n        <Button title=\"Submit\" color=\"white\" onPress={() => {submitData(); onSignUp();}}/>\n\n        </View>\n    );\n};\n\nexport default choosePetScreen;\n\n"]},"metadata":{},"sourceType":"module"}