{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Matt\\\\Documents\\\\GitHub\\\\pro-creature-habits\\\\node_modules\\\\react-native-animated-numbers\\\\index.js\";\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated, { Easing } from 'react-native-reanimated';\nvar NUMBERS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nvar usePrevious = function usePrevious(value) {\n  var ref = React.useRef();\n  React.useEffect(function () {\n    ref.current = value;\n  });\n\n  if (typeof ref.current === 'undefined') {\n    return 0;\n  }\n\n  return ref.current;\n};\n\nvar AnimatedNumber = function AnimatedNumber(_ref) {\n  var animateToNumber = _ref.animateToNumber,\n      fontStyle = _ref.fontStyle,\n      animationDuration = _ref.animationDuration,\n      includeComma = _ref.includeComma,\n      easing = _ref.easing;\n  var prevNumber = usePrevious(animateToNumber);\n  var animateToNumberString = String(Math.abs(animateToNumber));\n  var prevNumberString = String(Math.abs(prevNumber));\n  var animateToNumbersArr = Array.from(animateToNumberString, Number);\n  var prevNumberersArr = Array.from(prevNumberString, Number);\n\n  if (includeComma) {\n    var reducedArray = new Array(Math.ceil(animateToNumberString.length / 3)).fill(0);\n    var startReducedArray = new Array(Math.ceil(prevNumberString.length / 3)).fill(0);\n    reducedArray.map(function (__, index) {\n      if (index === 0) {\n        return;\n      }\n\n      animateToNumbersArr.splice(animateToNumberString.length - index * 3, 0, ',');\n    });\n    startReducedArray.map(function (__, index) {\n      if (index === 0) {\n        return;\n      }\n\n      prevNumberersArr.splice(prevNumberString.length - index * 3, 0, ',');\n    });\n  }\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      numberHeight = _React$useState2[0],\n      setNumberHeight = _React$useState2[1];\n\n  var animations = animateToNumbersArr.map(function (__, index) {\n    if (typeof prevNumberersArr[index] !== 'number') {\n      return new Animated.Value(0);\n    }\n\n    var animationHeight = -1 * (numberHeight * prevNumberersArr[index]);\n    return new Animated.Value(animationHeight);\n  });\n\n  var setButtonLayout = function setButtonLayout(e) {\n    setNumberHeight(e.nativeEvent.layout.height);\n  };\n\n  React.useEffect(function () {\n    animations.map(function (animation, index) {\n      if (typeof animateToNumbersArr[index] !== 'number') {\n        return;\n      }\n\n      Animated.timing(animation, {\n        toValue: -1 * (numberHeight * animateToNumbersArr[index]),\n        duration: animationDuration || 1400,\n        useNativeDriver: true,\n        easing: easing || Easing.elastic(1.2)\n      }).start();\n    });\n  }, [animateToNumber, numberHeight]);\n\n  var getTranslateY = function getTranslateY(index) {\n    return animations[index];\n  };\n\n  return React.createElement(React.Fragment, null, numberHeight !== 0 && React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, animateToNumber < 0 && React.createElement(Text, {\n    style: [fontStyle, {\n      height: numberHeight\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, '-'), animateToNumbersArr.map(function (n, index) {\n    if (typeof n === 'string') {\n      return React.createElement(Text, {\n        key: index,\n        style: [fontStyle, {\n          height: numberHeight\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }, n);\n    }\n\n    return React.createElement(View, {\n      key: index,\n      style: {\n        height: numberHeight,\n        overflow: 'hidden'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 8\n      }\n    }, React.createElement(Animated.View, {\n      style: [{\n        transform: [{\n          translateY: getTranslateY(index)\n        }]\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, NUMBERS.map(function (number, i) {\n      return React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: [fontStyle, {\n          height: numberHeight\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 12\n        }\n      }, number));\n    })));\n  })), React.createElement(Text, {\n    style: [fontStyle, {\n      position: 'absolute',\n      top: -999999\n    }],\n    onLayout: setButtonLayout,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 4\n    }\n  }, 0));\n};\n\nexport default AnimatedNumber;","map":{"version":3,"sources":["C:/Users/Matt/Documents/GitHub/pro-creature-habits/node_modules/react-native-animated-numbers/index.js"],"names":["React","Animated","Easing","NUMBERS","usePrevious","value","ref","useRef","useEffect","current","AnimatedNumber","animateToNumber","fontStyle","animationDuration","includeComma","easing","prevNumber","animateToNumberString","String","Math","abs","prevNumberString","animateToNumbersArr","Array","from","Number","prevNumberersArr","reducedArray","ceil","length","fill","startReducedArray","map","__","index","splice","useState","numberHeight","setNumberHeight","animations","Value","animationHeight","setButtonLayout","e","nativeEvent","layout","height","animation","timing","toValue","duration","useNativeDriver","elastic","start","getTranslateY","flexDirection","n","overflow","transform","translateY","number","i","position","top"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Text, View } from 'react-native';\r\nimport Animated, { Easing } from 'react-native-reanimated';\r\n\r\nconst NUMBERS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\nconst usePrevious = (value) => {\r\n\tconst ref = React.useRef();\r\n\tReact.useEffect(() => {\r\n\t\tref.current = value;\r\n\t});\r\n\r\n\tif (typeof ref.current === 'undefined') {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\treturn ref.current;\r\n};\r\n\r\nconst AnimatedNumber = ({\r\n\tanimateToNumber,\r\n\tfontStyle,\r\n\tanimationDuration,\r\n\tincludeComma,\r\n\teasing,\r\n}) => {\r\n\tconst prevNumber = usePrevious(animateToNumber);\r\n\tconst animateToNumberString = String(Math.abs(animateToNumber));\r\n\tconst prevNumberString = String(Math.abs(prevNumber));\r\n\r\n\tconst animateToNumbersArr = Array.from(animateToNumberString, Number);\r\n\tconst prevNumberersArr = Array.from(prevNumberString, Number);\r\n\r\n\tif (includeComma) {\r\n\t\tconst reducedArray = new Array(\r\n\t\t\tMath.ceil(animateToNumberString.length / 3)\r\n\t\t).fill(0);\r\n\r\n\t\tconst startReducedArray = new Array(\r\n\t\t\tMath.ceil(prevNumberString.length / 3)\r\n\t\t).fill(0);\r\n\r\n\t\treducedArray.map((__, index) => {\r\n\t\t\tif (index === 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tanimateToNumbersArr.splice(\r\n\t\t\t\tanimateToNumberString.length - index * 3,\r\n\t\t\t\t0,\r\n\t\t\t\t','\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tstartReducedArray.map((__, index) => {\r\n\t\t\tif (index === 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tprevNumberersArr.splice(prevNumberString.length - index * 3, 0, ',');\r\n\t\t});\r\n\t}\r\n\r\n\tconst [numberHeight, setNumberHeight] = React.useState(0);\r\n\tconst animations = animateToNumbersArr.map((__, index) => {\r\n\t\tif (typeof prevNumberersArr[index] !== 'number') {\r\n\t\t\treturn new Animated.Value(0);\r\n\t\t}\r\n\r\n\t\tconst animationHeight = -1 * (numberHeight * prevNumberersArr[index]);\r\n\t\treturn new Animated.Value(animationHeight);\r\n\t});\r\n\r\n\tconst setButtonLayout = (e) => {\r\n\t\tsetNumberHeight(e.nativeEvent.layout.height);\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t\tanimations.map((animation, index) => {\r\n\t\t\tif (typeof animateToNumbersArr[index] !== 'number') {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tAnimated.timing(animation, {\r\n\t\t\t\ttoValue: -1 * (numberHeight * animateToNumbersArr[index]),\r\n\t\t\t\tduration: animationDuration || 1400,\r\n\t\t\t\tuseNativeDriver: true,\r\n\t\t\t\teasing: easing || Easing.elastic(1.2),\r\n\t\t\t}).start();\r\n\t\t});\r\n\t}, [animateToNumber, numberHeight]);\r\n\r\n\tconst getTranslateY = (index) => {\r\n\t\treturn animations[index];\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{numberHeight !== 0 && (\r\n\t\t\t\t<View style={{ flexDirection: 'row' }}>\r\n\t\t\t\t\t{animateToNumber < 0 && (\r\n\t\t\t\t\t\t<Text style={[fontStyle, { height: numberHeight }]}>{'-'}</Text>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{animateToNumbersArr.map((n, index) => {\r\n\t\t\t\t\t\tif (typeof n === 'string') {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Text key={index} style={[fontStyle, { height: numberHeight }]}>\r\n\t\t\t\t\t\t\t\t\t{n}\r\n\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<View\r\n\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\tstyle={{ height: numberHeight, overflow: 'hidden' }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Animated.View\r\n\t\t\t\t\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\ttransform: [\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttranslateY: getTranslateY(index),\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{NUMBERS.map((number, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<View style={{ flexDirection: 'row' }} key={i}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Text style={[fontStyle, { height: numberHeight }]}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{number}\r\n\t\t\t\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Animated.View>\r\n\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</View>\r\n\t\t\t)}\r\n\t\t\t<Text\r\n\t\t\t\tstyle={[fontStyle, { position: 'absolute', top: -999999 }]}\r\n\t\t\t\tonLayout={setButtonLayout}\r\n\t\t\t>\r\n\t\t\t\t{0}\r\n\t\t\t</Text>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default AnimatedNumber;\r\n"]},"metadata":{},"sourceType":"module"}