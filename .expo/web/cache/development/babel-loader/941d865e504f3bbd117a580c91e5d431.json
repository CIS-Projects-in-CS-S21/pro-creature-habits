{"ast":null,"code":"import Class from 'art/core/class';\nimport Path from 'art/core/path';\nvar MOVE_TO = 0;\nvar CLOSE = 1;\nvar LINE_TO = 2;\nvar CURVE_TO = 3;\nvar ARC = 4;\nvar SerializablePath = Class(Path, {\n  initialize: function initialize(path) {\n    this.reset();\n\n    if (path instanceof SerializablePath) {\n      this.path = path.path.slice(0);\n    } else if (path) {\n      this.push(path);\n    }\n  },\n  onReset: function onReset() {\n    this.path = [];\n  },\n  onMove: function onMove(sx, sy, x, y) {\n    this.path.push(MOVE_TO, x, y);\n  },\n  onLine: function onLine(sx, sy, x, y) {\n    this.path.push(LINE_TO, x, y);\n  },\n  onBezierCurve: function onBezierCurve(sx, sy, p1x, p1y, p2x, p2y, x, y) {\n    this.path.push(CURVE_TO, p1x, p1y, p2x, p2y, x, y);\n  },\n  _arcToBezier: Path.prototype.onArc,\n  onArc: function onArc(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation) {\n    if (rx !== ry || rotation) {\n      return this._arcToBezier(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation);\n    }\n\n    this.path.push(ARC, cx, cy, rx, sa, ea, ccw ? 0 : 1);\n  },\n  onClose: function onClose() {\n    this.path.push(CLOSE);\n  },\n  toJSON: function toJSON() {\n    return this.path;\n  }\n});\nexport default SerializablePath;","map":{"version":3,"sources":["C:/Users/Matt/Documents/GitHub/pro-creature-habits/node_modules/@react-native-community/art/lib/ARTSerializablePath.js"],"names":["Class","Path","MOVE_TO","CLOSE","LINE_TO","CURVE_TO","ARC","SerializablePath","initialize","path","reset","slice","push","onReset","onMove","sx","sy","x","y","onLine","onBezierCurve","p1x","p1y","p2x","p2y","_arcToBezier","prototype","onArc","ex","ey","cx","cy","rx","ry","sa","ea","ccw","rotation","onClose","toJSON"],"mappings":"AASA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AAEA,IAAMC,OAAO,GAAG,CAAhB;AACA,IAAMC,KAAK,GAAG,CAAd;AACA,IAAMC,OAAO,GAAG,CAAhB;AACA,IAAMC,QAAQ,GAAG,CAAjB;AACA,IAAMC,GAAG,GAAG,CAAZ;AAGA,IAAMC,gBAAgB,GAAGP,KAAK,CAACC,IAAD,EAAO;AACnCO,EAAAA,UAAU,EAAE,oBAASC,IAAT,EAA0C;AACpD,SAAKC,KAAL;;AACA,QAAID,IAAI,YAAYF,gBAApB,EAAsC;AACpC,WAAKE,IAAL,GAAYA,IAAI,CAACA,IAAL,CAAUE,KAAV,CAAgB,CAAhB,CAAZ;AACD,KAFD,MAEO,IAAIF,IAAJ,EAAU;AACf,WAAKG,IAAL,CAAUH,IAAV;AACD;AACF,GARkC;AAUnCI,EAAAA,OAAO,EAAE,mBAAW;AAClB,SAAKJ,IAAL,GAAY,EAAZ;AACD,GAZkC;AAcnCK,EAAAA,MAAM,EAAE,gBAASC,EAAT,EAAqBC,EAArB,EAAiCC,CAAjC,EAA4CC,CAA5C,EAAuD;AAC7D,SAAKT,IAAL,CAAUG,IAAV,CAAeV,OAAf,EAAwBe,CAAxB,EAA2BC,CAA3B;AACD,GAhBkC;AAkBnCC,EAAAA,MAAM,EAAE,gBAASJ,EAAT,EAAqBC,EAArB,EAAiCC,CAAjC,EAA4CC,CAA5C,EAAuD;AAC7D,SAAKT,IAAL,CAAUG,IAAV,CAAeR,OAAf,EAAwBa,CAAxB,EAA2BC,CAA3B;AACD,GApBkC;AAsBnCE,EAAAA,aAAa,EAAE,uBACbL,EADa,EAEbC,EAFa,EAGbK,GAHa,EAIbC,GAJa,EAKbC,GALa,EAMbC,GANa,EAObP,CAPa,EAQbC,CARa,EASb;AACA,SAAKT,IAAL,CAAUG,IAAV,CAAeP,QAAf,EAAyBgB,GAAzB,EAA8BC,GAA9B,EAAmCC,GAAnC,EAAwCC,GAAxC,EAA6CP,CAA7C,EAAgDC,CAAhD;AACD,GAjCkC;AAmCnCO,EAAAA,YAAY,EAAExB,IAAI,CAACyB,SAAL,CAAeC,KAnCM;AAqCnCA,EAAAA,KAAK,EAAE,eACLZ,EADK,EAELC,EAFK,EAGLY,EAHK,EAILC,EAJK,EAKLC,EALK,EAMLC,EANK,EAOLC,EAPK,EAQLC,EARK,EASLC,EATK,EAULC,EAVK,EAWLC,GAXK,EAYLC,QAZK,EAaL;AACA,QAAIL,EAAE,KAAKC,EAAP,IAAaI,QAAjB,EAA2B;AACzB,aAAO,KAAKZ,YAAL,CACLV,EADK,EAELC,EAFK,EAGLY,EAHK,EAILC,EAJK,EAKLC,EALK,EAMLC,EANK,EAOLC,EAPK,EAQLC,EARK,EASLC,EATK,EAULC,EAVK,EAWLC,GAXK,EAYLC,QAZK,CAAP;AAcD;;AACD,SAAK5B,IAAL,CAAUG,IAAV,CAAeN,GAAf,EAAoBwB,EAApB,EAAwBC,EAAxB,EAA4BC,EAA5B,EAAgCE,EAAhC,EAAoCC,EAApC,EAAwCC,GAAG,GAAG,CAAH,GAAO,CAAlD;AACD,GApEkC;AAsEnCE,EAAAA,OAAO,EAAE,mBAAW;AAClB,SAAK7B,IAAL,CAAUG,IAAV,CAAeT,KAAf;AACD,GAxEkC;AA0EnCoC,EAAAA,MAAM,EAAE,kBAAW;AACjB,WAAO,KAAK9B,IAAZ;AACD;AA5EkC,CAAP,CAA9B;AA+EA,eAAeF,gBAAf","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport Class from 'art/core/class';\r\nimport Path from 'art/core/path';\r\n\r\nconst MOVE_TO = 0;\r\nconst CLOSE = 1;\r\nconst LINE_TO = 2;\r\nconst CURVE_TO = 3;\r\nconst ARC = 4;\r\n\r\n// TODO: Refactor to class\r\nconst SerializablePath = Class(Path, {\r\n  initialize: function(path: string | SerializablePath) {\r\n    this.reset();\r\n    if (path instanceof SerializablePath) {\r\n      this.path = path.path.slice(0);\r\n    } else if (path) {\r\n      this.push(path);\r\n    }\r\n  },\r\n\r\n  onReset: function() {\r\n    this.path = [];\r\n  },\r\n\r\n  onMove: function(sx: number, sy: number, x: number, y: number) {\r\n    this.path.push(MOVE_TO, x, y);\r\n  },\r\n\r\n  onLine: function(sx: number, sy: number, x: number, y: number) {\r\n    this.path.push(LINE_TO, x, y);\r\n  },\r\n\r\n  onBezierCurve: function(\r\n    sx: number,\r\n    sy: number,\r\n    p1x: number,\r\n    p1y: number,\r\n    p2x: number,\r\n    p2y: number,\r\n    x: number,\r\n    y: number,\r\n  ) {\r\n    this.path.push(CURVE_TO, p1x, p1y, p2x, p2y, x, y);\r\n  },\r\n\r\n  _arcToBezier: Path.prototype.onArc,\r\n\r\n  onArc: function(\r\n    sx: number,\r\n    sy: number,\r\n    ex: number,\r\n    ey: number,\r\n    cx: number,\r\n    cy: number,\r\n    rx: number,\r\n    ry: number,\r\n    sa: number,\r\n    ea: number,\r\n    ccw: boolean,\r\n    rotation: number,\r\n  ) {\r\n    if (rx !== ry || rotation) {\r\n      return this._arcToBezier(\r\n        sx,\r\n        sy,\r\n        ex,\r\n        ey,\r\n        cx,\r\n        cy,\r\n        rx,\r\n        ry,\r\n        sa,\r\n        ea,\r\n        ccw,\r\n        rotation,\r\n      );\r\n    }\r\n    this.path.push(ARC, cx, cy, rx, sa, ea, ccw ? 0 : 1);\r\n  },\r\n\r\n  onClose: function() {\r\n    this.path.push(CLOSE);\r\n  },\r\n\r\n  toJSON: function() {\r\n    return this.path;\r\n  },\r\n});\r\n\r\nexport default SerializablePath;\r\n"]},"metadata":{},"sourceType":"module"}