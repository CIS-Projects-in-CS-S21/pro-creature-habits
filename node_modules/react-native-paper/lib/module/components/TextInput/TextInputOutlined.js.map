{"version":3,"sources":["TextInputOutlined.tsx"],"names":["React","View","TextInput","NativeTextInput","StyleSheet","I18nManager","Platform","color","InputLabel","LabelBackground","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","LABEL_WIGGLE_X_OFFSET","calculateLabelTopPosition","calculateInputHeight","calculatePadding","adjustPaddingOut","interpolatePlaceholder","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","MIN_HEIGHT","MIN_DENSE_HEIGHT","INPUT_PADDING_HORIZONTAL","TextInputOutlined","Component","render","props","disabled","editable","label","error","selectionColor","underlineColor","dense","style","theme","multiline","parentState","innerRef","onFocus","onBlur","onChangeText","onLayoutAnimatedText","rest","colors","fonts","font","regular","hasActiveOutline","focused","flatten","fontSize","fontSizeStyle","fontWeight","height","backgroundColor","background","viewStyle","inputTextColor","activeColor","outlineColor","placeholderColor","errorColor","text","alpha","rgb","string","primary","placeholder","labelScale","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","isRTL","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","OS","styles","inputOutlinedDense","inputOutlined","pad","paddingOut","baseLabelTranslateY","placeholderOpacity","labeled","labelProps","placeholderStyle","wiggleOffsetX","minHeight","paddingTop","paddingBottom","ref","placeholderTextColor","underlineColorAndroid","input","textAlignVertical","Outline","outline","borderRadius","roundness","borderWidth","borderColor","create","position","left","paddingHorizontal","right","top","bottom","flexGrow","margin","textAlign","zIndex"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n} from 'react-native';\nimport color from 'color';\n\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport { RenderProps, ChildTextInputProps } from './types';\nimport { Theme } from '../../types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  interpolatePlaceholder,\n} from './helpers';\n\nconst OUTLINE_MINIMIZED_LABEL_Y_OFFSET = -6;\nconst LABEL_PADDING_TOP = 8;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT = 48;\nconst INPUT_PADDING_HORIZONTAL = 14;\n\nclass TextInputOutlined extends React.Component<ChildTextInputProps, {}> {\n  static defaultProps = {\n    disabled: false,\n    error: false,\n    multiline: false,\n    editable: true,\n    render: (props: RenderProps) => <NativeTextInput {...props} />,\n  };\n\n  render() {\n    const {\n      disabled,\n      editable,\n      label,\n      error,\n      selectionColor,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      underlineColor,\n      dense,\n      style,\n      theme,\n      render,\n      multiline,\n      parentState,\n      innerRef,\n      onFocus,\n      onBlur,\n      onChangeText,\n      onLayoutAnimatedText,\n      ...rest\n    } = this.props;\n\n    const { colors, fonts } = theme;\n    const font = fonts.regular;\n    const hasActiveOutline = parentState.focused || error;\n\n    const {\n      fontSize: fontSizeStyle,\n      fontWeight,\n      height,\n      backgroundColor = colors.background,\n      ...viewStyle\n    } = (StyleSheet.flatten(style) || {}) as TextStyle;\n    const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n    let inputTextColor, activeColor, outlineColor, placeholderColor, errorColor;\n\n    if (disabled) {\n      inputTextColor = activeColor = color(colors.text)\n        .alpha(0.54)\n        .rgb()\n        .string();\n      placeholderColor = outlineColor = colors.disabled;\n    } else {\n      inputTextColor = colors.text;\n      activeColor = error ? colors.error : colors.primary;\n      placeholderColor = outlineColor = colors.placeholder;\n      errorColor = colors.error;\n    }\n\n    const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n    const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n    const labelWidth = parentState.labelLayout.width;\n    const labelHeight = parentState.labelLayout.height;\n    const labelHalfWidth = labelWidth / 2;\n    const labelHalfHeight = labelHeight / 2;\n\n    const baseLabelTranslateX =\n      (I18nManager.isRTL ? 1 : -1) *\n      (labelHalfWidth -\n        (labelScale * labelWidth) / 2 -\n        (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n    const minInputHeight =\n      (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT) - LABEL_PADDING_TOP;\n\n    const inputHeight = calculateInputHeight(\n      labelHeight,\n      height,\n      minInputHeight\n    );\n\n    const topPosition = calculateLabelTopPosition(\n      labelHeight,\n      inputHeight,\n      LABEL_PADDING_TOP\n    );\n\n    if (height && typeof height !== 'number')\n      // eslint-disable-next-line\n      console.warn('Currently we support only numbers in height prop');\n\n    const paddingSettings = {\n      height: height ? +height : null,\n      labelHalfHeight,\n      offset: LABEL_PADDING_TOP,\n      multiline: multiline ? multiline : null,\n      dense: dense ? dense : null,\n      topPosition,\n      fontSize,\n      label,\n      scale: fontScale,\n      isAndroid: Platform.OS === 'android',\n      styles: StyleSheet.flatten(\n        dense ? styles.inputOutlinedDense : styles.inputOutlined\n      ) as Padding,\n    };\n\n    const pad = calculatePadding(paddingSettings);\n\n    const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n\n    const baseLabelTranslateY =\n      -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n\n    const placeholderOpacity = interpolatePlaceholder(\n      parentState.labeled,\n      hasActiveOutline\n    );\n\n    const labelProps = {\n      label,\n      onLayoutAnimatedText,\n      placeholderOpacity,\n      error,\n      placeholderStyle: styles.placeholder,\n      baseLabelTranslateY,\n      baseLabelTranslateX,\n      font,\n      fontSize,\n      fontWeight,\n      labelScale,\n      wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n      topPosition,\n      hasActiveOutline,\n      activeColor,\n      placeholderColor,\n      backgroundColor,\n      errorColor,\n    };\n\n    const minHeight = height || (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT);\n\n    return (\n      <View style={viewStyle}>\n        {/*\n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android\n          */}\n        <View>\n          <Outline\n            theme={theme}\n            hasActiveOutline={hasActiveOutline}\n            activeColor={activeColor}\n            outlineColor={outlineColor}\n            backgroundColor={backgroundColor}\n          />\n          <View\n            style={{\n              paddingTop: LABEL_PADDING_TOP,\n              paddingBottom: 0,\n              minHeight,\n            }}\n          >\n            <InputLabel\n              parentState={parentState}\n              labelProps={labelProps}\n              labelBackground={LabelBackground}\n            />\n\n            {render?.({\n              ...rest,\n              ref: innerRef,\n              onChangeText,\n              placeholder: label\n                ? parentState.placeholder\n                : this.props.placeholder,\n              placeholderTextColor: placeholderColor,\n              editable: !disabled && editable,\n              selectionColor:\n                typeof selectionColor === 'undefined'\n                  ? activeColor\n                  : selectionColor,\n              onFocus,\n              onBlur,\n              underlineColorAndroid: 'transparent',\n              multiline,\n              style: [\n                styles.input,\n                !multiline || (multiline && height)\n                  ? { height: inputHeight }\n                  : {},\n                paddingOut,\n                {\n                  ...font,\n                  fontSize,\n                  fontWeight,\n                  color: inputTextColor,\n                  textAlignVertical: multiline ? 'top' : 'center',\n                },\n              ],\n            } as RenderProps)}\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default TextInputOutlined;\n\ntype OutlineType = {\n  activeColor: string;\n  hasActiveOutline: boolean | undefined;\n  outlineColor: string | undefined;\n  backgroundColor: string | undefined;\n  theme: Theme;\n};\n\nconst Outline = ({\n  theme,\n  hasActiveOutline,\n  activeColor,\n  outlineColor,\n  backgroundColor,\n}: OutlineType) => (\n  <View\n    pointerEvents=\"none\"\n    style={[\n      styles.outline,\n      // eslint-disable-next-line react-native/no-inline-styles\n      {\n        backgroundColor,\n        borderRadius: theme.roundness,\n        borderWidth: hasActiveOutline ? 2 : 1,\n        borderColor: hasActiveOutline ? activeColor : outlineColor,\n      },\n    ]}\n  />\n);\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  },\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n    margin: 0,\n    textAlign: I18nManager.isRTL ? 'right' : 'left',\n    zIndex: 1,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n"]}