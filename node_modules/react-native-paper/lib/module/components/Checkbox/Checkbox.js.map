{"version":3,"sources":["Checkbox.tsx"],"names":["React","Platform","CheckboxIOS","CheckboxAndroid","CheckboxItem","withTheme","Checkbox","Component","render","OS","props"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,cAAzB,C,CACA;;AACA,OAAOC,WAAP,MAAyD,eAAzD;AACA,OAAOC,eAAP,MAGO,mBAHP;AAIA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AA8BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAA8C;AAC5C;AAGA;AAGA;AAGAC,EAAAA,MAAM,GAAG;AACP,WAAOP,QAAQ,CAACQ,EAAT,KAAgB,KAAhB,gBACL,oBAAC,WAAD,EAAiB,KAAKC,KAAtB,CADK,gBAGL,oBAAC,eAAD,EAAqB,KAAKA,KAA1B,CAHF;AAKD;;AAhB2C;;gBAAxCJ,Q,UAEUF,Y;;gBAFVE,Q,aAKaH,e;;gBALbG,Q,SAQSJ,W;;AAWf,eAAeG,SAAS,CAACC,QAAD,CAAxB","sourcesContent":["import * as React from 'react';\nimport { Platform } from 'react-native';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CheckboxIOS, { CheckboxIOS as _CheckboxIOS } from './CheckboxIOS';\nimport CheckboxAndroid, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  CheckboxAndroid as _CheckboxAndroid,\n} from './CheckboxAndroid';\nimport CheckboxItem from './CheckboxItem';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Checkbox } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [checked, setChecked] = React.useState(false);\n *\n *   return (\n *     <Checkbox\n *       status={checked ? 'checked' : 'unchecked'}\n *       onPress={() => {\n *         setChecked(!checked);\n *       }}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nclass Checkbox extends React.Component<Props> {\n  // @component ./CheckboxItem.tsx\n  static Item = CheckboxItem;\n\n  // @component ./CheckboxAndroid.tsx\n  static Android = CheckboxAndroid;\n\n  // @component ./CheckboxIOS.tsx\n  static IOS = CheckboxIOS;\n\n  render() {\n    return Platform.OS === 'ios' ? (\n      <CheckboxIOS {...this.props} />\n    ) : (\n      <CheckboxAndroid {...this.props} />\n    );\n  }\n}\n\nexport default withTheme(Checkbox);\n"]}