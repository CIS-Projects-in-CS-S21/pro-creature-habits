{"version":3,"sources":["CheckboxIOS.tsx"],"names":["React","StyleSheet","View","color","MaterialCommunityIcon","TouchableRipple","withTheme","CheckboxIOS","Component","render","props","status","disabled","onPress","theme","rest","checked","indeterminate","checkedColor","colors","accent","rippleColor","text","alpha","rgb","string","fade","icon","styles","container","opacity","create","borderRadius","padding"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,cAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,qBAAP,MAAkC,0BAAlC;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AA0BA;;;;;;;;;;;;;;;AAeA,MAAMC,WAAN,SAA0BP,KAAK,CAACQ,SAAhC,CAAiD;AAG/CC,EAAAA,MAAM,GAAG;AACP,wBAAsD,KAAKC,KAA3D;AAAA,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,QAAV;AAAoBC,MAAAA,OAApB;AAA6BC,MAAAA;AAA7B,KAAN;AAAA,UAA6CC,IAA7C;;AACA,UAAMC,OAAO,GAAGL,MAAM,KAAK,SAA3B;AACA,UAAMM,aAAa,GAAGN,MAAM,KAAK,eAAjC;AAEA,UAAMO,YAAY,GAAGN,QAAQ,GACzBE,KAAK,CAACK,MAAN,CAAaP,QADY,GAEzB,KAAKF,KAAL,CAAWP,KAAX,IAAoBW,KAAK,CAACK,MAAN,CAAaC,MAFrC;AAIA,QAAIC,WAAJ;;AAEA,QAAIT,QAAJ,EAAc;AACZS,MAAAA,WAAW,GAAGlB,KAAK,CAACW,KAAK,CAACK,MAAN,CAAaG,IAAd,CAAL,CACXC,KADW,CACL,IADK,EAEXC,GAFW,GAGXC,MAHW,EAAd;AAID,KALD,MAKO;AACLJ,MAAAA,WAAW,GAAGlB,KAAK,CAACe,YAAD,CAAL,CACXQ,IADW,CACN,IADM,EAEXF,GAFW,GAGXC,MAHW,EAAd;AAID;;AAED,UAAME,IAAI,GAAGV,aAAa,GAAG,OAAH,GAAa,OAAvC;AAEA,wBACE,oBAAC,eAAD,eACMF,IADN;AAEE,MAAA,UAAU,MAFZ;AAGE,MAAA,WAAW,EAAEM,WAHf;AAIE,MAAA,OAAO,EAAER,OAJX;AAKE,MAAA,QAAQ,EAAED,QALZ;AAME,MAAA,mBAAmB,EAAEA,QAAQ,GAAG,CAAC,QAAD,EAAW,UAAX,CAAH,GAA4B,QAN3D;AAOE,MAAA,0BAA0B,EAAC,QAP7B;AAQE,MAAA,iBAAiB,EAAC,QARpB;AASE,MAAA,mBAAmB,EAAEA,QAAQ,GAAG,CAAC,UAAD,CAAH,GAAkB,EATjD;AAUE,MAAA,uBAAuB,EAAC,QAV1B;AAWE,MAAA,KAAK,EAAEgB,MAAM,CAACC;AAXhB,qBAaE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAEb,aAAa,IAAID,OAAjB,GAA2B,CAA3B,GAA+B;AAA1C;AAAb,oBACE,oBAAC,qBAAD;AACE,MAAA,gBAAgB,EAAE,KADpB;AAEE,MAAA,IAAI,EAAEW,IAFR;AAGE,MAAA,IAAI,EAAE,EAHR;AAIE,MAAA,KAAK,EAAET,YAJT;AAKE,MAAA,SAAS,EAAC;AALZ,MADF,CAbF,CADF;AAyBD;;AArD8C;;gBAA3CX,W,iBACiB,c;;AAuDvB,MAAMqB,MAAM,GAAG3B,UAAU,CAAC8B,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,YAAY,EAAE,EADL;AAETC,IAAAA,OAAO,EAAE;AAFA;AADoB,CAAlB,CAAf;AAOA,eAAe3B,SAAS,CAACC,WAAD,CAAxB,C,CAEA;;AACA,SAASA,WAAT","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport color from 'color';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple';\nimport { withTheme } from '../../core/theming';\nimport { Theme, $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n * This component follows platform guidelines for iOS.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.ios.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.ios.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\nclass CheckboxIOS extends React.Component<Props> {\n  static displayName = 'Checkbox.IOS';\n\n  render() {\n    const { status, disabled, onPress, theme, ...rest } = this.props;\n    const checked = status === 'checked';\n    const indeterminate = status === 'indeterminate';\n\n    const checkedColor = disabled\n      ? theme.colors.disabled\n      : this.props.color || theme.colors.accent;\n\n    let rippleColor;\n\n    if (disabled) {\n      rippleColor = color(theme.colors.text)\n        .alpha(0.16)\n        .rgb()\n        .string();\n    } else {\n      rippleColor = color(checkedColor)\n        .fade(0.32)\n        .rgb()\n        .string();\n    }\n\n    const icon = indeterminate ? 'minus' : 'check';\n\n    return (\n      <TouchableRipple\n        {...rest}\n        borderless\n        rippleColor={rippleColor}\n        onPress={onPress}\n        disabled={disabled}\n        accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n        accessibilityComponentType=\"button\"\n        accessibilityRole=\"button\"\n        accessibilityStates={disabled ? ['disabled'] : []}\n        accessibilityLiveRegion=\"polite\"\n        style={styles.container}\n      >\n        <View style={{ opacity: indeterminate || checked ? 1 : 0 }}>\n          <MaterialCommunityIcon\n            allowFontScaling={false}\n            name={icon}\n            size={24}\n            color={checkedColor}\n            direction=\"ltr\"\n          />\n        </View>\n      </TouchableRipple>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    padding: 6,\n  },\n});\n\nexport default withTheme(CheckboxIOS);\n\n// @component-docs ignore-next-line\nexport { CheckboxIOS };\n"]}