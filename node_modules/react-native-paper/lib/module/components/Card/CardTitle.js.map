{"version":3,"sources":["CardTitle.tsx"],"names":["React","StyleSheet","View","withTheme","Caption","Title","LEFT_SIZE","CardTitle","Component","render","left","leftStyle","right","rightStyle","subtitle","subtitleStyle","subtitleNumberOfLines","style","title","titleStyle","props","styles","container","minHeight","size","titles","marginBottom","create","flexDirection","alignItems","justifyContent","paddingLeft","marginRight","height","width","flex","marginVertical"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAEEC,UAFF,EAIEC,IAJF,QAMO,cANP;AAQA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAuDA,MAAMC,SAAS,GAAG,EAAlB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,MAAMC,SAAN,SAAwBP,KAAK,CAACQ,SAA9B,CAA+C;AAO7CC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,IADI;AAEJC,MAAAA,SAFI;AAGJC,MAAAA,KAHI;AAIJC,MAAAA,UAJI;AAKJC,MAAAA,QALI;AAMJC,MAAAA,aANI;AAOJC,MAAAA,qBAPI;AAQJC,MAAAA,KARI;AASJC,MAAAA,KATI;AAUJC,MAAAA;AAVI,QAWF,KAAKC,KAXT;AAaA,wBACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE,CACLC,MAAM,CAACC,SADF,EAEL;AAAEC,QAAAA,SAAS,EAAET,QAAQ,IAAIJ,IAAZ,IAAoBE,KAApB,GAA4B,EAA5B,GAAiC;AAA9C,OAFK,EAGLK,KAHK;AADT,OAOGP,IAAI,gBACH,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACW,MAAM,CAACX,IAAR,EAAcC,SAAd;AAAb,OACGD,IAAI,CAAC;AACJc,MAAAA,IAAI,EAAElB;AADF,KAAD,CADP,CADG,GAMD,IAbN,eAeE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACe,MAAM,CAACI,MAAR;AAAb,OACGP,KAAK,gBACJ,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE,CACLG,MAAM,CAACH,KADF,EAEL;AAAEQ,QAAAA,YAAY,EAAEZ,QAAQ,GAAG,CAAH,GAAO;AAA/B,OAFK,EAGLK,UAHK,CADT;AAME,MAAA,aAAa,EAAE;AANjB,OAQGD,KARH,CADI,GAWF,IAZN,EAcGJ,QAAQ,gBACP,oBAAC,OAAD;AACE,MAAA,KAAK,EAAE,CAACO,MAAM,CAACP,QAAR,EAAkBC,aAAlB,CADT;AAEE,MAAA,aAAa,EAAEC;AAFjB,OAIGF,QAJH,CADO,GAOL,IArBN,CAfF,eAuCE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAED;AAAb,OAA0BD,KAAK,GAAGA,KAAK,CAAC;AAAEY,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR,GAAyB,IAAxD,CAvCF,CADF;AA2CD;;AAhE4C;;gBAAzCjB,S,iBACiB,Y;;gBADjBA,S,kBAGkB;AACpBS,EAAAA,qBAAqB,EAAE;AADH,C;;AAgExB,MAAMK,MAAM,GAAGpB,UAAU,CAAC0B,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE,eAHP;AAITC,IAAAA,WAAW,EAAE;AAJJ,GADoB;AAQ/BrB,EAAAA,IAAI,EAAE;AACJoB,IAAAA,cAAc,EAAE,QADZ;AAEJE,IAAAA,WAAW,EAAE,EAFT;AAGJC,IAAAA,MAAM,EAAE3B,SAHJ;AAIJ4B,IAAAA,KAAK,EAAE5B;AAJH,GARyB;AAe/BmB,EAAAA,MAAM,EAAE;AACNU,IAAAA,IAAI,EAAE,CADA;AAENP,IAAAA,aAAa,EAAE,QAFT;AAGNE,IAAAA,cAAc,EAAE;AAHV,GAfuB;AAqB/BZ,EAAAA,KAAK,EAAE;AACLK,IAAAA,SAAS,EAAE;AADN,GArBwB;AAyB/BT,EAAAA,QAAQ,EAAE;AACRS,IAAAA,SAAS,EAAE,EADH;AAERa,IAAAA,cAAc,EAAE;AAFR;AAzBqB,CAAlB,CAAf;AA+BA,eAAejC,SAAS,CAACI,SAAD,CAAxB,C,CAEA;;AACA,SAASA,SAAT","sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { withTheme } from '../../core/theming';\nimport Caption from './../Typography/Caption';\nimport Title from './../Typography/Title';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Text for the title. Note that this will only accept a string or `<Text>`-based node.\n   */\n  title: React.ReactNode;\n  /**\n   * Style for the title.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Text for the subtitle. Note that this will only accept a string or `<Text>`-based node.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * Style for the subtitle.\n   */\n  subtitleStyle?: StyleProp<TextStyle>;\n  /**\n   * Number of line for the subtitle.\n   */\n  subtitleNumberOfLines?: number;\n  /**\n   * Callback which returns a React element to display on the left side.\n   */\n  left?: (props: { size: number }) => React.ReactNode;\n  /**\n   * Style for the left element wrapper.\n   */\n  leftStyle?: StyleProp<ViewStyle>;\n  /**\n   * Callback which returns a React element to display on the right side.\n   */\n  right?: (props: { size: number }) => React.ReactNode;\n  /**\n   * Style for the right element wrapper.\n   */\n  rightStyle?: StyleProp<ViewStyle>;\n  /**\n   * @internal\n   */\n  index?: number;\n  /**\n   * @internal\n   */\n  total?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\nconst LEFT_SIZE = 40;\n\n/**\n * A component to show a title, subtitle and an avatar inside a Card.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/card-title-1.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar, Card, IconButton } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card.Title\n *     title=\"Card Title\"\n *     subtitle=\"Card Subtitle\"\n *     left={(props) => <Avatar.Icon {...props} icon=\"folder\" />}\n *     right={(props) => <IconButton {...props} icon=\"more-vert\" onPress={() => {}} />}\n *   />\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass CardTitle extends React.Component<Props> {\n  static displayName = 'Card.Title';\n\n  static defaultProps = {\n    subtitleNumberOfLines: 1,\n  };\n\n  render() {\n    const {\n      left,\n      leftStyle,\n      right,\n      rightStyle,\n      subtitle,\n      subtitleStyle,\n      subtitleNumberOfLines,\n      style,\n      title,\n      titleStyle,\n    } = this.props;\n\n    return (\n      <View\n        style={[\n          styles.container,\n          { minHeight: subtitle || left || right ? 72 : 50 },\n          style,\n        ]}\n      >\n        {left ? (\n          <View style={[styles.left, leftStyle]}>\n            {left({\n              size: LEFT_SIZE,\n            })}\n          </View>\n        ) : null}\n\n        <View style={[styles.titles]}>\n          {title ? (\n            <Title\n              style={[\n                styles.title,\n                { marginBottom: subtitle ? 0 : 2 },\n                titleStyle,\n              ]}\n              numberOfLines={1}\n            >\n              {title}\n            </Title>\n          ) : null}\n\n          {subtitle ? (\n            <Caption\n              style={[styles.subtitle, subtitleStyle]}\n              numberOfLines={subtitleNumberOfLines}\n            >\n              {subtitle}\n            </Caption>\n          ) : null}\n        </View>\n\n        <View style={rightStyle}>{right ? right({ size: 24 }) : null}</View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: 16,\n  },\n\n  left: {\n    justifyContent: 'center',\n    marginRight: 16,\n    height: LEFT_SIZE,\n    width: LEFT_SIZE,\n  },\n\n  titles: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n\n  title: {\n    minHeight: 30,\n  },\n\n  subtitle: {\n    minHeight: 20,\n    marginVertical: 0,\n  },\n});\n\nexport default withTheme(CardTitle);\n\n// @component-docs ignore-next-line\nexport { CardTitle };\n"]}