{"version":3,"sources":["HelperText.tsx"],"names":["React","color","Animated","StyleSheet","AnimatedText","withTheme","HelperText","PureComponent","shown","Value","props","visible","textHeight","scale","theme","animation","timing","state","toValue","duration","useNativeDriver","start","e","onLayout","setState","nativeEvent","layout","height","componentDidUpdate","prevProps","prevState","showText","hideText","render","style","type","padding","rest","colors","dark","textColor","error","text","alpha","rgb","string","handleTextLayout","styles","opacity","transform","translateY","interpolate","inputRange","outputRange","children","create","fontSize","paddingVertical","paddingHorizontal"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport {\n  Animated,\n  StyleSheet,\n  StyleProp,\n  TextStyle,\n  LayoutChangeEvent,\n} from 'react-native';\nimport AnimatedText from './Typography/AnimatedText';\nimport { withTheme } from '../core/theming';\nimport { Theme, $Omit } from '../types';\n\ntype Props = $Omit<\n  $Omit<React.ComponentPropsWithRef<typeof AnimatedText>, 'padding'>,\n  'type'\n> & {\n  /**\n   * Type of the helper text.\n   */\n  type: 'error' | 'info';\n  /**\n   * Whether to display the helper text.\n   */\n  visible?: boolean;\n  /**\n   * Whether to apply padding to the helper text.\n   */\n  padding?: 'none' | 'normal';\n  /**\n   * Text content of the HelperText.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\ntype State = {\n  shown: Animated.Value;\n  textHeight: number;\n};\n\n/**\n * Helper text is used in conjuction with input elements to provide additional hints for the user.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/helper-text.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { HelperText, TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *    const onChangeText = text => setText(text);\n *\n *   const hasErrors = () => {\n *     return !text.includes('@');\n *   };\n *\n *  return (\n *     <View>\n *       <TextInput label=\"Email\" value={text} onChangeText={onChangeText} />\n *       <HelperText type=\"error\" visible={hasErrors()}>\n *         Email address is invalid!\n *       </HelperText>\n *     </View>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nclass HelperText extends React.PureComponent<Props, State> {\n  static defaultProps: Partial<Props> = {\n    type: 'info',\n    padding: 'normal',\n    visible: true,\n  };\n\n  state = {\n    shown: new Animated.Value(this.props.visible ? 1 : 0),\n    textHeight: 0,\n  };\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (\n      prevProps.visible !== this.props.visible ||\n      prevState.textHeight !== this.state.textHeight\n    ) {\n      if (this.props.visible) {\n        this.showText();\n      } else {\n        this.hideText();\n      }\n    }\n  }\n\n  private showText = () => {\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.shown, {\n      toValue: 1,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  private hideText = () => {\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.shown, {\n      toValue: 0,\n      duration: 180 * scale,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  private handleTextLayout = (e: LayoutChangeEvent) => {\n    //@ts-ignore Animated.Text typings are improved but something is still broken. It thinks onLayout is not callable.\n    this.props.onLayout && this.props.onLayout(e);\n    this.setState({\n      textHeight: e.nativeEvent.layout.height,\n    });\n  };\n\n  render() {\n    const {\n      style,\n      type,\n      visible,\n      theme,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onLayout,\n      padding,\n      ...rest\n    } = this.props;\n    const { colors, dark } = theme;\n\n    const textColor =\n      this.props.type === 'error'\n        ? colors.error\n        : color(colors.text)\n            .alpha(dark ? 0.7 : 0.54)\n            .rgb()\n            .string();\n\n    return (\n      <AnimatedText\n        onLayout={this.handleTextLayout}\n        style={[\n          styles.text,\n          padding !== 'none' ? styles.padding : {},\n          {\n            color: textColor,\n            opacity: this.state.shown,\n            transform:\n              visible && type === 'error'\n                ? [\n                    {\n                      translateY: this.state.shown.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [-this.state.textHeight / 2, 0],\n                      }),\n                    },\n                  ]\n                : [],\n          },\n          style,\n        ]}\n        {...rest}\n      >\n        {this.props.children}\n      </AnimatedText>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 12,\n    paddingVertical: 4,\n  },\n  padding: {\n    paddingHorizontal: 12,\n  },\n});\n\nexport default withTheme(HelperText);\n"]}