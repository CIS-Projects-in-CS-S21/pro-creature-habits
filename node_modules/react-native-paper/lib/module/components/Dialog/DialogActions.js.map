{"version":3,"sources":["DialogActions.tsx"],"names":["React","StyleSheet","View","DialogActions","Component","render","props","styles","container","style","Children","map","children","child","isValidElement","cloneElement","compact","create","flexDirection","alignItems","justifyContent","padding"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAgCC,IAAhC,QAAuD,cAAvD;;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAAmD;AAGjDC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,IAAD,eAAU,KAAKC,KAAf;AAAsB,MAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmB,KAAKF,KAAL,CAAWG,KAA9B;AAA7B,QACGT,KAAK,CAACU,QAAN,CAAeC,GAAf,CAAmB,KAAKL,KAAL,CAAWM,QAA9B,EAAwCC,KAAK,IAC5C,aAAAb,KAAK,CAACc,cAAN,CAAqBD,KAArB,iBACIb,KAAK,CAACe,YAAN,CAAmBF,KAAnB,EAA0B;AACxBG,MAAAA,OAAO,EAAE;AADe,KAA1B,CADJ,GAIIH,KALL,CADH,CADF;AAWD;;AAfgD;;gBAA7CV,a,iBACiB,gB;;AAiBvB,MAAMI,MAAM,GAAGN,UAAU,CAACgB,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE,UAHP;AAITC,IAAAA,OAAO,EAAE;AAJA;AADoB,CAAlB,CAAf;AASA,eAAelB,aAAf","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DialogActions`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a list of actions in a Dialog.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/dialog-actions.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Button, Dialog, Portal } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Actions>\n *           <Button onPress={() => console.log('Cancel')}>Cancel</Button>\n *           <Button onPress={() => console.log('Ok')}>Ok</Button>\n *         </Dialog.Actions>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nclass DialogActions extends React.Component<Props> {\n  static displayName = 'Dialog.Actions';\n\n  render() {\n    return (\n      <View {...this.props} style={[styles.container, this.props.style]}>\n        {React.Children.map(this.props.children, child =>\n          React.isValidElement(child)\n            ? React.cloneElement(child, {\n                compact: true,\n              })\n            : child\n        )}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: 8,\n  },\n});\n\nexport default DialogActions;\n"]}