{"version":3,"sources":["CardActions.tsx"],"names":["CardActions","React","Component","render","props","styles","container","style","Children","map","children","child","isValidElement","cloneElement","compact","StyleSheet","create","flexDirection","alignItems","justifyContent","padding"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,MAAMA,WAAN,SAA0BC,KAAK,CAACC,SAAhC,CAAiD;AAG/CC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,iBAAD,eAAU,KAAKC,KAAf;AAAsB,MAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmB,KAAKF,KAAL,CAAWG,KAA9B;AAA7B,QACGN,KAAK,CAACO,QAAN,CAAeC,GAAf,CAAmB,KAAKL,KAAL,CAAWM,QAA9B,EAAwCC,KAAK,IAC5C,aAAAV,KAAK,CAACW,cAAN,CAAqBD,KAArB,iBACIV,KAAK,CAACY,YAAN,CAAmBF,KAAnB,EAA0B;AACxBG,MAAAA,OAAO,EAAEH,KAAK,CAACP,KAAN,CAAYU,OAAZ,KAAwB;AADT,KAA1B,CADJ,GAIIH,KALL,CADH,CADF;AAWD;;AAf8C;;gBAA3CX,W,iBACiB,c;;AAiBvB,MAAMK,MAAM,GAAGU,wBAAWC,MAAX,CAAkB;AAC/BV,EAAAA,SAAS,EAAE;AACTW,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE,YAHP;AAITC,IAAAA,OAAO,EAAE;AAJA;AADoB,CAAlB,CAAf;;eASepB,W","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Items inside the `CardActions`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a list of actions inside a Card.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/card-actions.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Card, Button } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Actions>\n *       <Button>Cancel</Button>\n *       <Button>Ok</Button>\n *     </Card.Actions>\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass CardActions extends React.Component<Props> {\n  static displayName = 'Card.Actions';\n\n  render() {\n    return (\n      <View {...this.props} style={[styles.container, this.props.style]}>\n        {React.Children.map(this.props.children, child =>\n          React.isValidElement(child)\n            ? React.cloneElement(child, {\n                compact: child.props.compact !== false,\n              })\n            : child\n        )}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    padding: 8,\n  },\n});\n\nexport default CardActions;\n"]}