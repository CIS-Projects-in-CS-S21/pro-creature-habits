{"version":3,"sources":["CardCover.tsx"],"names":["CardCover","React","Component","render","props","index","total","style","theme","rest","roundness","coverStyle","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","styles","container","image","StyleSheet","create","height","backgroundColor","grey200","overflow","flex","undefined","width","padding","justifyContent","resizeMode"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,MAAMA,SAAN,SAAwBC,KAAK,CAACC,SAA9B,CAA+C;AAG7CC,EAAAA,MAAM,GAAG;AACP,wBAAgD,KAAKC,KAArD;AAAA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA,KAAhB;AAAuBC,MAAAA;AAAvB,KAAN;AAAA,UAAuCC,IAAvC;;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAgBF,KAAtB;AAEA,QAAIG,UAAJ;;AAEA,QAAIN,KAAK,KAAK,CAAd,EAAiB;AACf,UAAIC,KAAK,KAAK,CAAd,EAAiB;AACfK,QAAAA,UAAU,GAAG;AACXC,UAAAA,YAAY,EAAEF;AADH,SAAb;AAGD,OAJD,MAIO;AACLC,QAAAA,UAAU,GAAG;AACXE,UAAAA,mBAAmB,EAAEH,SADV;AAEXI,UAAAA,oBAAoB,EAAEJ;AAFX,SAAb;AAID;AACF,KAXD,MAWO,IAAI,OAAOJ,KAAP,KAAiB,QAAjB,IAA6BD,KAAK,KAAKC,KAAK,GAAG,CAAnD,EAAsD;AAC3DK,MAAAA,UAAU,GAAG;AACXI,QAAAA,sBAAsB,EAAEL;AADb,OAAb;AAGD;;AAED,wBACE,oBAAC,iBAAD;AAAM,MAAA,KAAK,EAAE,CAACM,MAAM,CAACC,SAAR,EAAmBN,UAAnB,EAA+BJ,KAA/B;AAAb,oBACE,oBAAC,kBAAD,eAAWE,IAAX;AAAiB,MAAA,KAAK,EAAE,CAACO,MAAM,CAACE,KAAR,EAAeP,UAAf;AAAxB,OADF,CADF;AAKD;;AA/B4C;;;;gBAAzCX,S,iBACiB,Y;;AAiCvB,MAAMgB,MAAM,GAAGG,wBAAWC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,MAAM,EAAE,GADC;AAETC,IAAAA,eAAe,EAAEC,eAFR;AAGTC,IAAAA,QAAQ,EAAE;AAHD,GADoB;AAM/BN,EAAAA,KAAK,EAAE;AACLO,IAAAA,IAAI,EAAE,CADD;AAELJ,IAAAA,MAAM,EAAEK,SAFH;AAGLC,IAAAA,KAAK,EAAED,SAHF;AAILE,IAAAA,OAAO,EAAE,EAJJ;AAKLC,IAAAA,cAAc,EAAE,UALX;AAMLC,IAAAA,UAAU,EAAE;AANP;AANwB,CAAlB,CAAf;;eAgBe,wBAAU9B,SAAV,C,EAEf","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, ViewStyle, Image, StyleProp } from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport { grey200 } from '../../styles/colors';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentPropsWithRef<typeof Image> & {\n  /**\n   * @internal\n   */\n  index?: number;\n  /**\n   * @internal\n   */\n  total?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component to show a cover image inside a Card.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/card-cover.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Card } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends Image props https://facebook.github.io/react-native/docs/image.html#props\n */\nclass CardCover extends React.Component<Props> {\n  static displayName = 'Card.Cover';\n\n  render() {\n    const { index, total, style, theme, ...rest } = this.props;\n    const { roundness } = theme;\n\n    let coverStyle;\n\n    if (index === 0) {\n      if (total === 1) {\n        coverStyle = {\n          borderRadius: roundness,\n        };\n      } else {\n        coverStyle = {\n          borderTopLeftRadius: roundness,\n          borderTopRightRadius: roundness,\n        };\n      }\n    } else if (typeof total === 'number' && index === total - 1) {\n      coverStyle = {\n        borderBottomLeftRadius: roundness,\n      };\n    }\n\n    return (\n      <View style={[styles.container, coverStyle, style]}>\n        <Image {...rest} style={[styles.image, coverStyle]} />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 195,\n    backgroundColor: grey200,\n    overflow: 'hidden',\n  },\n  image: {\n    flex: 1,\n    height: undefined,\n    width: undefined,\n    padding: 16,\n    justifyContent: 'flex-end',\n    resizeMode: 'cover',\n  },\n});\n\nexport default withTheme(CardCover);\n\n// @component-docs ignore-next-line\nexport { CardCover };\n"]}