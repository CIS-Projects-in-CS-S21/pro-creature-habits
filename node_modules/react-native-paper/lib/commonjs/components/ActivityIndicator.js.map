{"version":3,"sources":["ActivityIndicator.tsx"],"names":["DURATION","ActivityIndicator","React","Component","timer","Animated","Value","fade","props","animating","hidesWhenStopped","undefined","state","scale","theme","animation","timing","duration","toValue","isInteraction","useNativeDriver","start","rotation","setValue","loop","stop","componentDidMount","easing","Easing","linear","Platform","OS","startRotation","componentDidUpdate","prevProps","stopRotation","bind","render","color","indicatorColor","size","indicatorSize","style","rest","colors","primary","frames","bezier","containerStyle","width","height","overflow","styles","container","opacity","map","index","inputRange","Array","from","_","frameIndex","outputRange","progress","direction","layerStyle","transform","rotate","interpolate","viewportStyle","translateY","offsetStyle","top","lineStyle","borderColor","borderWidth","borderRadius","layer","StyleSheet","create","justifyContent","alignItems","absoluteFillObject"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Whether to show the indicator or hide it.\n   */\n  animating?: boolean;\n  /**\n   * The color of the spinner.\n   */\n  color?: string;\n  /**\n   * Size of the indicator.\n   */\n  size?: 'small' | 'large' | number;\n  /**\n   * Whether the indicator should hide when not animating.\n   */\n  hidesWhenStopped?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  timer: Animated.Value;\n  fade: Animated.Value;\n};\n\nconst DURATION = 2400;\n\n/**\n * Activity indicator is used to present progress of some activity in the app.\n * It can be used as a drop-in for the ActivityIndicator shipped with React Native.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/activity-indicator.gif\" style=\"width: 100px;\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ActivityIndicator, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ActivityIndicator animating={true} color={Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass ActivityIndicator extends React.Component<Props, State> {\n  static defaultProps: Partial<Props> = {\n    animating: true,\n    size: 'small',\n    hidesWhenStopped: true,\n  };\n\n  state = {\n    timer: new Animated.Value(0),\n    fade: new Animated.Value(\n      !this.props.animating && this.props.hidesWhenStopped ? 0 : 1\n    ),\n  };\n\n  rotation: Animated.CompositeAnimation | undefined = undefined;\n\n  componentDidMount() {\n    const { animating } = this.props;\n    const { timer } = this.state;\n\n    // Circular animation in loop\n    this.rotation = Animated.timing(timer, {\n      duration: DURATION,\n      easing: Easing.linear,\n      // Animated.loop does not work if useNativeDriver is true on web\n      useNativeDriver: Platform.OS !== 'web',\n      toValue: 1,\n      isInteraction: false,\n    });\n\n    if (animating) {\n      this.startRotation();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {\n      animating,\n      hidesWhenStopped,\n      theme: {\n        animation: { scale },\n      },\n    } = this.props;\n    const { fade } = this.state;\n\n    if (animating !== prevProps.animating) {\n      if (animating) {\n        this.startRotation();\n      } else if (hidesWhenStopped) {\n        // Hide indicator first and then stop rotation\n        Animated.timing(fade, {\n          duration: 200 * scale,\n          toValue: 0,\n          useNativeDriver: true,\n          isInteraction: false,\n        }).start(this.stopRotation.bind(this));\n      } else {\n        this.stopRotation();\n      }\n    }\n  }\n\n  private startRotation = () => {\n    const { fade, timer } = this.state;\n    const { scale } = this.props.theme.animation;\n\n    // Show indicator\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      isInteraction: false,\n      useNativeDriver: true,\n    }).start();\n\n    // Circular animation in loop\n    if (this.rotation) {\n      timer.setValue(0);\n      // $FlowFixMe\n      Animated.loop(this.rotation).start();\n    }\n  };\n\n  private stopRotation = () => {\n    if (this.rotation) {\n      this.rotation.stop();\n    }\n  };\n\n  render() {\n    const { fade, timer } = this.state;\n    const {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      animating,\n      color: indicatorColor,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      hidesWhenStopped,\n      size: indicatorSize,\n      style,\n      theme,\n      ...rest\n    } = this.props;\n    const color = indicatorColor || theme.colors.primary;\n    const size =\n      typeof indicatorSize === 'string'\n        ? indicatorSize === 'small'\n          ? 24\n          : 48\n        : indicatorSize\n        ? indicatorSize\n        : 24;\n\n    const frames = (60 * DURATION) / 1000;\n    const easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n    const containerStyle = {\n      width: size,\n      height: size / 2,\n      overflow: 'hidden',\n    };\n\n    return (\n      <View style={[styles.container, style]} {...rest}>\n        <Animated.View\n          style={[{ width: size, height: size, opacity: fade }]}\n          collapsable={false}\n        >\n          {[0, 1].map(index => {\n            // Thanks to https://github.com/n4kz/react-native-indicators for the great work\n            const inputRange = Array.from(\n              new Array(frames),\n              (_, frameIndex) => frameIndex / (frames - 1)\n            );\n            const outputRange = Array.from(\n              new Array(frames),\n              (_, frameIndex) => {\n                let progress = (2 * frameIndex) / (frames - 1);\n                const rotation = index ? +(360 - 15) : -(180 - 15);\n\n                if (progress > 1.0) {\n                  progress = 2.0 - progress;\n                }\n\n                const direction = index ? -1 : +1;\n\n                return `${direction * (180 - 30) * easing(progress) +\n                  rotation}deg`;\n              }\n            );\n\n            const layerStyle = {\n              width: size,\n              height: size,\n              transform: [\n                {\n                  rotate: timer.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [\n                      `${0 + 30 + 15}deg`,\n                      `${2 * 360 + 30 + 15}deg`,\n                    ],\n                  }),\n                },\n              ],\n            };\n\n            const viewportStyle = {\n              width: size,\n              height: size,\n              transform: [\n                {\n                  translateY: index ? -size / 2 : 0,\n                },\n                {\n                  rotate: timer.interpolate({ inputRange, outputRange }),\n                },\n              ],\n            };\n\n            const offsetStyle = index ? { top: size / 2 } : null;\n\n            const lineStyle = {\n              width: size,\n              height: size,\n              borderColor: color,\n              borderWidth: size / 10,\n              borderRadius: size / 2,\n            };\n\n            return (\n              <Animated.View key={index} style={[styles.layer]}>\n                <Animated.View style={layerStyle}>\n                  <Animated.View\n                    style={[containerStyle, offsetStyle]}\n                    collapsable={false}\n                  >\n                    <Animated.View style={viewportStyle}>\n                      <Animated.View style={containerStyle} collapsable={false}>\n                        <Animated.View style={lineStyle} />\n                      </Animated.View>\n                    </Animated.View>\n                  </Animated.View>\n                </Animated.View>\n              </Animated.View>\n            );\n          })}\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  layer: {\n    ...StyleSheet.absoluteFillObject,\n\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withTheme(ActivityIndicator);\n"]}