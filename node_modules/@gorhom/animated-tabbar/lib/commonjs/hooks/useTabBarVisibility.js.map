{"version":3,"sources":["useTabBarVisibility.ts"],"names":["useTabBarVisibility","shouldShowTabBar","_shouldShowTabBar","clock","shouldAnimate","state","finished","Animated","Value","frameTime","position","time","config","toValue","easing","Easing","linear","duration","finishTiming","setValue"],"mappings":";;;;;;;AAAA;;AACA;;AAYA;;AACA;;;;;;AAEO,MAAMA,mBAAmB,GAAIC,gBAAD,IAA+B;AAChE,QAAMC,iBAAiB,GAAG,iBAASD,gBAAgB,GAAG,CAAH,GAAO,CAAhC,CAA1B;;AACA,QAAME,KAAK,GAAG,kBAAd;AACA,QAAMC,aAAa,GAAG,iBAAS,CAAT,CAAtB;AACA,QAAMC,KAAK,GAAG,oBACZ,OAAO;AACLC,IAAAA,QAAQ,EAAE,IAAIC,+BAASC,KAAb,CAAmB,CAAnB,CADL;AAELC,IAAAA,SAAS,EAAE,IAAIF,+BAASC,KAAb,CAAmB,CAAnB,CAFN;AAGLE,IAAAA,QAAQ,EAAE,IAAIH,+BAASC,KAAb,CAAmBP,gBAAgB,GAAG,CAAH,GAAO,CAA1C,CAHL;AAILU,IAAAA,IAAI,EAAE,IAAIJ,+BAASC,KAAb,CAAmB,CAAnB;AAJD,GAAP,CADY,EAOZ;AACA,IARY,CAAd;AAUA,QAAMI,MAAM,GAAG,oBACb,OAAO;AACLC,IAAAA,OAAO,EAAE,IAAIN,+BAASC,KAAb,CAAmB,CAAnB,CADJ;AAELM,IAAAA,MAAM,EAAEC,kBAAOC,MAFV;AAGLC,IAAAA,QAAQ,EAAE;AAHL,GAAP,CADa,EAMb,EANa,CAAf;AASA,QAAMC,YAAY,GAAG,oBACnB,MAAM,CACJ,sCAAUf,KAAV,CADI,EAEJ,gCAAIE,KAAK,CAACC,QAAV,EAAoB,CAApB,CAFI,EAGJ,gCAAID,KAAK,CAACI,SAAV,EAAqB,CAArB,CAHI,EAIJ,gCAAIJ,KAAK,CAACM,IAAV,EAAgB,CAAhB,CAJI,CADa,EAOnB,CAACR,KAAD,EAAQE,KAAR,CAPmB,CAArB,CAvBgE,CAiChE;;AACA,wBAAU,MAAM;AACdH,IAAAA,iBAAiB,CAACiB,QAAlB,CAA2BlB,gBAAgB,GAAG,CAAH,GAAO,CAAlD,EADc,CAEd;;AACD,GAHD,EAGG,CAACA,gBAAD,CAHH;AAKA,SAAO,kCAAM,CACX,qCAASC,iBAAT,EAA4B,CAACgB,YAAD,EAAe,gCAAId,aAAJ,EAAmB,CAAnB,CAAf,CAA5B,CADW,EAGX,iCAAKA,aAAL,EAAoB,CAClB,iCAAK,gCAAI,gCAAI,yCAAaD,KAAb,CAAJ,CAAJ,EAA8B,gCAAIE,KAAK,CAACC,QAAV,CAA9B,CAAL,EAAyD,CACvD,gCAAID,KAAK,CAACI,SAAV,EAAqB,CAArB,CADuD,EAEvD,gCAAIJ,KAAK,CAACM,IAAV,EAAgB,CAAhB,CAFuD,EAGvD,gCAAIN,KAAK,CAACC,QAAV,EAAoB,CAApB,CAHuD,EAIvD,gCAAIM,MAAM,CAACC,OAAX,EAAoBX,iBAApB,CAJuD,EAKvD,uCAAWC,KAAX,CALuD,CAAzD,CADkB,EAQlB,mCAAOA,KAAP,EAAcE,KAAd,EAAqBO,MAArB,CARkB,EASlB,iCAAKP,KAAK,CAACC,QAAX,EAAqB,CAACY,YAAD,EAAe,gCAAId,aAAJ,EAAmB,CAAnB,CAAf,CAArB,CATkB,CAApB,CAHW,EAeXC,KAAK,CAACK,QAfK,CAAN,CAAP;AAiBD,CAxDM","sourcesContent":["import { useMemo, useEffect } from 'react';\nimport Animated, {\n  block,\n  onChange,\n  stopClock,\n  set,\n  cond,\n  and,\n  not,\n  clockRunning,\n  startClock,\n  timing,\n} from 'react-native-reanimated';\nimport { useClock, useValue } from 'react-native-redash/lib/module/v1';\nimport { Easing } from '../utilities';\n\nexport const useTabBarVisibility = (shouldShowTabBar: boolean) => {\n  const _shouldShowTabBar = useValue(shouldShowTabBar ? 1 : 0);\n  const clock = useClock();\n  const shouldAnimate = useValue(0);\n  const state = useMemo(\n    () => ({\n      finished: new Animated.Value(0),\n      frameTime: new Animated.Value(0),\n      position: new Animated.Value(shouldShowTabBar ? 1 : 0),\n      time: new Animated.Value(0),\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n  const config = useMemo(\n    () => ({\n      toValue: new Animated.Value(0),\n      easing: Easing.linear,\n      duration: 250,\n    }),\n    []\n  );\n\n  const finishTiming = useMemo(\n    () => [\n      stopClock(clock),\n      set(state.finished, 0),\n      set(state.frameTime, 0),\n      set(state.time, 0),\n    ],\n    [clock, state]\n  );\n\n  // effects\n  useEffect(() => {\n    _shouldShowTabBar.setValue(shouldShowTabBar ? 1 : 0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [shouldShowTabBar]);\n\n  return block([\n    onChange(_shouldShowTabBar, [finishTiming, set(shouldAnimate, 1)]),\n\n    cond(shouldAnimate, [\n      cond(and(not(clockRunning(clock)), not(state.finished)), [\n        set(state.frameTime, 0),\n        set(state.time, 0),\n        set(state.finished, 0),\n        set(config.toValue, _shouldShowTabBar),\n        startClock(clock),\n      ]),\n      timing(clock, state, config),\n      cond(state.finished, [finishTiming, set(shouldAnimate, 0)]),\n    ]),\n\n    state.position,\n  ]);\n};\n"]}