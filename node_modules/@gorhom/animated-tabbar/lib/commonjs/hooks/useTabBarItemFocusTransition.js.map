{"version":3,"sources":["useTabBarItemFocusTransition.ts"],"names":["block","cond","onChange","Value","Clock","set","eq","neq","not","or","timing","and","startClock","clockRunning","stopClock","Animated","useTabBarItemFocusTransition","index","selectedIndex","duration","easing","clock","state","finished","frameTime","position","time","config","toValue","shouldAnimateIn","shouldAnimateOut","shouldAnimate","finishTiming"],"mappings":";;;;;;;AAAA;;;;AAGA,MAAM;AACJA,EAAAA,KADI;AAEJC,EAAAA,IAFI;AAGJC,EAAAA,QAHI;AAIJC,EAAAA,KAJI;AAKJC,EAAAA,KALI;AAMJC,EAAAA,GANI;AAOJC,EAAAA,EAPI;AAQJC,EAAAA,GARI;AASJC,EAAAA,GATI;AAUJC,EAAAA,EAVI;AAWJC,EAAAA,MAXI;AAYJC,EAAAA,GAZI;AAaJC,EAAAA,UAbI;AAcJC,EAAAA,YAdI;AAeJC,EAAAA;AAfI,IAgBFC,8BAhBJ;;AAwBO,MAAMC,4BAA4B,GAAG,CAAC;AAC3CC,EAAAA,KAD2C;AAE3CC,EAAAA,aAF2C;AAG3CC,EAAAA,QAH2C;AAI3CC,EAAAA;AAJ2C,CAAD,KAKH;AACvC;AACA,QAAMC,KAAK,GAAG,IAAIjB,KAAJ,EAAd;AACA,QAAMkB,KAAK,GAAG;AACZC,IAAAA,QAAQ,EAAE,IAAIpB,KAAJ,CAAU,CAAV,CADE;AAEZqB,IAAAA,SAAS,EAAE,IAAIrB,KAAJ,CAAU,CAAV,CAFC;AAGZsB,IAAAA,QAAQ,EAAE,IAAItB,KAAJ,CAAU,CAAV,CAHE;AAIZuB,IAAAA,IAAI,EAAE,IAAIvB,KAAJ,CAAU,CAAV;AAJM,GAAd;AAMA,QAAMwB,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE,IAAIzB,KAAJ,CAAU,CAAV,CADI;AAEbiB,IAAAA,MAFa;AAGbD,IAAAA;AAHa,GAAf,CATuC,CAcvC;AAEA;;AACA,QAAMU,eAAe,GAAGlB,GAAG,CAACL,EAAE,CAACY,aAAD,EAAgBD,KAAhB,CAAH,EAA2BV,GAAG,CAACe,KAAK,CAACG,QAAP,EAAiB,CAAjB,CAA9B,CAA3B;AACA,QAAMK,gBAAgB,GAAGnB,GAAG,CAC1BJ,GAAG,CAACW,aAAD,EAAgBD,KAAhB,CADuB,EAE1BV,GAAG,CAACe,KAAK,CAACG,QAAP,EAAiB,CAAjB,CAFuB,CAA5B;AAIA,QAAMM,aAAa,GAAGtB,EAAE,CAACoB,eAAD,EAAkBC,gBAAlB,CAAxB,CAtBuC,CAuBvC;;AACA,QAAME,YAAY,GAAG,CACnBlB,SAAS,CAACO,KAAD,CADU,EAEnBhB,GAAG,CAACiB,KAAK,CAACC,QAAP,EAAiB,CAAjB,CAFgB,EAGnBlB,GAAG,CAACiB,KAAK,CAACE,SAAP,EAAkB,CAAlB,CAHgB,EAInBnB,GAAG,CAACiB,KAAK,CAACI,IAAP,EAAa,CAAb,CAJgB,CAArB;AAMA,SAAO1B,KAAK,CAAC,CACXE,QAAQ,CAACgB,aAAD,EAAgBc,YAAhB,CADG,EAEX/B,IAAI,CAAC8B,aAAD,EAAgB,CAClB9B,IAAI,CAACU,GAAG,CAACH,GAAG,CAACK,YAAY,CAACQ,KAAD,CAAb,CAAJ,EAA2Bb,GAAG,CAACc,KAAK,CAACC,QAAP,CAA9B,CAAJ,EAAqD,CACvDlB,GAAG,CAACiB,KAAK,CAACE,SAAP,EAAkB,CAAlB,CADoD,EAEvDnB,GAAG,CAACiB,KAAK,CAACI,IAAP,EAAa,CAAb,CAFoD,EAGvDrB,GAAG,CAACiB,KAAK,CAACC,QAAP,EAAiB,CAAjB,CAHoD,EAIvDlB,GAAG,CAACsB,MAAM,CAACC,OAAR,EAAiBC,eAAjB,CAJoD,EAKvDjB,UAAU,CAACS,KAAD,CAL6C,CAArD,CADc,EAQlBX,MAAM,CAACW,KAAD,EAAQC,KAAR,EAAeK,MAAf,CARY,EASlB1B,IAAI,CAACqB,KAAK,CAACC,QAAP,EAAiBS,YAAjB,CATc,CAAhB,CAFO,EAaXV,KAAK,CAACG,QAbK,CAAD,CAAZ;AAeD,CAlDM","sourcesContent":["import Animated from 'react-native-reanimated';\nimport type { TabBarConfigurableProps } from '../types';\n\nconst {\n  block,\n  cond,\n  onChange,\n  Value,\n  Clock,\n  set,\n  eq,\n  neq,\n  not,\n  or,\n  timing,\n  and,\n  startClock,\n  clockRunning,\n  stopClock,\n} = Animated;\n\ninterface useTabBarItemFocusTransitionProps\n  extends Required<Pick<TabBarConfigurableProps, 'duration' | 'easing'>> {\n  index: number;\n  selectedIndex: Animated.Value<number>;\n}\n\nexport const useTabBarItemFocusTransition = ({\n  index,\n  selectedIndex,\n  duration,\n  easing,\n}: useTabBarItemFocusTransitionProps) => {\n  //#region variables\n  const clock = new Clock();\n  const state = {\n    finished: new Value(0),\n    frameTime: new Value(0),\n    position: new Value(0),\n    time: new Value(0),\n  };\n  const config = {\n    toValue: new Value(0),\n    easing,\n    duration,\n  };\n  //#endregion\n\n  //#region conditions\n  const shouldAnimateIn = and(eq(selectedIndex, index), neq(state.position, 1));\n  const shouldAnimateOut = and(\n    neq(selectedIndex, index),\n    neq(state.position, 0)\n  );\n  const shouldAnimate = or(shouldAnimateIn, shouldAnimateOut);\n  //#endregion\n  const finishTiming = [\n    stopClock(clock),\n    set(state.finished, 0),\n    set(state.frameTime, 0),\n    set(state.time, 0),\n  ];\n  return block([\n    onChange(selectedIndex, finishTiming),\n    cond(shouldAnimate, [\n      cond(and(not(clockRunning(clock)), not(state.finished)), [\n        set(state.frameTime, 0),\n        set(state.time, 0),\n        set(state.finished, 0),\n        set(config.toValue, shouldAnimateIn),\n        startClock(clock),\n      ]),\n      timing(clock, state, config),\n      cond(state.finished, finishTiming),\n    ]),\n    state.position,\n  ]);\n};\n"]}