{"version":3,"sources":["AnimatedTabBar.tsx"],"names":["AnimatedTabBar","props","tabs","state","navigation","descriptors","onTabPress","onTabLongPress","style","overrideStyle","safeAreaInsets","overrideSafeAreaInsets","rest","tabBarContainerRef","isReactNavigation5","Boolean","tabBarHeight","CommonActions","_CommonActions","require","undefined","index","navigationIndex","key","navigationKey","routes","shouldShowTabBar","route","options","tabBarVisible","shouldShowTabBarAnimated","getRouteTitle","tabBarLabel","title","name","getRouteTabConfigs","routesWithTabConfig","reduce","result","bottom","_safeBottomArea","safeBottomArea","paddingBottom","containerStyle","left","right","transform","translateY","inputRange","outputRange","extrapolate","Extrapolate","CLAMP","handleIndexChange","focused","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","navigate","handleLongPress","handleLayout","nativeEvent","layout","height","setValue","current","setNativeProps","position"],"mappings":"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","sourcesContent":["import React, { useMemo, useCallback, useEffect, useRef } from 'react';\nimport type { LayoutChangeEvent } from 'react-native';\nimport { useSafeArea } from 'react-native-safe-area-context';\nimport { AnimatedTabBarView } from './AnimatedTabBarView';\nimport { interpolate } from './utilities';\nimport { useTabBarVisibility, useStableCallback } from './hooks';\nimport type { PresetEnum } from './presets';\nimport type { AnimatedTabBarProps } from './types';\nimport Animated, {\n  Extrapolate,\n  useCode,\n  cond,\n  eq,\n  call,\n  onChange,\n} from 'react-native-reanimated';\nimport { useValue } from 'react-native-redash/lib/module/v1';\n\ninterface Route {\n  name: string;\n  key: string;\n}\n\nexport function AnimatedTabBar<T extends PresetEnum>(\n  props: AnimatedTabBarProps<T>\n) {\n  // props\n  const {\n    tabs,\n    state,\n    navigation,\n    descriptors,\n    onTabPress,\n    onTabLongPress,\n    style: overrideStyle,\n    safeAreaInsets: overrideSafeAreaInsets,\n    ...rest\n  } = props;\n\n  //#region variables\n  const tabBarContainerRef = useRef<Animated.View>(null);\n  const isReactNavigation5 = useMemo(() => Boolean(state), [state]);\n  const tabBarHeight = useValue<number>(0);\n\n  const CommonActions = useMemo(() => {\n    if (isReactNavigation5) {\n      const {\n        CommonActions: _CommonActions,\n      } = require('@react-navigation/native');\n      return _CommonActions;\n    } else {\n      return undefined;\n    }\n  }, [isReactNavigation5]);\n  const {\n    index: navigationIndex,\n    key: navigationKey,\n    routes,\n  }: {\n    index: number;\n    routes: Route[];\n    key: string;\n  } = useMemo(() => {\n    if (isReactNavigation5) {\n      return state;\n    } else {\n      return {\n        index: navigation!.state.index,\n        routes: navigation!.state.routes,\n        key: '',\n      };\n    }\n  }, [state, navigation, isReactNavigation5]);\n\n  const shouldShowTabBar = useMemo(() => {\n    /**\n     * In React Navigation 4 the router view takes care of\n     * hiding the tab bar.\n     */\n    if (!isReactNavigation5) {\n      return true;\n    }\n    const route = routes[navigationIndex];\n    const { options } = descriptors[route.key];\n    return options.tabBarVisible ?? true;\n  }, [isReactNavigation5, routes, descriptors, navigationIndex]);\n\n  const shouldShowTabBarAnimated = useTabBarVisibility(shouldShowTabBar);\n\n  const getRouteTitle = useCallback(\n    (route: Route) => {\n      if (isReactNavigation5) {\n        const { options } = descriptors[route.key];\n        return options.tabBarLabel !== undefined &&\n          typeof options.tabBarLabel === 'string'\n          ? options.tabBarLabel\n          : options.title !== undefined\n          ? options.title\n          : route.name;\n      } else {\n        return route.key;\n      }\n    },\n    [isReactNavigation5, descriptors]\n  );\n\n  const getRouteTabConfigs = useCallback(\n    (route: Route) => {\n      if (isReactNavigation5) {\n        return tabs[route.name];\n      } else {\n        return tabs[route.key];\n      }\n    },\n    [isReactNavigation5, tabs]\n  );\n\n  const routesWithTabConfig = useMemo(() => {\n    return routes.reduce((result: { [key: string]: {} }, route) => {\n      result[route.key] = {\n        title: getRouteTitle(route),\n        ...getRouteTabConfigs(route),\n      };\n      return result;\n    }, {});\n  }, [routes, getRouteTitle, getRouteTabConfigs]) as any;\n  //#endregion\n\n  //#region styles\n  const { bottom: _safeBottomArea } = useSafeArea();\n  const safeBottomArea = useMemo(\n    () => overrideSafeAreaInsets?.bottom ?? _safeBottomArea,\n    [overrideSafeAreaInsets, _safeBottomArea]\n  );\n  const style = useMemo(\n    () => ({\n      // @ts-ignore\n      ...overrideStyle,\n      paddingBottom: safeBottomArea,\n    }),\n    [overrideStyle, safeBottomArea]\n  );\n  const containerStyle = useMemo(\n    () => ({\n      bottom: 0,\n      left: 0,\n      right: 0,\n      transform: [\n        {\n          translateY: interpolate(shouldShowTabBarAnimated, {\n            inputRange: [0, 1],\n            outputRange: [tabBarHeight, 0],\n            extrapolate: Extrapolate.CLAMP,\n          }),\n        },\n      ],\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n  //#endregion\n\n  //#region callbacks\n  const handleIndexChange = useStableCallback((index: number) => {\n    if (isReactNavigation5) {\n      const focused = index === navigationIndex;\n      const { key, name } = routes[index];\n\n      const event = navigation.emit({\n        type: 'tabPress',\n        target: key,\n        canPreventDefault: true,\n      });\n\n      if (!focused && !event.defaultPrevented) {\n        navigation.dispatch({\n          ...CommonActions.navigate(name),\n          target: navigationKey,\n        });\n      }\n    } else {\n      onTabPress({ route: routes[index] });\n    }\n  });\n  const handleLongPress = useStableCallback((index: number) => {\n    if (isReactNavigation5) {\n      const { key } = routes[index];\n      navigation.emit({\n        type: 'tabLongPress',\n        target: key,\n      });\n    } else {\n      onTabLongPress({ route: routes[index] });\n    }\n  });\n  const handleLayout = useCallback(\n    ({\n      nativeEvent: {\n        layout: { height },\n      },\n    }: LayoutChangeEvent) => {\n      tabBarHeight.setValue(height);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n  //#endregion\n\n  //#region effects\n  useCode(\n    () =>\n      onChange(\n        shouldShowTabBarAnimated,\n        cond(\n          eq(shouldShowTabBarAnimated, 1),\n          call([], () => {\n            if (tabBarContainerRef.current) {\n              // @ts-ignore\n              tabBarContainerRef.current.setNativeProps({\n                style: {\n                  position: 'relative',\n                },\n              });\n            }\n          })\n        )\n      ),\n    []\n  );\n  useEffect(() => {\n    if (!shouldShowTabBar) {\n      if (tabBarContainerRef.current) {\n        // @ts-ignore\n        tabBarContainerRef.current.setNativeProps({\n          style: {\n            position: 'absolute',\n          },\n        });\n      }\n    }\n  }, [shouldShowTabBar]);\n  //#endregion\n\n  // render\n  return (\n    <Animated.View\n      ref={tabBarContainerRef}\n      style={containerStyle}\n      onLayout={handleLayout}\n    >\n      <AnimatedTabBarView\n        index={navigationIndex}\n        onIndexChange={handleIndexChange}\n        onLongPress={handleLongPress}\n        tabs={routesWithTabConfig}\n        style={style}\n        {...rest}\n      />\n    </Animated.View>\n  );\n}\n"]}