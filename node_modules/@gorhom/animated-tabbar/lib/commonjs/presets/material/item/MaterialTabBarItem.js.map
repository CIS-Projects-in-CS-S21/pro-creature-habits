{"version":3,"sources":["MaterialTabBarItem.tsx"],"names":["divide","Extrapolate","Animated","MaterialTabBarItemComponent","props","animatedFocus","animation","inactiveOpacity","inactiveScale","label","labelStyle","labelStyleOverride","icon","iconSize","spacing","innerVerticalSpace","innerHorizontalSpace","outerVerticalSpace","outerHorizontalSpace","labelHeight","outerContainerStyle","styles","outerContainer","paddingHorizontal","paddingVertical","innerContainerStyle","innerContainer","opacity","inputRange","outputRange","extrapolate","CLAMP","transform","x","y","scale","iconContainerStyle","iconContainer","minHeight","minWidth","translateY","marginTop","handleLabelLayout","nativeEvent","layout","height","requestAnimationFrame","setValue","renderIcon","IconComponent","component","color","size","renderLabel","MaterialTabBarItem","isEqual"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AAEA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;AAEA,MAAM;AAAEA,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAA0BC,8BAAhC;;AAEA,MAAMC,2BAA2B,GAAIC,KAAD,IAAoC;AACtE;AACA,QAAM;AACJC,IAAAA,aADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,eAHI;AAIJC,IAAAA,aAJI;AAKJC,IAAAA,KALI;AAMJC,IAAAA,UAAU,EAAEC,kBANR;AAOJC,IAAAA,IAPI;AAQJC,IAAAA,QARI;AASJC,IAAAA;AATI,MAUFV,KAVJ,CAFsE,CActE;;AACA,QAAM;AACJW,IAAAA,kBADI;AAEJC,IAAAA,oBAFI;AAGJC,IAAAA,kBAHI;AAIJC,IAAAA;AAJI,MAKFJ,OALJ,CAfsE,CAqBtE;AAEA;;AACA,QAAMK,WAAW,GAAG,iBAAiB,CAAjB,CAApB,CAxBsE,CAyBtE;AAEA;;AACA,QAAMC,mBAAmB,GAAG,oBAC1B,MAAM,CACJC,eAAOC,cADH,EAEJ;AACEC,IAAAA,iBAAiB,EAAEL,oBADrB;AAEEM,IAAAA,eAAe,EAAEP;AAFnB,GAFI,CADoB,EAQ1B,CAACC,oBAAD,EAAuBD,kBAAvB,CAR0B,CAA5B;AAUA,QAAMQ,mBAAmB,GAAG,oBAC1B,MAAM,CACJJ,eAAOK,cADH,EAEJ;AACEH,IAAAA,iBAAiB,EAAEP,oBADrB;AAEEQ,IAAAA,eAAe,EAAET,kBAFnB;AAGEY,IAAAA,OAAO,EAAE,4BAAYtB,aAAZ,EAA2B;AAClCuB,MAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADsB;AAElCC,MAAAA,WAAW,EAAE,CAACtB,eAAD,EAAkB,CAAlB,CAFqB;AAGlCuB,MAAAA,WAAW,EAAE7B,WAAW,CAAC8B;AAHS,KAA3B,CAHX;AAQEC,IAAAA,SAAS,EAAE,wBACT;AACEC,MAAAA,CAAC,EAAE,CADL;AAEEC,MAAAA,CAAC,EAAE;AAFL,KADS,EAKT;AACEC,MAAAA,KAAK,EAAE,4BAAY9B,aAAZ,EAA2B;AAChCuB,QAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADoB;AAEhCC,QAAAA,WAAW,EAAE,CAACrB,aAAD,EAAgB,CAAhB,CAFmB;AAGhCsB,QAAAA,WAAW,EAAE7B,WAAW,CAAC8B;AAHO,OAA3B;AADT,KALS;AARb,GAFI,CADoB,EA0B1B,CACEf,oBADF,EAEED,kBAFF,EAGEV,aAHF,EAIEE,eAJF,EAKEC,aALF,CA1B0B,CAA5B;AAkCA,QAAM4B,kBAAkB,GAAG,CACzBf,eAAOgB,aADkB;AAGvBC,IAAAA,SAAS,EAAEzB,QAHY;AAIvB0B,IAAAA,QAAQ,EAAE1B;AAJa,KAKnBP,SAAS,KAAK,sBAAd,GACA;AACE0B,IAAAA,SAAS,EAAE,wBACT;AACEC,MAAAA,CAAC,EAAE,CADL;AAEEC,MAAAA,CAAC,EAAE;AAFL,KADS,EAKT;AACEM,MAAAA,UAAU,EAAE,4BAAYnC,aAAZ,EAA2B;AACrCuB,QAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADyB;AAErCC,QAAAA,WAAW,EAAE,CAAC7B,MAAM,CAACmB,WAAD,EAAc,CAAd,CAAP,EAAyB,CAAzB,CAFwB;AAGrCW,QAAAA,WAAW,EAAE7B,WAAW,CAAC8B;AAHY,OAA3B;AADd,KALS;AADb,GADA,GAgBA,EArBmB,EAA3B;AAwBA,QAAMrB,UAAU,GAAG,oBACjB,MAAM,CACJW,eAAOZ,KADH,EAEJE,kBAFI,EAGJ;AACE8B,IAAAA,SAAS,EAAE1B,kBAAkB,GAAG,CADlC;AAEEY,IAAAA,OAAO,EAAErB,SAAS,KAAK,sBAAd,GAAuCD,aAAvC,GAAuD;AAFlE,GAHI,CADW,EASjB,CAACM,kBAAD,EAAqBI,kBAArB,EAAyCT,SAAzC,EAAoDD,aAApD,CATiB,CAAnB,CAhGsE,CA2GtE;AAEA;;AACA,QAAMqC,iBAAiB,GAAG,8BACxB,CAAC;AACCC,IAAAA,WAAW,EAAE;AACXC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AADG;AADd,GAAD,KAKEC,qBAAqB,CAAC,MAAM;AAC1B3B,IAAAA,WAAW,CAAC4B,QAAZ,CAAqBF,MAArB;AACD,GAFoB,CANC,CAA1B,CA9GsE,CAwHtE;AAEA;;AACA,QAAMG,UAAU,GAAG,wBAAY,MAAM;AACnC,UAAMC,aAAkB,GAAGrC,IAAI,CAACsC,SAAhC;AACA,WAAO,OAAOD,aAAP,KAAyB,UAAzB,GACLA,aAAa,CAAC;AACZ5C,MAAAA,aADY;AAEZ8C,MAAAA,KAAK,EAAEvC,IAAI,CAACuC,KAFA;AAGZC,MAAAA,IAAI,EAAEvC;AAHM,KAAD,CADR,gBAOL,6BAAC,aAAD;AACE,MAAA,aAAa,EAAER,aADjB;AAEE,MAAA,KAAK,EAAEO,IAAI,CAACuC,KAFd;AAGE,MAAA,IAAI,EAAEtC;AAHR,MAPF;AAaD,GAfkB,EAehB,CAACD,IAAD,EAAOC,QAAP,EAAiBR,aAAjB,CAfgB,CAAnB;AAgBA,QAAMgD,WAAW,GAAG,wBAAY,MAAM;AACpC,WAAO/C,SAAS,KAAK,UAAd,gBACL,6BAAC,8BAAD,CAAU,IAAV;AAAe,MAAA,QAAQ,EAAEoC,iBAAzB;AAA4C,MAAA,KAAK,EAAEhC;AAAnD,OACGD,KADH,CADK,GAIH,IAJJ;AAKD,GANmB,EAMjB,CAACA,KAAD,EAAQH,SAAR,EAAmBI,UAAnB,EAA+BgC,iBAA/B,CANiB,CAApB;AAOA,sBACE,6BAAC,8BAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAEtB;AAAtB,kBACE,6BAAC,8BAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAEK;AAAtB,kBACE,6BAAC,8BAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAEW;AAAtB,KAA2CY,UAAU,EAArD,CADF,EAEGK,WAAW,EAFd,CADF,CADF;AAQD,CA1JD;;AA4JA,MAAMC,kBAAkB,gBAAG,iBAAKnD,2BAAL,EAAkCoD,eAAlC,CAA3B;eAEeD,kB","sourcesContent":["import React, { useMemo, memo, useCallback } from 'react';\nimport type { LayoutChangeEvent } from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport { transformOrigin, useValue } from 'react-native-redash/lib/module/v1';\n// @ts-ignore ðŸ˜ž\nimport isEqual from 'lodash.isequal';\nimport { useStableCallback } from '../../../hooks';\nimport { interpolate } from '../../../utilities';\nimport type { MaterialTabBarItemProps } from '../types';\nimport { styles } from './styles';\n\nconst { divide, Extrapolate } = Animated;\n\nconst MaterialTabBarItemComponent = (props: MaterialTabBarItemProps) => {\n  // props\n  const {\n    animatedFocus,\n    animation,\n    inactiveOpacity,\n    inactiveScale,\n    label,\n    labelStyle: labelStyleOverride,\n    icon,\n    iconSize,\n    spacing,\n  } = props;\n\n  //#region extract props\n  const {\n    innerVerticalSpace,\n    innerHorizontalSpace,\n    outerVerticalSpace,\n    outerHorizontalSpace,\n  } = spacing;\n  //#endregion\n\n  //#region variables\n  const labelHeight = useValue<number>(0);\n  //#endregion\n\n  //#region styles\n  const outerContainerStyle = useMemo(\n    () => [\n      styles.outerContainer,\n      {\n        paddingHorizontal: outerHorizontalSpace,\n        paddingVertical: outerVerticalSpace,\n      },\n    ],\n    [outerHorizontalSpace, outerVerticalSpace]\n  );\n  const innerContainerStyle = useMemo(\n    () => [\n      styles.innerContainer,\n      {\n        paddingHorizontal: innerHorizontalSpace,\n        paddingVertical: innerVerticalSpace,\n        opacity: interpolate(animatedFocus, {\n          inputRange: [0, 1],\n          outputRange: [inactiveOpacity, 1],\n          extrapolate: Extrapolate.CLAMP,\n        }),\n        transform: transformOrigin(\n          {\n            x: 0,\n            y: 0,\n          },\n          {\n            scale: interpolate(animatedFocus, {\n              inputRange: [0, 1],\n              outputRange: [inactiveScale, 1],\n              extrapolate: Extrapolate.CLAMP,\n            }),\n          }\n        ),\n      },\n    ],\n    [\n      innerHorizontalSpace,\n      innerVerticalSpace,\n      animatedFocus,\n      inactiveOpacity,\n      inactiveScale,\n    ]\n  );\n  const iconContainerStyle = [\n    styles.iconContainer,\n    {\n      minHeight: iconSize,\n      minWidth: iconSize,\n      ...(animation === 'iconWithLabelOnFocus'\n        ? {\n            transform: transformOrigin(\n              {\n                x: 0,\n                y: 0,\n              },\n              {\n                translateY: interpolate(animatedFocus, {\n                  inputRange: [0, 1],\n                  outputRange: [divide(labelHeight, 2), 0],\n                  extrapolate: Extrapolate.CLAMP,\n                }),\n              }\n            ),\n          }\n        : {}),\n    },\n  ];\n  const labelStyle = useMemo(\n    () => [\n      styles.label,\n      labelStyleOverride,\n      {\n        marginTop: innerVerticalSpace / 2,\n        opacity: animation === 'iconWithLabelOnFocus' ? animatedFocus : 1,\n      },\n    ],\n    [labelStyleOverride, innerVerticalSpace, animation, animatedFocus]\n  );\n  //#endregion\n\n  //#region callbacks\n  const handleLabelLayout = useStableCallback(\n    ({\n      nativeEvent: {\n        layout: { height },\n      },\n    }: LayoutChangeEvent) =>\n      requestAnimationFrame(() => {\n        labelHeight.setValue(height);\n      })\n  );\n  //#endregion\n\n  // render\n  const renderIcon = useCallback(() => {\n    const IconComponent: any = icon.component;\n    return typeof IconComponent === 'function' ? (\n      IconComponent({\n        animatedFocus,\n        color: icon.color,\n        size: iconSize,\n      })\n    ) : (\n      <IconComponent\n        animatedFocus={animatedFocus}\n        color={icon.color}\n        size={iconSize}\n      />\n    );\n  }, [icon, iconSize, animatedFocus]);\n  const renderLabel = useCallback(() => {\n    return animation !== 'iconOnly' ? (\n      <Animated.Text onLayout={handleLabelLayout} style={labelStyle}>\n        {label}\n      </Animated.Text>\n    ) : null;\n  }, [label, animation, labelStyle, handleLabelLayout]);\n  return (\n    <Animated.View style={outerContainerStyle}>\n      <Animated.View style={innerContainerStyle}>\n        <Animated.View style={iconContainerStyle}>{renderIcon()}</Animated.View>\n        {renderLabel()}\n      </Animated.View>\n    </Animated.View>\n  );\n};\n\nconst MaterialTabBarItem = memo(MaterialTabBarItemComponent, isEqual);\n\nexport default MaterialTabBarItem;\n"]}