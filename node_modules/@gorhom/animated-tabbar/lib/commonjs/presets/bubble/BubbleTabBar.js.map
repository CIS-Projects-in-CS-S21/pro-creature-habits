{"version":3,"sources":["BubbleTabBar.tsx"],"names":["BubbleTabBarComponent","selectedIndex","tabs","duration","DEFAULT_ITEM_ANIMATION_DURATION","easing","DEFAULT_ITEM_ANIMATION_EASING","itemInnerSpace","itemOuterSpace","itemContainerWidth","DEFAULT_ITEM_CONTAINER_WIDTH","iconSize","DEFAULT_ITEM_ICON_SIZE","isRTL","DEFAULT_ITEM_LAYOUT_DIRECTION","style","containerStyleOverride","animatedOnChange","onLongPress","noop","animatedFocusValues","map","_","index","tabBarItemSpacing","DEFAULT_ITEM_INNER_SPACE","DEFAULT_ITEM_OUTER_SPACE","containerStyle","styles","container","flexDirection","key","title","configs","BubbleTabBar","isEqual"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AASA;;AAIA;;AAGA;;;;;;;;;;;;;;AAEA,MAAMA,qBAAqB,GAAG,CAAC;AAC7BC,EAAAA,aAD6B;AAE7BC,EAAAA,IAF6B;AAG7BC,EAAAA,QAAQ,GAAGC,0CAHkB;AAI7BC,EAAAA,MAAM,GAAGC,wCAJoB;AAK7BC,EAAAA,cAL6B;AAM7BC,EAAAA,cAN6B;AAO7BC,EAAAA,kBAAkB,GAAGC,uCAPQ;AAQ7BC,EAAAA,QAAQ,GAAGC,iCARkB;AAS7BC,EAAAA,KAAK,GAAGC,wCATqB;AAU7BC,EAAAA,KAAK,EAAEC,sBAVsB;AAW7BC,EAAAA,gBAX6B;AAY7BC,EAAAA,WAAW,GAAGC;AAZe,CAAD,KAaqC;AACjE;AACA,QAAMC,mBAAmB,GAAG,oBAC1B,MACElB,IAAI,CAACmB,GAAL,CAAS,CAACC,CAAD,EAAIC,KAAJ,KACP;AACA,2CAA6B;AAC3BA,IAAAA,KAD2B;AAE3BtB,IAAAA,aAF2B;AAG3BE,IAAAA,QAH2B;AAI3BE,IAAAA;AAJ2B,GAA7B,CAFF,CAFwB,EAW1B;AACA,GAACH,IAAD,EAAOC,QAAP,EAAiBE,MAAjB,CAZ0B,CAA5B;AAcA,QAAMmB,iBAAiB,GAAG,iCACxBjB,cADwB,EAExBC,cAFwB,EAGxBiB,mCAHwB,EAIxBC,mCAJwB,CAA1B,CAhBiE,CAsBjE;AAEA;;AACA,QAAMC,cAAc,GAAG,oBACrB,MAAM,CACJC,eAAOC,SADH,EAEJb,sBAFI,EAGJ;AACEc,IAAAA,aAAa,EAAEjB,KAAK,GAAG,aAAH,GAAmB;AADzC,GAHI,CADe,EAQrB,CAACG,sBAAD,EAAyBH,KAAzB,CARqB,CAAvB,CAzBiE,CAmCjE;AAEA;;AACA,sBACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEc;AAAb,KACGzB,IAAI,CAACmB,GAAL,CAAS,OAA6BE,KAA7B,KAAuC;AAAA,QAAtC;AAAEQ,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAAsC;AAAA,QAArBC,OAAqB;;AAC/C,wBACE,6BAAC,kBAAD;AACE,MAAA,GAAG,EAAEF,GADP;AAEE,MAAA,KAAK,EAAER,KAFT;AAGE,MAAA,aAAa,EAAEtB,aAHjB;AAIE,MAAA,kBAAkB,EAAE+B,KAJtB;AAKE,MAAA,gBAAgB,EAAEf,gBALpB;AAME,MAAA,WAAW,EAAEC;AANf,oBAQE,6BAAC,aAAD;AACE,MAAA,KAAK,EAAEK,KADT;AAEE,MAAA,aAAa,EAAEH,mBAAmB,CAACG,KAAD,CAFpC;AAGE,MAAA,KAAK,EAAES,KAHT;AAIE,MAAA,OAAO,EAAER,iBAJX;AAKE,MAAA,kBAAkB,EAAEf,kBALtB;AAME,MAAA,QAAQ,EAAEE,QANZ;AAOE,MAAA,KAAK,EAAEE;AAPT,OAQMoB,OARN,EARF,CADF;AAqBD,GAtBA,CADH,CADF;AA2BD,CA9ED;;AAgFA,MAAMC,YAAY,gBAAG,iBAAKlC,qBAAL,EAA4BmC,eAA5B,CAArB;eAEeD,Y","sourcesContent":["import React, { useMemo, memo } from 'react';\nimport { View, ViewStyle, StyleProp } from 'react-native';\n// @ts-ignore ðŸ˜ž\nimport isEqual from 'lodash.isequal';\nimport BubbleTabBarItem from './item';\nimport RawButton from '../../components/rawButton';\nimport {\n  DEFAULT_ITEM_ANIMATION_DURATION,\n  DEFAULT_ITEM_ANIMATION_EASING,\n  DEFAULT_ITEM_INNER_SPACE,\n  DEFAULT_ITEM_OUTER_SPACE,\n  DEFAULT_ITEM_ICON_SIZE,\n  DEFAULT_ITEM_LAYOUT_DIRECTION,\n  DEFAULT_ITEM_CONTAINER_WIDTH,\n} from './constants';\nimport {\n  useTabBarItemFocusTransition,\n  useTabBarItemSpacing,\n} from '../../hooks';\nimport { noop } from '../../utilities';\nimport type { TabBarViewProps } from '../../types';\nimport type { BubbleTabBarConfig, BubbleTabBarItemConfig } from './types';\nimport { styles } from './styles';\n\nconst BubbleTabBarComponent = ({\n  selectedIndex,\n  tabs,\n  duration = DEFAULT_ITEM_ANIMATION_DURATION,\n  easing = DEFAULT_ITEM_ANIMATION_EASING,\n  itemInnerSpace,\n  itemOuterSpace,\n  itemContainerWidth = DEFAULT_ITEM_CONTAINER_WIDTH,\n  iconSize = DEFAULT_ITEM_ICON_SIZE,\n  isRTL = DEFAULT_ITEM_LAYOUT_DIRECTION,\n  style: containerStyleOverride,\n  animatedOnChange,\n  onLongPress = noop,\n}: TabBarViewProps<BubbleTabBarConfig, BubbleTabBarItemConfig>) => {\n  //#region variables\n  const animatedFocusValues = useMemo(\n    () =>\n      tabs.map((_, index) =>\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useTabBarItemFocusTransition({\n          index,\n          selectedIndex,\n          duration,\n          easing,\n        })\n      ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [tabs, duration, easing]\n  );\n  const tabBarItemSpacing = useTabBarItemSpacing(\n    itemInnerSpace,\n    itemOuterSpace,\n    DEFAULT_ITEM_INNER_SPACE,\n    DEFAULT_ITEM_OUTER_SPACE\n  );\n  //#endregion\n\n  //#region styles\n  const containerStyle = useMemo<StyleProp<ViewStyle>>(\n    () => [\n      styles.container,\n      containerStyleOverride,\n      {\n        flexDirection: isRTL ? 'row-reverse' : 'row',\n      },\n    ],\n    [containerStyleOverride, isRTL]\n  );\n  //#endregion\n\n  // render\n  return (\n    <View style={containerStyle}>\n      {tabs.map(({ key, title, ...configs }, index) => {\n        return (\n          <RawButton\n            key={key}\n            index={index}\n            selectedIndex={selectedIndex}\n            accessibilityLabel={title}\n            animatedOnChange={animatedOnChange}\n            onLongPress={onLongPress}\n          >\n            <BubbleTabBarItem\n              index={index}\n              animatedFocus={animatedFocusValues[index]}\n              label={title}\n              spacing={tabBarItemSpacing}\n              itemContainerWidth={itemContainerWidth}\n              iconSize={iconSize}\n              isRTL={isRTL}\n              {...configs}\n            />\n          </RawButton>\n        );\n      })}\n    </View>\n  );\n};\n\nconst BubbleTabBar = memo(BubbleTabBarComponent, isEqual);\n\nexport default BubbleTabBar;\n"]}