{"version":3,"sources":["FlashyTabBarItem.tsx"],"names":["AnimatedSvg","Animated","createAnimatedComponent","Svg","AnimatedCircle","Circle","add","sub","max","divide","multiply","Extrapolate","FlashyTabBarItemComponent","animatedFocus","label","icon","labelStyle","labelStyleOverride","spacing","iconSize","indicator","isRTL","innerVerticalSpace","innerHorizontalSpace","outerVerticalSpace","outerHorizontalSpace","size","_indicatorSize","color","_indicatorColor","visible","_indicatorVisible","undefined","indicatorVisibility","indicatorColor","indicatorSize","DEFAULT_INDICATOR_VISIBILITY","DEFAULT_INDICATOR_COLOR","DEFAULT_INDICATOR_SIZE","labelWidth","labelHeight","containerHeight","containerWidth","outerContainerStyle","styles","outerContainer","paddingHorizontal","paddingVertical","containerStyle","container","width","height","labelContainerStyle","labelContainer","transform","translateY","inputRange","outputRange","extrapolate","CLAMP","labelMaskStyle","mask","x","y","rotate","iconContainerStyle","iconContainer","iconStyle","minHeight","minWidth","iconMaskStyle","animatedIndicatorSize","handleLabelLayout","nativeEvent","layout","requestAnimationFrame","setValue","renderIcon","IconComponent","component","root","left","top","FlashyTabBarItem","isEqual"],"mappings":"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","sourcesContent":["import React, { useMemo, memo } from 'react';\nimport { View, Text, ViewStyle, LayoutChangeEvent } from 'react-native';\nimport Animated from 'react-native-reanimated';\n// @ts-ignore ðŸ˜ž\nimport MaskedView from '@react-native-community/masked-view';\nimport { Svg, Circle, SvgProps, CircleProps } from 'react-native-svg';\nimport {\n  useValues,\n  transformOrigin,\n  toRad,\n} from 'react-native-redash/lib/module/v1';\n// @ts-ignore ðŸ˜ž\nimport isEqual from 'lodash.isequal';\nimport {\n  DEFAULT_INDICATOR_VISIBILITY,\n  DEFAULT_INDICATOR_SIZE,\n  DEFAULT_INDICATOR_COLOR,\n} from '../constants';\nimport { interpolate } from '../../../utilities';\nimport type { FlashyTabBarItemProps } from '../types';\nimport { styles } from './styles';\n\nconst AnimatedSvg = Animated.createAnimatedComponent(\n  Svg\n) as React.ComponentClass<Animated.AnimateProps<ViewStyle, SvgProps>, any>;\nconst AnimatedCircle = Animated.createAnimatedComponent(\n  Circle\n) as React.ComponentClass<\n  Animated.AnimateProps<ViewStyle, CircleProps & { style?: any }>,\n  any\n>;\n\nconst { add, sub, max, divide, multiply, Extrapolate } = Animated;\n\nconst FlashyTabBarItemComponent = ({\n  animatedFocus,\n  label,\n  icon,\n  labelStyle: labelStyleOverride,\n  spacing,\n  iconSize,\n  indicator,\n  isRTL,\n}: FlashyTabBarItemProps) => {\n  //#region extract props\n  const {\n    innerVerticalSpace,\n    innerHorizontalSpace,\n    outerVerticalSpace,\n    outerHorizontalSpace,\n  } = spacing;\n  const {\n    size: _indicatorSize,\n    color: _indicatorColor,\n    visible: _indicatorVisible,\n  } = indicator || {\n    size: undefined,\n    color: undefined,\n    visible: undefined,\n  };\n  const { indicatorVisibility, indicatorColor, indicatorSize } = useMemo(() => {\n    return {\n      indicatorVisibility: _indicatorVisible ?? DEFAULT_INDICATOR_VISIBILITY,\n      indicatorColor:\n        _indicatorColor ?? labelStyleOverride?.color ?? DEFAULT_INDICATOR_COLOR,\n      indicatorSize: _indicatorSize ?? DEFAULT_INDICATOR_SIZE,\n    };\n  }, [_indicatorVisible, _indicatorColor, _indicatorSize, labelStyleOverride]);\n  //#endregion\n\n  //#region variables\n  const [labelWidth, labelHeight] = useValues<number>(0, 0);\n  const containerHeight = useMemo(() => iconSize + innerVerticalSpace * 2, [\n    iconSize,\n    innerVerticalSpace,\n  ]);\n  const containerWidth = max(\n    add(labelWidth, innerHorizontalSpace * 2),\n    iconSize + innerHorizontalSpace * 2\n  );\n  //#endregion\n\n  //#region styles\n  const outerContainerStyle = [\n    styles.outerContainer,\n    {\n      paddingHorizontal: outerHorizontalSpace,\n      paddingVertical: outerVerticalSpace,\n    },\n  ];\n  const containerStyle = [\n    styles.container,\n    {\n      width: containerWidth,\n      height: containerHeight,\n    },\n  ];\n  // label styles\n  const labelContainerStyle = [\n    styles.labelContainer,\n    {\n      transform: [\n        {\n          translateY: interpolate(animatedFocus, {\n            inputRange: [0, 1],\n            outputRange: [\n              multiply(labelHeight, 0.5),\n              multiply(divide(labelHeight, 2), -1),\n            ],\n            extrapolate: Extrapolate.CLAMP,\n          }),\n        },\n      ] as Animated.AnimatedTransform,\n    },\n  ];\n  const labelStyle = [styles.label, labelStyleOverride];\n  const labelMaskStyle = [\n    styles.mask,\n    {\n      width: containerWidth,\n      height: multiply(labelHeight, 1.5),\n      transform: transformOrigin(\n        {\n          x: 0,\n          y: 0,\n        },\n        {\n          translateY: interpolate(animatedFocus, {\n            inputRange: [0.25, 1],\n            outputRange: [\n              0,\n              divide(sub(containerHeight, multiply(labelHeight, 1.5)), 2),\n            ],\n            extrapolate: Extrapolate.CLAMP,\n          }),\n          rotate: interpolate(animatedFocus, {\n            inputRange: [0, 0.5],\n            outputRange: [toRad(0), toRad(isRTL ? -15 : 15)],\n            extrapolate: Extrapolate.CLAMP,\n          }),\n        }\n      ) as Animated.AnimatedTransform,\n    },\n  ];\n  // icon\n  const iconContainerStyle = [\n    styles.iconContainer,\n    {\n      transform: [\n        {\n          translateY: interpolate(animatedFocus, {\n            inputRange: [0, 1],\n            outputRange: [iconSize * -0.5, iconSize * -1.5],\n            extrapolate: Extrapolate.CLAMP,\n          }),\n        },\n      ] as Animated.AnimatedTransform,\n    },\n  ];\n  const iconStyle = [\n    styles.icon,\n    {\n      minHeight: iconSize,\n      minWidth: iconSize,\n    },\n  ];\n  const iconMaskStyle = [\n    styles.mask,\n    {\n      width: containerWidth,\n      height: iconSize,\n      transform: transformOrigin(\n        {\n          x: 0,\n          y: 0,\n        },\n        {\n          translateY: interpolate(animatedFocus, {\n            inputRange: [0, 1],\n            outputRange: [innerVerticalSpace, iconSize * -1.5],\n            extrapolate: Extrapolate.CLAMP,\n          }),\n          rotate: interpolate(animatedFocus, {\n            inputRange: [0, 0.5],\n            outputRange: [0, toRad(isRTL ? -15 : 15)],\n            extrapolate: Extrapolate.CLAMP,\n          }),\n        }\n      ) as Animated.AnimatedTransform,\n    },\n  ];\n  // indicator\n  const animatedIndicatorSize = interpolate(animatedFocus, {\n    inputRange: [0.5, 1],\n    outputRange: [0, indicatorSize / 2],\n    extrapolate: Extrapolate.CLAMP,\n  });\n  //#endregion\n\n  // callbacks\n  const handleLabelLayout = ({\n    nativeEvent: {\n      layout: { height, width },\n    },\n  }: LayoutChangeEvent) =>\n    requestAnimationFrame(() => {\n      labelWidth.setValue(width);\n      labelHeight.setValue(height);\n    });\n\n  // render\n  const renderIcon = () => {\n    const IconComponent: any = icon.component;\n    return typeof IconComponent === 'function' ? (\n      IconComponent({\n        animatedFocus,\n        color: icon.color,\n        size: iconSize,\n      })\n    ) : (\n      <IconComponent\n        animatedFocus={animatedFocus}\n        color={icon.color}\n        size={iconSize}\n      />\n    );\n  };\n\n  return (\n    <Animated.View style={outerContainerStyle}>\n      <Animated.View style={containerStyle}>\n        <MaskedView\n          style={styles.root}\n          maskElement={<Animated.View style={iconMaskStyle} />}\n        >\n          <Animated.View pointerEvents=\"none\" style={iconContainerStyle}>\n            <View style={iconStyle}>{renderIcon()}</View>\n          </Animated.View>\n        </MaskedView>\n        <MaskedView\n          style={styles.root}\n          maskElement={<Animated.View style={labelMaskStyle} />}\n        >\n          <Animated.View style={labelContainerStyle}>\n            <Text\n              numberOfLines={1}\n              style={labelStyle}\n              onLayout={handleLabelLayout}\n            >\n              {label}\n            </Text>\n          </Animated.View>\n        </MaskedView>\n        {indicatorVisibility && (\n          <AnimatedSvg\n            style={[\n              styles.root,\n              {\n                left: sub(divide(containerWidth, 2), indicatorSize / 2),\n                top: sub(containerHeight, indicatorSize),\n              },\n            ]}\n            width={indicatorSize}\n            height={indicatorSize}\n          >\n            <AnimatedCircle\n              r={animatedIndicatorSize}\n              translateY={indicatorSize / 2}\n              translateX={indicatorSize / 2}\n              fill={indicatorColor}\n            />\n          </AnimatedSvg>\n        )}\n      </Animated.View>\n    </Animated.View>\n  );\n};\n\nconst FlashyTabBarItem = memo(FlashyTabBarItemComponent, isEqual);\n\nexport default FlashyTabBarItem;\n"]}