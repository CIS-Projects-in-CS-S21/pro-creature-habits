{"version":3,"sources":["useTabBarItemFocusTransition.ts"],"names":["Animated","block","cond","onChange","Value","Clock","set","eq","neq","not","or","timing","and","startClock","clockRunning","stopClock","useTabBarItemFocusTransition","index","selectedIndex","duration","easing","clock","state","finished","frameTime","position","time","config","toValue","shouldAnimateIn","shouldAnimateOut","shouldAnimate","finishTiming"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,yBAArB;AAGA,MAAM;AACJC,EAAAA,KADI;AAEJC,EAAAA,IAFI;AAGJC,EAAAA,QAHI;AAIJC,EAAAA,KAJI;AAKJC,EAAAA,KALI;AAMJC,EAAAA,GANI;AAOJC,EAAAA,EAPI;AAQJC,EAAAA,GARI;AASJC,EAAAA,GATI;AAUJC,EAAAA,EAVI;AAWJC,EAAAA,MAXI;AAYJC,EAAAA,GAZI;AAaJC,EAAAA,UAbI;AAcJC,EAAAA,YAdI;AAeJC,EAAAA;AAfI,IAgBFf,QAhBJ;AAwBA,OAAO,MAAMgB,4BAA4B,GAAG,CAAC;AAC3CC,EAAAA,KAD2C;AAE3CC,EAAAA,aAF2C;AAG3CC,EAAAA,QAH2C;AAI3CC,EAAAA;AAJ2C,CAAD,KAKH;AACvC;AACA,QAAMC,KAAK,GAAG,IAAIhB,KAAJ,EAAd;AACA,QAAMiB,KAAK,GAAG;AACZC,IAAAA,QAAQ,EAAE,IAAInB,KAAJ,CAAU,CAAV,CADE;AAEZoB,IAAAA,SAAS,EAAE,IAAIpB,KAAJ,CAAU,CAAV,CAFC;AAGZqB,IAAAA,QAAQ,EAAE,IAAIrB,KAAJ,CAAU,CAAV,CAHE;AAIZsB,IAAAA,IAAI,EAAE,IAAItB,KAAJ,CAAU,CAAV;AAJM,GAAd;AAMA,QAAMuB,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE,IAAIxB,KAAJ,CAAU,CAAV,CADI;AAEbgB,IAAAA,MAFa;AAGbD,IAAAA;AAHa,GAAf,CATuC,CAcvC;AAEA;;AACA,QAAMU,eAAe,GAAGjB,GAAG,CAACL,EAAE,CAACW,aAAD,EAAgBD,KAAhB,CAAH,EAA2BT,GAAG,CAACc,KAAK,CAACG,QAAP,EAAiB,CAAjB,CAA9B,CAA3B;AACA,QAAMK,gBAAgB,GAAGlB,GAAG,CAC1BJ,GAAG,CAACU,aAAD,EAAgBD,KAAhB,CADuB,EAE1BT,GAAG,CAACc,KAAK,CAACG,QAAP,EAAiB,CAAjB,CAFuB,CAA5B;AAIA,QAAMM,aAAa,GAAGrB,EAAE,CAACmB,eAAD,EAAkBC,gBAAlB,CAAxB,CAtBuC,CAuBvC;;AACA,QAAME,YAAY,GAAG,CACnBjB,SAAS,CAACM,KAAD,CADU,EAEnBf,GAAG,CAACgB,KAAK,CAACC,QAAP,EAAiB,CAAjB,CAFgB,EAGnBjB,GAAG,CAACgB,KAAK,CAACE,SAAP,EAAkB,CAAlB,CAHgB,EAInBlB,GAAG,CAACgB,KAAK,CAACI,IAAP,EAAa,CAAb,CAJgB,CAArB;AAMA,SAAOzB,KAAK,CAAC,CACXE,QAAQ,CAACe,aAAD,EAAgBc,YAAhB,CADG,EAEX9B,IAAI,CAAC6B,aAAD,EAAgB,CAClB7B,IAAI,CAACU,GAAG,CAACH,GAAG,CAACK,YAAY,CAACO,KAAD,CAAb,CAAJ,EAA2BZ,GAAG,CAACa,KAAK,CAACC,QAAP,CAA9B,CAAJ,EAAqD,CACvDjB,GAAG,CAACgB,KAAK,CAACE,SAAP,EAAkB,CAAlB,CADoD,EAEvDlB,GAAG,CAACgB,KAAK,CAACI,IAAP,EAAa,CAAb,CAFoD,EAGvDpB,GAAG,CAACgB,KAAK,CAACC,QAAP,EAAiB,CAAjB,CAHoD,EAIvDjB,GAAG,CAACqB,MAAM,CAACC,OAAR,EAAiBC,eAAjB,CAJoD,EAKvDhB,UAAU,CAACQ,KAAD,CAL6C,CAArD,CADc,EAQlBV,MAAM,CAACU,KAAD,EAAQC,KAAR,EAAeK,MAAf,CARY,EASlBzB,IAAI,CAACoB,KAAK,CAACC,QAAP,EAAiBS,YAAjB,CATc,CAAhB,CAFO,EAaXV,KAAK,CAACG,QAbK,CAAD,CAAZ;AAeD,CAlDM","sourcesContent":["import Animated from 'react-native-reanimated';\nimport type { TabBarConfigurableProps } from '../types';\n\nconst {\n  block,\n  cond,\n  onChange,\n  Value,\n  Clock,\n  set,\n  eq,\n  neq,\n  not,\n  or,\n  timing,\n  and,\n  startClock,\n  clockRunning,\n  stopClock,\n} = Animated;\n\ninterface useTabBarItemFocusTransitionProps\n  extends Required<Pick<TabBarConfigurableProps, 'duration' | 'easing'>> {\n  index: number;\n  selectedIndex: Animated.Value<number>;\n}\n\nexport const useTabBarItemFocusTransition = ({\n  index,\n  selectedIndex,\n  duration,\n  easing,\n}: useTabBarItemFocusTransitionProps) => {\n  //#region variables\n  const clock = new Clock();\n  const state = {\n    finished: new Value(0),\n    frameTime: new Value(0),\n    position: new Value(0),\n    time: new Value(0),\n  };\n  const config = {\n    toValue: new Value(0),\n    easing,\n    duration,\n  };\n  //#endregion\n\n  //#region conditions\n  const shouldAnimateIn = and(eq(selectedIndex, index), neq(state.position, 1));\n  const shouldAnimateOut = and(\n    neq(selectedIndex, index),\n    neq(state.position, 0)\n  );\n  const shouldAnimate = or(shouldAnimateIn, shouldAnimateOut);\n  //#endregion\n  const finishTiming = [\n    stopClock(clock),\n    set(state.finished, 0),\n    set(state.frameTime, 0),\n    set(state.time, 0),\n  ];\n  return block([\n    onChange(selectedIndex, finishTiming),\n    cond(shouldAnimate, [\n      cond(and(not(clockRunning(clock)), not(state.finished)), [\n        set(state.frameTime, 0),\n        set(state.time, 0),\n        set(state.finished, 0),\n        set(config.toValue, shouldAnimateIn),\n        startClock(clock),\n      ]),\n      timing(clock, state, config),\n      cond(state.finished, finishTiming),\n    ]),\n    state.position,\n  ]);\n};\n"]}