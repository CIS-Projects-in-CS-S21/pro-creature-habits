{"version":3,"sources":["BubbleTabBar.tsx"],"names":["React","useMemo","memo","View","isEqual","BubbleTabBarItem","RawButton","DEFAULT_ITEM_ANIMATION_DURATION","DEFAULT_ITEM_ANIMATION_EASING","DEFAULT_ITEM_INNER_SPACE","DEFAULT_ITEM_OUTER_SPACE","DEFAULT_ITEM_ICON_SIZE","DEFAULT_ITEM_LAYOUT_DIRECTION","DEFAULT_ITEM_CONTAINER_WIDTH","useTabBarItemFocusTransition","useTabBarItemSpacing","noop","styles","BubbleTabBarComponent","selectedIndex","tabs","duration","easing","itemInnerSpace","itemOuterSpace","itemContainerWidth","iconSize","isRTL","style","containerStyleOverride","animatedOnChange","onLongPress","animatedFocusValues","map","_","index","tabBarItemSpacing","containerStyle","container","flexDirection","key","title","configs","BubbleTabBar"],"mappings":"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","sourcesContent":["import React, { useMemo, memo } from 'react';\nimport { View, ViewStyle, StyleProp } from 'react-native';\n// @ts-ignore ðŸ˜ž\nimport isEqual from 'lodash.isequal';\nimport BubbleTabBarItem from './item';\nimport RawButton from '../../components/rawButton';\nimport {\n  DEFAULT_ITEM_ANIMATION_DURATION,\n  DEFAULT_ITEM_ANIMATION_EASING,\n  DEFAULT_ITEM_INNER_SPACE,\n  DEFAULT_ITEM_OUTER_SPACE,\n  DEFAULT_ITEM_ICON_SIZE,\n  DEFAULT_ITEM_LAYOUT_DIRECTION,\n  DEFAULT_ITEM_CONTAINER_WIDTH,\n} from './constants';\nimport {\n  useTabBarItemFocusTransition,\n  useTabBarItemSpacing,\n} from '../../hooks';\nimport { noop } from '../../utilities';\nimport type { TabBarViewProps } from '../../types';\nimport type { BubbleTabBarConfig, BubbleTabBarItemConfig } from './types';\nimport { styles } from './styles';\n\nconst BubbleTabBarComponent = ({\n  selectedIndex,\n  tabs,\n  duration = DEFAULT_ITEM_ANIMATION_DURATION,\n  easing = DEFAULT_ITEM_ANIMATION_EASING,\n  itemInnerSpace,\n  itemOuterSpace,\n  itemContainerWidth = DEFAULT_ITEM_CONTAINER_WIDTH,\n  iconSize = DEFAULT_ITEM_ICON_SIZE,\n  isRTL = DEFAULT_ITEM_LAYOUT_DIRECTION,\n  style: containerStyleOverride,\n  animatedOnChange,\n  onLongPress = noop,\n}: TabBarViewProps<BubbleTabBarConfig, BubbleTabBarItemConfig>) => {\n  //#region variables\n  const animatedFocusValues = useMemo(\n    () =>\n      tabs.map((_, index) =>\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useTabBarItemFocusTransition({\n          index,\n          selectedIndex,\n          duration,\n          easing,\n        })\n      ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [tabs, duration, easing]\n  );\n  const tabBarItemSpacing = useTabBarItemSpacing(\n    itemInnerSpace,\n    itemOuterSpace,\n    DEFAULT_ITEM_INNER_SPACE,\n    DEFAULT_ITEM_OUTER_SPACE\n  );\n  //#endregion\n\n  //#region styles\n  const containerStyle = useMemo<StyleProp<ViewStyle>>(\n    () => [\n      styles.container,\n      containerStyleOverride,\n      {\n        flexDirection: isRTL ? 'row-reverse' : 'row',\n      },\n    ],\n    [containerStyleOverride, isRTL]\n  );\n  //#endregion\n\n  // render\n  return (\n    <View style={containerStyle}>\n      {tabs.map(({ key, title, ...configs }, index) => {\n        return (\n          <RawButton\n            key={key}\n            index={index}\n            selectedIndex={selectedIndex}\n            accessibilityLabel={title}\n            animatedOnChange={animatedOnChange}\n            onLongPress={onLongPress}\n          >\n            <BubbleTabBarItem\n              index={index}\n              animatedFocus={animatedFocusValues[index]}\n              label={title}\n              spacing={tabBarItemSpacing}\n              itemContainerWidth={itemContainerWidth}\n              iconSize={iconSize}\n              isRTL={isRTL}\n              {...configs}\n            />\n          </RawButton>\n        );\n      })}\n    </View>\n  );\n};\n\nconst BubbleTabBar = memo(BubbleTabBarComponent, isEqual);\n\nexport default BubbleTabBar;\n"]}