{"version":3,"sources":["MaterialTabBar.tsx"],"names":["React","useMemo","memo","useState","View","isEqual","MaterialTabBarItem","MaterialTabBarRipple","RawButton","DEFAULT_ITEM_ANIMATION_DURATION","DEFAULT_ITEM_ANIMATION_EASING","DEFAULT_ITEM_INNER_SPACE","DEFAULT_ITEM_OUTER_SPACE","DEFAULT_ITEM_ICON_SIZE","DEFAULT_ITEM_LAYOUT_DIRECTION","DEFAULT_ITEM_CONTAINER_WIDTH","DEFAULT_CONFIG_ANIMATION","DEFAULT_CONFIG_INACTIVE_OPACITY","DEFAULT_CONFIG_INACTIVE_SCALE","useTabBarItemFocusTransition","useTabBarItemSpacing","useStableCallback","noop","styles","MaterialTabBarComponent","selectedIndex","tabs","duration","easing","animation","inactiveOpacity","inactiveScale","itemInnerSpace","itemOuterSpace","itemContainerWidth","iconSize","isRTL","style","containerStyleOverride","onLongPress","animatedOnChange","containerLayout","setContainerLayout","width","height","tabsPosition","setTabsPosition","animatedFocusValues","map","_","index","tabBarItemSpacing","containerStyle","container","flexDirection","backgroundColor","_value","ripple","color","rawButtonStyle","flex","handleTabItemLayout","position","state","handleContainerLayout","nativeEvent","layout","Object","keys","length","values","key","title","configs","MaterialTabBar"],"mappings":"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","sourcesContent":["import React, { useMemo, memo, useState } from 'react';\nimport {\n  View,\n  ViewStyle,\n  StyleProp,\n  LayoutRectangle,\n  LayoutChangeEvent,\n} from 'react-native';\n// @ts-ignore ðŸ˜ž\nimport isEqual from 'lodash.isequal';\nimport MaterialTabBarItem from './item';\nimport MaterialTabBarRipple from './ripple';\nimport RawButton from '../../components/rawButton';\nimport {\n  DEFAULT_ITEM_ANIMATION_DURATION,\n  DEFAULT_ITEM_ANIMATION_EASING,\n  DEFAULT_ITEM_INNER_SPACE,\n  DEFAULT_ITEM_OUTER_SPACE,\n  DEFAULT_ITEM_ICON_SIZE,\n  DEFAULT_ITEM_LAYOUT_DIRECTION,\n  DEFAULT_ITEM_CONTAINER_WIDTH,\n  DEFAULT_CONFIG_ANIMATION,\n  DEFAULT_CONFIG_INACTIVE_OPACITY,\n  DEFAULT_CONFIG_INACTIVE_SCALE,\n} from './constants';\nimport {\n  useTabBarItemFocusTransition,\n  useTabBarItemSpacing,\n  useStableCallback,\n} from '../../hooks';\nimport { noop } from '../../utilities';\nimport type { TabBarViewProps } from '../../types';\nimport type { MaterialTabBarConfig, MaterialTabBarItemConfig } from './types';\nimport { styles } from './styles';\n\nconst MaterialTabBarComponent = ({\n  selectedIndex,\n  tabs,\n  duration = DEFAULT_ITEM_ANIMATION_DURATION,\n  easing = DEFAULT_ITEM_ANIMATION_EASING,\n  animation = DEFAULT_CONFIG_ANIMATION,\n  inactiveOpacity = DEFAULT_CONFIG_INACTIVE_OPACITY,\n  inactiveScale = DEFAULT_CONFIG_INACTIVE_SCALE,\n  itemInnerSpace,\n  itemOuterSpace,\n  itemContainerWidth = DEFAULT_ITEM_CONTAINER_WIDTH,\n  iconSize = DEFAULT_ITEM_ICON_SIZE,\n  isRTL = DEFAULT_ITEM_LAYOUT_DIRECTION,\n  style: containerStyleOverride,\n  onLongPress = noop,\n  animatedOnChange,\n}: TabBarViewProps<MaterialTabBarConfig, MaterialTabBarItemConfig>) => {\n  //#region variables\n  const [containerLayout, setContainerLayout] = useState({\n    width: 0,\n    height: 0,\n  });\n  const [tabsPosition, setTabsPosition] = useState<{\n    [key: number]: LayoutRectangle;\n  }>([]);\n  const animatedFocusValues = useMemo(\n    () =>\n      tabs.map((_, index) =>\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useTabBarItemFocusTransition({\n          index,\n          selectedIndex,\n          duration,\n          easing,\n        })\n      ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [tabs, duration, easing]\n  );\n  const tabBarItemSpacing = useTabBarItemSpacing(\n    itemInnerSpace,\n    itemOuterSpace,\n    DEFAULT_ITEM_INNER_SPACE,\n    DEFAULT_ITEM_OUTER_SPACE\n  );\n  //#endregion\n\n  //#region Styles\n  const containerStyle = useMemo<StyleProp<ViewStyle>>(\n    () => [\n      styles.container,\n      containerStyleOverride,\n      {\n        flexDirection: isRTL ? 'row-reverse' : 'row',\n        // @ts-ignore\n        backgroundColor: tabs[selectedIndex._value ?? 0].ripple.color,\n      },\n    ],\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [containerStyleOverride, isRTL]\n  );\n  const rawButtonStyle = useMemo(\n    () => (itemContainerWidth === 'fill' ? { flex: 1 } : {}),\n    [itemContainerWidth]\n  );\n  //#endregion\n\n  //#region callbacks\n  const handleTabItemLayout = useStableCallback((index, position) => {\n    setTabsPosition(state => {\n      return { ...state, [index]: position };\n    });\n  });\n  const handleContainerLayout = useStableCallback(\n    ({\n      nativeEvent: {\n        layout: { height, width },\n      },\n    }: LayoutChangeEvent) => {\n      setContainerLayout({ height, width });\n    }\n  );\n  //#endregion\n\n  // render\n  return (\n    <View style={containerStyle} onLayout={handleContainerLayout}>\n      {Object.keys(tabsPosition).length === tabs.length ? (\n        <MaterialTabBarRipple\n          tabs={tabs}\n          tabItemPositions={Object.values(tabsPosition)}\n          selectedIndex={selectedIndex}\n          animatedFocusValues={animatedFocusValues}\n          width={containerLayout.width}\n          height={containerLayout.height}\n        />\n      ) : null}\n      {tabs.map(({ key, title, ...configs }, index) => {\n        return (\n          <RawButton\n            key={key}\n            index={index}\n            selectedIndex={selectedIndex}\n            accessibilityLabel={title}\n            style={rawButtonStyle}\n            animatedOnChange={animatedOnChange}\n            onLayout={handleTabItemLayout}\n            onLongPress={onLongPress}\n          >\n            <MaterialTabBarItem\n              index={index}\n              animatedFocus={animatedFocusValues[index]}\n              animation={animation}\n              inactiveOpacity={inactiveOpacity}\n              inactiveScale={inactiveScale}\n              label={title}\n              spacing={tabBarItemSpacing}\n              itemContainerWidth={itemContainerWidth}\n              iconSize={iconSize}\n              isRTL={isRTL}\n              {...configs}\n            />\n          </RawButton>\n        );\n      })}\n    </View>\n  );\n};\n\nconst MaterialTabBar = memo(MaterialTabBarComponent, isEqual);\n\nexport default MaterialTabBar;\n"]}